{
   "errors" : {
      "\u003C/br>" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A \u003Ccode>&lt;/br&gt;\u003C/code> end tag is not allowed.  It is interpreted\u000Aas a start tag.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>&lt;/br&gt;\u003C/code> 終了タグは認められていません。\u000A\u003Ccode>&lt;/br&gt;\u003C/code> 終了タグは開始タグとみなされます。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is a \u003Ccode>&lt;/br&gt;\u003C/code> end tag",
            "ja" : "\u003Ccode>&lt;/br&gt;\u003C/code> 終了タグがあります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "in-body-end-br" : 1
         },
         "parser_tests" : [
            {
               "index" : 15,
               "input" : "\u003C!DOCTYPE HTML>\u003C/br>"
            }
         ]
      },
      "\u003C/p>" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A \u003Ccode>&lt;/p&gt;\u003C/code> end tag is not allowed unless there is an\u000Aopening \u003Ccode>p\u003C/code> element.  It is interpreted as a start tag.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>&lt;/p&gt;\u003C/code> 終了タグは、開いている \u000A\u003Ccode>p\u003C/code> 要素を閉じる時以外認められていません。\u000A\u003Ccode>&lt;/p&gt;\u003C/code> 終了タグは開始タグとみなされます。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is a \u003Ccode>&lt;/p&gt;\u003C/code> end tag while there is no\u000Aopening \u003Ccode>p\u003C/code> element",
            "ja" : "開いている \u003Ccode>p\u003C/code> 要素はありませんが、 \u003Ccode>&lt;/p&gt;\u003C/code> \u000A終了タグがあります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "in-body-end-p" : 1
         },
         "parser_tests" : [
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/p>"
            }
         ]
      },
      "NULL" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The \u003Ccode>U\u002B0000\u003C/code> \u003Ccode class=\u0022charname\u0022>NULL\u003C/code>\u000Acharacter must not be used in a document.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>U\u002B0000\u003C/code> \u003Ccode class=\u0022charname\u0022>NULL\u003C/code> \u000A文字を使ってはいけません。\u003C/p>"
         },
         "layer" : "character-set",
         "message" : {
            "en" : "There is a \u003Ccode class=\u0022charname\u0022>NULL\u003C/code> character",
            "ja" : "\u003Ccode class=\u0022charname\u0022>NULL\u003C/code> 文字があります"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "NULL" : 1
         }
      },
      "after head" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There is a start tag of an element that should be a child of the\u000A\u003Ccode>head\u003C/code> element, or another \u003Ccode>&lt;head&gt;\u003C/code> start\u000Atag, after the \u003Ccode>&lt;/head&gt;\u003C/code> end tag.\u000A\u000A\u003C/p>\u003Cp>Only white space characters and comments are allowed between the\u000A\u003Ccode>&lt;/head&gt;\u003C/code> end tag and the \u003Ccode>&lt;body&gt;\u003C/code> start\u000Atag.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>head\u003C/code> 要素の子供となるべき要素の開始タグが、\u000A\u003Ccode>&lt;/head&gt;\u003C/code> 終了タグよりも後にあります。\u000A\u000A\u003C/p>\u003Cp>\u003Ccode>&lt;/head&gt;\u003C/code> 終了タグと \u003Ccode>&lt;body&gt;\u003C/code>\u000A開始タグの間には空白文字と注釈しか書けません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is a start-tag \u003Ccode>&lt;\u003Cvar>{text}\u003C/var>&gt;\u003C/code> after the\u000A\u003Ccode>&lt;/head&gt;\u003C/code> end tag",
            "ja" : "開始タグ \u003Ccode>&lt;\u003Cvar>{text}\u003C/var>&gt;\u003C/code> が終了タグ\u000A\u003Ccode>&lt;/head&gt;\u003C/code> より後にあります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "after-head-start-b3lmnsstt" : 1,
            "after-head-start-head" : 1
         },
         "parser_tests" : [
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html>\u003C/head>\u003Clink>"
            }
         ]
      },
      "after-after-body-else" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>Nothing other than white space characters and comments are allowed\u000Aafter the end tag of the \u003Ccode>html\u003C/code> element.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>html\u003C/code> 要素の終了タグの後には、空白と注釈以外は何も書けません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is a text or tag after the \u003Ccode>&lt;/html&gt;\u003C/code> end tag",
            "ja" : "\u003Ccode>&lt;/html&gt;\u003C/code> 終了タグの後にテキストやタグがあります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "after-after-body-else" : 1,
            "after-after-frameset-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html>\u003C/html>\u003Cp>"
            }
         ]
      },
      "after-body-else" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>Nothing other than the end tag of the \u003Ccode>html\u003C/code> element,\u000Awhite space characters, and comments are allowed after the end tag of\u000Athe \u003Ccode>body\u003C/code> element or the outermost \u003Ccode>frameset\u003C/code>\u000Aelement.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>body\u003C/code> 要素や最外 \u003Ccode>frameset\u003C/code> 要素の終了タグの後には、\u000A\u003Ccode>html\u003C/code> 要素の終了タグと空白、注釈以外は何も書けません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is a text or tag after the end tag of the body element",
            "ja" : "文書 \u003Ccode>body\u003C/code> 要素の終了タグの後にテキストやタグがあります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "after-body-else" : 1,
            "after-frameset-else" : 1
         }
      },
      "attr:no =" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There must be a \u003Ccode>=\u003C/code> character between an attribute name\u000Aand an attribute value.  Characters \u003Ccode>\u0022\u003C/code> and \u003Ccode>'\u003C/code>\u000Acannot be used as part of an attribute name or an unquoted attribute\u000Avalue.\u003C/p>",
            "ja" : "\u003Cp>属性名と属性値の間には文字 \u003Ccode>=\u003C/code> \u000Aが必要です。また、文字 \u003Ccode>\u0022\u003C/code> や文字 \u003Ccode>'\u003C/code>\u000Aを属性名や括られていない属性値に使うことはできません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "No \u003Ccode>=\u003C/code> between attribute name and value",
            "ja" : "属性名と属性値の間に \u003Ccode>=\u003C/code> がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-attribute-name-0022" : 1,
            "after-attribute-name-0027" : 1
         },
         "parser_tests" : [
            {
               "index" : 24,
               "input" : "\u003C!DOCTYPE html>\u003Cfoo bar \u0022>\u003C/foo>"
            },
            {
               "index" : 24,
               "input" : "\u003C!DOCTYPE html>\u003Cfoo bar '>\u003C/foo>"
            }
         ]
      },
      "bad attribute name" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>An attribute name cannot contain a \u003Ccode>\u0022\u003C/code> or \u003Ccode>'\u003C/code>\u000Acharacter, as it is used as a quotation mark of an attribute value.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>\u0022\u003C/code> や \u003Ccode>'\u003C/code> は属性値の引用符として使われるので、\u000A属性名に含めることはできません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The attribute name contains a \u003Ccode>\u0022\u003C/code> or \u003Ccode>'\u003C/code>",
            "ja" : "属性名に \u003Ccode>\u0022\u003C/code> や \u003Ccode>'\u003C/code> が含まれています"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "attribute-name-0022" : 1,
            "attribute-name-0027" : 1,
            "before-attribute-name-0022" : 1,
            "before-attribute-name-0027" : 1
         },
         "parser_tests" : [
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html>\u003Cp foo\u0022aa>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html>\u003Cp foo'aa>"
            }
         ]
      },
      "bad attribute value" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>In an unquoted attribute value, characters \u003Ccode>\u0022\u003C/code>\u000A(\u003Ccode>U\u002B0022\u003C/code> \u003Ccode class=\u0022charname\u0022>QUOTATION MARK\u003C/code>),\u000A\u003Ccode>'\u003C/code> (\u003Ccode>U\u002B0026\u003C/code> \u003Ccode class=\u0022charname\u0022>APOSTROPHE\u003C/code>), and \u003Ccode>=\u003C/code>\u000A(\u003Ccode>U\u002B003D\u003C/code> \u003Ccode class=\u0022charname\u0022>EQUAL SIGN\u003C/code>) are not\u000Aallowed.  To contain these characters in an attribute value, the\u000Aentire attribute value must be quoted by \u003Ccode>\u0022\u003C/code> or\u000A\u003Ccode>'\u003C/code>.\u000A\u000A\u003C/p>\u003Cp>Note that an unquoted attribute value cannot be the empty string.\u000AFor example, \u003Ccode class=\u0022html bad\u000Aexample\u0022>&lt;foo \u003Cmark>bar= baz=\u003C/mark>&gt;\u003C/code> is\u000Ainterpreted to have a \u003Ccode>bar\u003C/code> attribute whose value is\u000A\u003Ccode>bar=\u003C/code> (with a parse error as the \u003Ccode>=\u003C/code> character\u000Acannot be used in an unquoted attribute value).  To represent empty\u000Aattribute value, omit the \u003Ccode>=\u003C/code> character, or explicitly\u000Aspecify an empty quoted string: \u003Ccode class=\u0022html bad\u000Aexample\u0022>&lt;foo bar baz=\u003Cmark>\u0022\u0022\u003C/mark>&gt;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>引用符で括られていない属性値では \u003Ccode>\u0022\u003C/code>\u000A(\u003Ccode>U\u002B0022\u003C/code> \u003Ccode class=\u0022charname\u0022>QUOTATION MARK\u003C/code>),\u000A\u003Ccode>'\u003C/code> (\u003Ccode>U\u002B0026\u003C/code> \u003Ccode class=\u0022charname\u0022>APOSTROPHE\u003C/code>), \u003Ccode>=\u003C/code>\u000A(\u003Ccode>U\u002B003D\u003C/code> \u003Ccode class=\u0022charname\u0022>EQUAL SIGN\u003C/code>)\u000Aは使えません。属性値にこれらを含めたいときは、\u000A全体を \u003Ccode>\u0022\u003C/code> や \u003Ccode>'\u003C/code> で括らなければいけません。\u000A\u000A\u003C/p>\u003Cp>なお、引用符で括られていない属性値は空文字列にできません。例えば、\u000A\u003Ccode class=\u0022html bad\u000Aexample\u0022>&lt;foo \u003Cmark>bar= baz=\u003C/mark>&gt;\u003C/code>\u000Aは \u003Ccode>bar\u003C/code> 属性の値が \u003Ccode>bar=\u003C/code> (で、 \u003Ccode>=\u003C/code>\u000Aを引用符で括られていない属性値では使えないため構文解析エラー)\u000Aと解釈されます。属性値が空であることを表すには、 \u003Ccode class=\u0022html bad\u000Aexample\u0022>&lt;foo bar baz=\u003Cmark>\u0022\u0022\u003C/mark>&gt;\u003C/code>\u000Aのように \u003Ccode>=\u003C/code> を省略するか、引用符を明示するかしないといけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "An unquoted attribute value contains \u003Ccode>\u0022\u003C/code>, \u003Ccode>'\u003C/code>,\u000A\u003Ccode>`\u003C/code>, or \u003Ccode>=\u003C/code>",
            "ja" : "引用符で括られていない属性値に \u003Ccode>\u0022\u003C/code>, \u003Ccode>'\u003C/code>,\u000A\u003Ccode>`\u003C/code>, \u003Ccode>=\u003C/code> が含まれています"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "attribute-value-unquoted-0022" : 1,
            "attribute-value-unquoted-0027" : 1,
            "attribute-value-unquoted-003d" : 1,
            "attribute-value-unquoted-0060" : 1,
            "before-attribute-value-003d" : 1,
            "before-attribute-value-003e" : 1,
            "before-attribute-value-0060" : 1
         },
         "parser_tests" : [
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=bar\u0022>"
            },
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=bar'>"
            },
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=bar`>"
            },
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=bar=>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=`>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo==>"
            },
            {
               "index" : 26,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo= bar=>"
            }
         ]
      },
      "bare etago" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There is a \u003Ccode>&lt;\u003C/code> (\u003Ccode>U\u002B003C\u003C/code> \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) character immediately followed\u000Aby a \u003Ccode>/\u003C/code> (\u003Ccode>U\u002B005F\u003C/code> \u003Ccode>SOLIDUS\u003C/code>)\u000Acharacter, which is not followed by a tag name.\u000A\u000A\u003C/p>\u003Cp>To represent a string \u003Ccode>&lt;/\u003C/code>, the \u003Ccode>&lt;\u003C/code>\u000Acharacter must be escaped as \u003Ccode>&amp;lt;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>&lt;\u003C/code> (\u003Ccode>U\u002B003C\u003C/code> \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) の後に\u000A\u003Ccode>/\u003C/code> (\u003Ccode>U\u002B005F\u003C/code> \u003Ccode>SOLIDUS\u003C/code>)\u000Aがありますが、その後にタグ名がありません。\u000A\u000A\u003C/p>\u003Cp>\u003Ccode>&lt;/\u003C/code> という文字列を表したい時は、 \u003Ccode>&lt;\u003C/code>\u000Aを \u003Ccode>&amp;lt;\u003C/code> とエスケープしなければいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The \u003Ccode>&lt;/\u003C/code> is not followed by a tag name",
            "ja" : "\u003Ccode>&lt;/\u003C/code> の後にタグ名がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "end-tag-open-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 17,
               "input" : "\u003C!DOCTYPE HTML>\u003C/!?>"
            }
         ]
      },
      "bare hcro" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The string \u003Ccode>&amp;#x\u003C/code> is used to introduce a hexadecimal\u000Acharacter reference.  It must be followed by a hexadecimal number,\u000Arepresenting the code point of a character, followed by a\u000A\u003Ccode>;\u003C/code> character.\u000A\u000A\u003C/p>\u003Cp>To represent a string \u003Ccode>&amp;#x\u003C/code>, the \u003Ccode>&amp;\u003C/code>\u000Acharacter must be escaped as \u003Ccode>&amp;amp;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>文字列 \u003Ccode>&amp;#x\u003C/code> は十六進数文字参照を表しています。\u000Aその後には文字の符号位置を表す十六進数と \u003Ccode>;\u003C/code> \u000Aが続かなければいけません。\u000A\u000A\u003C/p>\u003Cp>\u003Ccode>&amp;#x\u003C/code> という文字列自体を表したいときは、 \u003Ccode>&amp;\u003C/code>\u000Aは \u003Ccode>&amp;amp;\u003C/code> と書かなければいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is an \u003Ccode>&amp;#x\u003C/code> not followed by a code point number",
            "ja" : "\u003Ccode>&amp;#x\u003C/code> の後に符号位置の数値がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "character-reference-before-hexadecimal-number-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE HTML>&#x"
            },
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE HTML>&#Xzza"
            }
         ]
      },
      "bare nero" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The string \u003Ccode>&amp;#\u003C/code> is used to introduce a character\u000Areference.  It must be followed by a decimal number or a\u000A\u003Ccode>x\u003C/code> character followed by a hexadecimal number,\u000Arepresenting the code point of a character, followed by a\u000A\u003Ccode>;\u003C/code> character.\u000A\u000A\u003C/p>\u003Cp>To represent a string \u003Ccode>&amp;#\u003C/code>, the \u003Ccode>&amp;\u003C/code>\u000Acharacter must be escaped as \u003Ccode>&amp;amp;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>文字列 \u003Ccode>&amp;#\u003C/code> は文字参照を表しています。\u000Aその後には文字の符号位置を表す十進数か、 \u003Ccode>x\u003C/code>\u000Aと十六進数があって、その後に \u003Ccode>;\u003C/code> が続かなければいけません。\u000A\u000A\u003C/p>\u003Cp>\u003Ccode>&amp;#\u003C/code> という文字列自体を表したいときは、 \u003Ccode>&amp;\u003C/code>\u000Aは \u003Ccode>&amp;amp;\u003C/code> と書かなければいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is an \u003Ccode>&amp;#\u003C/code> not followed by a code point number",
            "ja" : "\u003Ccode>&amp;#\u003C/code> の後に符号位置の数値がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "character-reference-number-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE HTML>a&#"
            },
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE HTML>a&#abx"
            }
         ]
      },
      "bare stago" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A \u003Ccode>&lt;\u003C/code> (\u003Ccode class=\u0022char\u0022>U\u002B003C\u003C/code> \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) character which is not\u000A    part of any markup appears in the input.\u000A\u000A    \u003C/p>\u003Cp>The \u003Ccode>&lt;\u003C/code> character as a data character must\u000A    be escaped as:\u000A    \u003C/p>\u000A    \u003Cpre class=\u0022html example\u0022>\u000A\u003Ccode>&amp;lt;\u003C/code>\u003C/pre>",
            "ja" : "\u003Cp>文字 \u003Ccode>&lt;\u003C/code> (\u003Ccode class=\u0022char\u0022>U\u002B003C\u003C/code> \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) が出現しましたが、\u000A    正しいマーク付けの一部ではありません。\u003C/p>\u000A\u000A    \u003Cp>文字 \u003Ccode>&lt;\u003C/code> をデータ文字として表したい時は、\u000A    エスケープしなければなりません。\u003C/p>\u000A    \u003Cpre class=\u0022html example\u0022>\u000A\u003Ccode>&amp;lt;\u003C/code>\u003C/pre>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The \u003Ccode>&lt;\u003C/code> character is not followed by a tag name or a\u000A\u003Ccode>!\u003C/code>, \u003Ccode>/\u003C/code>, or \u003Ccode>?\u003C/code>",
            "ja" : "文字 \u003Ccode>&lt;\u003C/code> の次がタグ名でも\u000A\u003Ccode>!\u003C/code>, \u003Ccode>/\u003C/code>, \u003Ccode>?\u003C/code> のいずれでもありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1,
            "Whatpm::WebVTT::Parser" : 1
         },
         "parser_error_names" : {
            "tag-open-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 16,
               "input" : "\u003C!DOCTYPE HTML>\u003C\u0022"
            }
         ]
      },
      "bogus DOCTYPE" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There is a bogus string within the DOCTYPE.  The DOCTYPE must be\u000A\u003Ccode>&lt;!DOCTYPE HTML&gt;\u003C/code>.  No other string is required.\u003C/p>",
            "ja" : "DOCTYPE 内におかしな文字列があります。 DOCTYPE は\u000A\u003Ccode>&lt;!DOCTYPE HTML&gt;\u003C/code> だけでよく、\u000Aそれ以外の文字列を書いてはいけません。"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is a bogus string in the DOCTYPE",
            "ja" : "DOCTYPE 内におかしな文字列があります"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-doctype-name-else" : 1,
            "after-doctype-public-identifier-else" : 1,
            "after-doctype-public-keyword-else" : 1,
            "after-doctype-system-identifier-else" : 1,
            "after-doctype-system-keyword-else" : 1,
            "before-doctype-public-identifier-else" : 1,
            "before-doctype-system-identifier-else" : 1,
            "between-doctype-public-and-system-identifiers-else" : 1,
            "doctype-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 15,
               "input" : "\u003C!DOCTYPE html !>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html PUBLIC!>"
            },
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE html public \u0022a\u0022!>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html SYSTEM?>"
            },
            {
               "index" : 24,
               "input" : "\u003C!DOCTYPE html system \u0022\u0022@p>"
            },
            {
               "index" : 67,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022abc\u0022 \u0022http://www.w3.org/TR/html4/strict.dtd\u0022?>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html PUBLIC hoge>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html SYSTEM hoge>"
            },
            {
               "index" : 28,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022hoge\u0022hoge>"
            },
            {
               "index" : 29,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022hoge\u0022 hoge>"
            },
            {
               "index" : 9,
               "input" : "\u003C!DOCTYPE!>"
            }
         ]
      },
      "bogus comment" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There is a \u003Ccode>&lt;\u003C/code> (\u003Ccode>U\u002B003C\u003C/code> \u000A    \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) character\u000A    followed by a \u003Ccode>!\u003C/code> (\u003Ccode>U\u002B0021\u003C/code>\u000A    \u003Ccode class=\u0022charname\u0022>EXCLAMATION MARK\u003C/code>) character,\u000A    which is not followed by a \u003Ccode>--\u003C/code> or\u000A    \u003Ccode>DOCTYPE\u003C/code>.\u000A\u000A    \u003C/p>\u003Cdl class=\u0022switch\u0022>\u000A    \u003Cdt>Comments\u003C/dt>\u000A      \u003Cdd>In HTML document, comments must be introduced by\u000A      \u003Ccode class=\u0022example\u0022>&lt;!--\u003C/code> (\u003Ccode>&lt;!\u003C/code>\u000A      \u003Cem>immediately\u003C/em> followed\u000A      by \u003Cem>two\u003C/em> \u003Ccode>-\u003C/code>s) and must be terminated by\u000A      \u003Ccode class=\u0022example\u0022>--&gt;\u003C/code>.\u000A      Strings \u003Ccode>&lt;!\u003C/code> not followed\u000A      by \u003Ccode>--\u003C/code> and \u003Ccode>&lt;!-\u003C/code> not followed by\u000A      \u003Ccode>-\u003C/code> are not valid open delimiters for comments.\u003C/dd>\u000A    \u003Cdt>Marked sections, including \u003Ccode>CDATA\u003C/code> sections\u003C/dt>\u000A      \u003Cdd>Marked sections are not allowed in HTML elements.\u003C/dd>\u000A    \u003Cdt>Markup declarations\u003C/dt>\u000A      \u003Cdd>Markup declarations, except for \u003Ccode>DOCTYPE\u003C/code>\u000A      and comment declarations, are not allowed in HTML document.\u003C/dd>\u000A    \u003Cdt>String \u003Ccode>&lt;!\u003C/code>\u003C/dt>\u000A      \u003Cdd>String \u003Ccode>&lt;!\u003C/code> must be escaped as\u000A      \u003Ccode class=\u0022example\u0022>&amp;lt;!\u003C/code>.\u003C/dd>\u000A    \u003C/dl>",
            "ja" : "\u003Cp>\u003Ccode>&lt;\u003C/code> (\u003Ccode>U\u002B003C\u003C/code> \u000A    \u003Ccode class=\u0022charname\u0022>LESS-THAN SIGN\u003C/code>) の後に\u000A    \u003Ccode>!\u003C/code> (\u003Ccode>U\u002B0021\u003C/code>\u000A    \u003Ccode class=\u0022charname\u0022>EXCLAMATION MARK\u003C/code>) がありますが、\u000A    その後が \u003Ccode>--\u003C/code> でも \u003Ccode>DOCTYPE\u003C/code> でもありません。\u000A\u000A    \u003C/p>\u003Cdl class=\u0022switch\u0022>\u000A    \u003Cdt>注釈\u000A      \u003C/dt>\u003Cdd>HTML では注釈は\u000A      \u003Ccode class=\u0022example\u0022>&lt;!--\u003C/code> (\u003Ccode>&lt;!\u003C/code>\u000A      の\u003Cem>直後\u003C/em>に \u003Ccode>-\u003C/code> \u003Cem>2つ\u003C/em>)\u000A      からはじまり、\u000A      \u003Ccode class=\u0022example\u0022>--&gt;\u003C/code> で終わらなければいけません。\u000A      \u003Ccode>&lt;!\u003C/code> だけや \u003Ccode>&lt;!-\u003C/code> だけでは、\u000A      ただしい注釈ではありません。\u000A    \u003C/dd>\u003Cdt>\u003Ccode>CDATA\u003C/code> 区間など、マーク付け区間\u000A      \u003C/dt>\u003Cdd>HTML 要素内ではマーク付け区間は使えません。\u000A    \u003C/dd>\u003Cdt>マーク付け宣言\u000A      \u003C/dt>\u003Cdd>HTML 文書では \u003Ccode>DOCTYPE\u003C/code> 宣言と注釈宣言を除き、\u000A      マーク付け宣言は使えません。\u000A    \u003C/dd>\u003Cdt>文字列 \u003Ccode>&lt;!\u003C/code>\u003C/dt>\u000A      \u003Cdd>文字列 \u003Ccode>&lt;!\u003C/code> を表したいときは、\u000A      \u003Ccode class=\u0022example\u0022>&amp;lt;!\u003C/code> とエスケープしないといけません。\u000A    \u003C/dd>\u003C/dl>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The \u003Ccode>&lt;!\u003C/code> is not followed by \u003Ccode>--\u003C/code>",
            "ja" : "\u003Ccode>&lt;!\u003C/code> の後に \u003Ccode>--\u003C/code> がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "markup-declaration-open-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 17,
               "input" : "\u003C!DOCTYPE HTML>\u003C!HOGE>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML>\u003C!DOCTYPO>"
            }
         ]
      },
      "doctype:bad context" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There must not be anything other than white space characters and\u000Acomments before the DOCTYPE.  It cannot appear after another DOCTYPE\u000Aor within an element.\u003C/p>",
            "ja" : "\u003Cp>DOCTYPE の前に置けるのは空白と注釈だけです。DOCTYPE が2つあったり、\u000A要素の中にあったりしてはいけません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The DOCTYPE is not at the beginning of the document",
            "ja" : "DOCTYPE が文書の先頭ではありません"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "after-body-doctype" : 1,
            "after-frameset-doctype" : 1,
            "after-head-doctype" : 1,
            "before-head-doctype" : 1,
            "before-html-doctype" : 1,
            "in-body-doctype" : 1
         },
         "parser_tests" : [
            {
               "index" : 15,
               "input" : "\u003C!DOCTYPE html>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html>\u003Chtml>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003C/body>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 36,
               "input" : "\u003C!DOCTYPE HTML>\u003Cframeset>\u003C/frameset>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003C/head>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C!DOCTYPE HTML>"
            }
         ]
      },
      "empty end tag" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>In HTML, XML, and WebVTT, empty end tag, i.e. end\u000A    tag with no tag name, is not allowed.\u003C/p>\u000A    \u003Cp>To represent an end tag, specify the\u000A    tag name explicitly.\u003C/p>\u000A    \u003Cp>To represent a string with the \u003Ccode>&lt;\u003C/code> character,\u000A    use a character reference: \u003Ccode>&amp;lt;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>HTML、XML、WebVTT では、タグ名の無い空の終了タグは認められていません。\u003C/p>\u000A    \u003Cp>終了タグを記述する時はタグ名も明示しなければなりません。\u003C/p>\u000A    \u003Cp>「\u003Ccode>&lt;\u003C/code>」という文字を使いたい時は文字参照\u000A    「\u003Ccode>&amp;lt;\u003C/code>」を使わなければなりません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is an empty end tag",
            "ja" : "空の終了タグがあります"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1,
            "Whatpm::WebVTT::Parser" : 1
         },
         "parser_error_names" : {
            "end-tag-open-003e" : 1
         },
         "parser_tests" : [
            {
               "index" : 20,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp>\u003C/>"
            }
         ]
      },
      "in body:#eof" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>Except for some exceptions (e.g. \u003Ccode>body\u003C/code>,\u000A\u003Ccode>html\u003C/code>, \u003Ccode>p\u003C/code>, and so on), all elements must be\u000Aexplicitly closed by their end tags before the end of file.\u003C/p>",
            "ja" : "\u003Cp>いくつかの例外 (\u003Ccode>body\u003C/code>,\u000A\u003Ccode>html\u003C/code>, \u003Ccode>p\u003C/code> など) を除き、\u000A要素はすべてファイルの末尾までに終了タグで閉じなければいけません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The \u003Ccode>\u003Cvar>{text}\u003C/var>\u003C/code> element is not closed\u000Aat the end of file",
            "ja" : "ファイルの末尾で \u003Ccode>\u003Cvar>{text}\u003C/var>\u003C/code>\u000A要素が閉じられていません"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "in-body-eof" : 1
         },
         "parser_tests" : [
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Choge>",
               "text" : "hoge"
            }
         ],
         "text" : [
            "oe[-1]",
            "local name"
         ]
      },
      "nestc has no net" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>When an element is self-closing, the start tag must be closed by\u000A\u003Ccode>/&gt;\u003C/code>.  The \u003Ccode>/\u003C/code> character must be immediately\u000Afollowed by a \u003Ccode>&gt;\u003C/code> character.\u003C/p>",
            "ja" : "\u003Cp>要素をその場で閉じて内容を空とするときは、\u000A開始タグは \u003Ccode>/&gt;\u003C/code> で終えなければいけません。\u000A\u003Ccode>/\u003C/code> の直後に \u003Ccode>&gt;\u003C/code> が必要です。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The tag is not closed by \u003Ccode>&gt;\u003C/code> after \u003Ccode>/\u003C/code>",
            "ja" : "タグが \u003Ccode>/\u003C/code> の後 \u003Ccode>&gt;\u003C/code> で閉じられていません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "self-closing-start-tag-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 19,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp / >"
            },
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp/hoge>"
            }
         ]
      },
      "no DOCTYPE" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The document does not have the DOCTYPE.  An HTML document must\u000Abegin with the DOCTYPE (\u003Ccode>&lt;!DOCTYPE HTML&gt;\u003C/code>).\u000A\u000A\u003C/p>\u003Cp>Before the DOCTYPE, only white space characters and comments are\u000Aallowed.\u003C/p>",
            "ja" : "\u003Cp>この文書は DOCTYPE から始まっていません。HTML 文書は DOCTYPE\u000A(\u003Ccode>&lt;!DOCTYPE HTML&gt;\u003C/code>) から始まらなければいけません。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "There is no DOCTYPE",
            "ja" : "DOCTYPE がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "initial-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 0,
               "input" : "hoge"
            },
            {
               "index" : 7,
               "input" : "\u003C!---->hoge"
            }
         ]
      },
      "no DOCTYPE literal" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There must be a quoted string after the \u003Ccode>PUBLIC\u003C/code> or\u000A\u003Ccode>SYSTEM\u003C/code> keyword, containing the public or system\u000Aidentifier.\u003C/p>",
            "ja" : "\u003Cp>キーワード \u003Ccode>PUBLIC\u003C/code> や \u003Ccode>SYSTEM\u003C/code>\u000Aの後には、公開識別子かシステム識別子を引用符で括った文字列がなければいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is no quoted string",
            "ja" : "引用符で括られた文字列がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-doctype-public-keyword-003e" : 1,
            "after-doctype-system-keyword-003e" : 1,
            "before-doctype-public-identifier-003e" : 1,
            "before-doctype-system-identifier-003e" : 1
         },
         "parser_tests" : [
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html PUBLIC>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html PUBLIC >"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html system>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE html system  >"
            }
         ]
      },
      "no DOCTYPE name" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The DOCTYPE must be \u003Ccode>&lt;!DOCTYPE html&gt;\u003C/code> (in HTML) or\u000Amust contain the root element name (in XML).\u003C/p>",
            "ja" : "\u003Cp>DOCTYPE は \u003Ccode>&lt;!DOCTYPE html&gt;\u003C/code> とする (HTML)\u000Aか、根要素の名前を含める (XML) かしなければいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is no document type name",
            "ja" : "文書型名がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "before-doctype-name-003e" : 1
         }
      },
      "no refc" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A character or entity reference must be terminated by a\u000A\u003Ccode>;\u003C/code> character.\u003C/p>",
            "ja" : "\u003Cp>文字参照や実体参照の末尾には \u003Ccode>;\u003C/code> が必要です。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is no \u003Ccode>;\u003C/code> at the end of a reference",
            "ja" : "参照の末尾に \u003Ccode>;\u003C/code> がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "character-reference-decimal-number-else" : 1,
            "character-reference-hexadecimal-number-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 20,
               "input" : "\u003C!DOCTYPE HTML>&#125abc;"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>&#x125azabc;"
            },
            {
               "index" : 19,
               "input" : "\u003C!DOCTYPE HTML>&amp**"
            }
         ]
      },
      "no space before attr name" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There must be one or more white space characters between\u000A    attributes and before the first attribute.\u003C/p>\u000A\u000A    \u003Cp>Character \u003Ccode>U\u002B000C\u003C/code> cannot be used as a space before\u000A    an attribute in an HTML document.\u003C/p>\u000A\u000A    \u003Cp>Characters \u003Ccode>U\u002B0085\u003C/code> and \u003Ccode>U\u002B202B\u003C/code> cannot\u000A    be used as a space before an attribute in an HTML or XML 1.0\u000A    document.\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is no space before an attribute\u000A属性の前に空白がありません",
            "ja" : "\u003Cp>属性の間や最初の属性の前には空白文字が1つ以上必要です。\u003C/p>\u000A\u000A    \u003Cp>文字 \u003Ccode>U\u002B000C\u003C/code> を XML 文書の属性の前の空白として使うことはできません。\u003C/p>\u000A\u000A    \u003Cp>文字 \u003Ccode>U\u002B0085\u003C/code> や文字 \u003Ccode>U\u002B202B\u003C/code>\u000A    を HTML や XML 1.0 の文書の属性の前の空白として使うことはできません。\u003C/p>"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-attribute-value-quoted-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 24,
               "input" : "\u003C!DOCTYPE html>\u003Cp foo=\u0022\u0022bar=\u0022\u0022>"
            }
         ]
      },
      "no space before literal" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There must be one or more white space characters between the\u000Akeyword \u003Ccode>PUBLIC\u003C/code> or \u003Ccode>SYSTEM\u003C/code> and the quoted\u000Astring, and between two quoted strings.\u003C/p>",
            "ja" : "\u003Cp>キーワード \u003Ccode>PUBLIC\u003C/code> や \u003Ccode>SYSTEM\u003C/code>\u000Aとその後の括られた文字列の間や、括られた文字列2つの間には、\u000A1つ以上空白文字が必要です。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is no space before a quoted string",
            "ja" : "括られた文字列の前に空白がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-doctype-public-identifier-0022" : 1,
            "after-doctype-public-identifier-0027" : 1,
            "after-doctype-public-keyword-0022" : 1,
            "after-doctype-public-keyword-0027" : 1,
            "after-doctype-system-keyword-0022" : 1,
            "after-doctype-system-keyword-0027" : 1
         },
         "parser_tests" : [
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html PUBLIC\u0022abc\u0022>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html SYSTEM\u0022\u0022>"
            },
            {
               "index" : 24,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022\u0022\u0022\u0022>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html PUBLIC'abc'>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html SYSTEM''>"
            },
            {
               "index" : 27,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022abc\u0022'http'>"
            }
         ]
      },
      "not closed before ancestor end tag" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>Most of elements must be explicitly closed by its end tag, but\u000A    there is no such a tag.  There \u003Ci>is\u003C/i> an end tag for ancestor\u000A    element, or one of \u003Ccode>h\u003Cvar>n\u003C/var>\u003C/code> elements which is\u000A    different from the currently opened element.  The end tag closes\u000A    all descendant or mismatched \u003Ccode>h\u003Cvar>n\u003C/var>\u003C/code>\u000A    element.\u003C/p>\u000A\u000A    \u003Cp>Ensure all elements whose end tag can't be omitted have end\u000A    tags, their start and end tag names are matching, and they are not\u000A    misnested.\u003C/p>",
            "ja" : "\u003Cp>ほとんどの要素は終了タグで明示的に閉じなければいけませんが、\u000A    終了タグがありませんでした。しかし祖先の要素の終了タグか、\u000A    現在開いている要素とは違う \u003Ccode>h\u003Cvar>n\u003C/var>\u003C/code> 要素の終了タグはありました。\u000A    それによって子孫や間違った \u003Ccode>h\u003Cvar>n\u003C/var>\u003C/code> \u000A    要素が閉じられます。\u003C/p>\u000A\u000A    \u003Cp>終了タグを省略できない要素がすべて終了タグを持つこと、\u000A    開始タグと終了タグのタグ名が一致していること、\u000A    タグの入れ子関係が正しいことを確認してください。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The \u003Ccode>\u003Cvar>{text}\u003C/var>\u003C/code> element is not closed before the\u000A\u003Ccode>&lt;/\u003Cvar>{value}\u003C/var>&gt;\u003C/code> tag",
            "ja" : "この終了タグより前で \u003Ccode>\u003Cvar>{text}\u003C/var>\u003C/code> 要素が閉じられていません"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "in-body-end-a3bbcd5f4hhlmmnopssu-2" : 1,
            "in-body-end-applet-marquee-object-2" : 1,
            "in-body-end-body-2" : 1,
            "in-body-end-dd-dt-2" : 1,
            "in-body-end-else" : 1,
            "in-body-end-form-2" : 1,
            "in-body-end-form-4" : 1,
            "in-body-end-h6-2" : 1,
            "in-body-end-html-2" : 1,
            "in-body-end-li-2" : 1
         },
         "parser_tests" : [
            {
               "index" : 26,
               "input" : "\u003C!DOCTYPE HTML>\u003Cdiv>\u003Cspan>\u003C/div>",
               "text" : "span",
               "value" : "div"
            },
            {
               "index" : 30,
               "input" : "\u003C!DOCTYPE HTML>\u003Cmarquee>\u003Cspan>\u003C/marquee>",
               "text" : "span",
               "value" : "marquee"
            },
            {
               "index" : 26,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Cdiv>\u003C/body>",
               "text" : "div",
               "value" : "body"
            },
            {
               "index" : 31,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Cdt>\u003Cspan>\u003C/dt>",
               "text" : "span",
               "value" : "dt"
            },
            {
               "index" : 31,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Ch3>\u003Cspan>\u003C/h3>",
               "text" : "span",
               "value" : "h3"
            },
            {
               "index" : 33,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Cform>\u003Cspan>\u003C/form>",
               "text" : "span",
               "value" : "form"
            },
            {
               "index" : 43,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Ctemplate>\u003Cform>\u003Cspan>\u003C/form>\u003C/template>",
               "text" : "span",
               "value" : "form"
            },
            {
               "index" : 20,
               "input" : "\u003C!DOCTYPE HTML>\u003Cdiv>\u003C/html>",
               "text" : "div",
               "value" : "html"
            },
            {
               "index" : 33,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Choge>\u003Cspan>\u003C/hoge>",
               "text" : "span",
               "value" : "hoge"
            },
            {
               "index" : 25,
               "input" : "\u003C!DOCTYPE HTML>\u003Cli>\u003Cspan>\u003C/li>",
               "text" : "span",
               "value" : "li"
            }
         ],
         "text" : [
            "oe[-1]",
            "local name"
         ],
         "value" : [
            "token",
            "tag name"
         ]
      },
      "obs DOCTYPE" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The simplest DOCTYPE syntax \u003Ccode>&lt;!DOCTYPE html&gt;\u003C/code> should\u000Aalways be used.  Use of \u003Ccode>PUBLIC\u003C/code> or \u003Ccode>SYSTEM\u003C/code>\u000Aidentifiers, which was encouraged in 00s, is discouraged.\u003C/p>",
            "ja" : "\u003Cp>DOCTYPE は \u003Ccode>&lt;!DOCTYPE html&gt;\u003C/code> とだけあれば十分です。00\u000A年代には \u003Ccode>PUBLIC\u003C/code> や \u003Ccode>SYSTEM\u003C/code>\u000Aを書くのが流行りましたが、今は不要です。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The DOCTYPE has public and/or system identifiers",
            "ja" : "DOCTYPE に公開識別子やシステム識別子があります"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "initial-doctype" : 1
         },
         "parser_tests" : [
            {
               "index" : 0,
               "input" : "\u003C!DOCTYPE html4>"
            },
            {
               "index" : 0,
               "input" : "\u003C!DOCTYPE html PUBLIC \u0022-//W3C//DTD HTML 4.01 Transitional//EN\u0022>"
            },
            {
               "index" : 0,
               "input" : "\u003C!DOCTYPE HTML system \u0022\u0022>"
            }
         ]
      },
      "parser:EOF" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>There is an end-of-file within a tag, declaration, or section.\u003C/p>",
            "ja" : "\u003Cp>タグや宣言、区間の途中でファイルが終わっています。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "Unexpected end of file in a tag or declaration",
            "ja" : "タグや宣言の途中でファイルが途切れています"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "EOF" : 1
         }
      },
      "parser:NULL" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The \u003Ccode>U\u002B0000\u003C/code> \u003Ccode class=\u0022charname\u0022>NULL\u003C/code>\u000Acharacter must not be used in a document.  The \u003Ccode class=\u0022charname\u0022>NULL\u003C/code> character in an element is ignored.\u003C/p>",
            "ja" : "\u003Cp>\u003Ccode>U\u002B0000\u003C/code> \u003Ccode class=\u0022charname\u0022>NULL\u003C/code> \u000A文字を使ってはいけません。要素内の \u003Ccode class=\u0022charname\u0022>NULL\u003C/code>\u000A文字は無視されます。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The \u003Ccode>NULL\u003C/code> character is ignored",
            "ja" : "\u003Ccode>NULL\u003C/code> 文字は無視されます"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "in-body-null" : 1
         }
      },
      "parser:comment closed" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A comment must be closed by a \u003Ccode>--&gt;\u003C/code>, whose\u000A\u003Ccode>--\u003C/code> must not be the \u003Ccode>-\u003C/code>s in\u000A\u003Ccode>&lt;!--\u003C/code>.\u000A\u000A\u003C/p>\u003Cp>A comment's data cannot start with \u003Ccode>&gt;\u003C/code> or\u000A\u003Ccode>-&gt;\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>注釈は \u003Ccode>--&gt;\u003C/code> で閉じなければいけませんが、その中の\u000A\u003Ccode>--\u003C/code> は \u003Ccode>&lt;!--\u003C/code> の \u003Ccode>-\u003C/code>\u000Aと重複していてはいけません。\u000A\u000A\u003C/p>\u003Cp>注釈のデータを \u003Ccode>&gt;\u003C/code> や \u003Ccode>-&gt;\u003C/code>\u000Aで始めることはできません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The comment is closed by \u003Ccode>&gt;\u003C/code>",
            "ja" : "注釈が \u003Ccode>&gt;\u003C/code> によって閉じられています"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "comment-start-003e" : 1,
            "comment-start-dash-003e" : 1
         },
         "parser_tests" : [
            {
               "index" : 19,
               "input" : "\u003C!DOCTYPE HTML>\u003C!-->"
            },
            {
               "index" : 20,
               "input" : "\u003C!DOCTYPE HTML>\u003C!--->"
            }
         ]
      },
      "parser:comment not closed" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A comment must be closed by \u003Ccode>--&gt;\u003C/code>.  The comment's data\u000Acannot contain \u003Ccode>--\u003C/code>, even when it is not immediately\u000Afollowed by a \u003Ccode>&gt;\u003C/code> character.  The comment's data cannot end\u000Awith a \u003Ccode>-\u003C/code> character.\u003C/p>",
            "ja" : "\u003Cp>注釈は \u003Ccode>--&gt;\u003C/code> で閉じなければいけません。\u000A注釈のデータには、 \u003Ccode>&gt;\u003C/code> が直後にないとしても、 \u003Ccode>--\u003C/code>\u000Aを含めてはいけません。注釈のデータが \u003Ccode>-\u003C/code>\u000Aで終わってはいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The comment contains \u003Ccode>--\u003C/code>",
            "ja" : "注釈が \u003Ccode>--\u003C/code> を含んでいます"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "comment-end-0021" : 1,
            "comment-end-002d" : 1,
            "comment-end-else" : 1
         },
         "parser_tests" : [
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003C!--a--!>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003C!--a--->"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003C!--a--b-->"
            }
         ]
      },
      "parser:literal not closed" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The public or system identifier must be terminated by an\u000Aappropriate quotation mark before the declaration in which the\u000Aidentifier appears is closed by \u003Ccode>&gt;\u003C/code>.\u000A\u000A\u003C/p>\u003Cp>The public or system identifier cannot contain a \u003Ccode>&gt;\u003C/code>\u000Acharacter.\u003C/p>",
            "ja" : "\u003Cp>公開識別子やシステム識別子は、宣言が \u003Ccode>&gt;\u003C/code>\u000Aで閉じられる前に適切な引用符で閉じなければいけません。\u000A\u000A\u003C/p>\u003Cp>公開識別子やシステム識別子に \u003Ccode>&gt;\u003C/code>\u000Aを含めることはできません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The quoted string is not terminated before the declaration\u000Ais closed",
            "ja" : "宣言が閉じられる前に閉じ引用符がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "doctype-public-identifier-double-quoted-003e" : 1,
            "doctype-public-identifier-single-quoted-003e" : 1,
            "doctype-system-identifier-double-quoted-003e" : 1,
            "doctype-system-identifier-single-quoted-003e" : 1
         },
         "parser_tests" : [
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML PUBLIC \u0022>\u0022>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML SYSTEM \u0022>\u0022>"
            },
            {
               "index" : 26,
               "input" : "\u003C!DOCTYPE HTML PUBLIC \u0022\u0022 \u0022>\u0022>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML PUBLIC '>'>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML SYSTEM '>'>"
            },
            {
               "index" : 26,
               "input" : "\u003C!DOCTYPE HTML PUBLIC \u0022\u0022 '>'>"
            }
         ]
      },
      "parser:no attr name" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>An attribute in a start tag must have a name.  The attribute name\u000Acannot contain a \u003Ccode>=\u003C/code> character, as it is used to separate\u000Aattribute name and value.\u003C/p>",
            "ja" : "\u003Cp>開始タグの属性には名前が必要です。属性名には \u003Ccode>=\u003C/code>\u000Aを含められません。 \u003Ccode>=\u003C/code> は属性名と属性値の区切りとして使われます。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "The attribute name is missing before \u003Ccode>=\u003C/code>",
            "ja" : "\u003Ccode>=\u003C/code> の前に属性名がありません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "before-attribute-name-003d" : 1
         },
         "parser_tests" : [
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE html>\u003Cp =foo>"
            }
         ]
      },
      "pio" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>Processing instructions (\u003Ccode>&lt;?\u003Cvar>...\u003C/var>?&gt;\u003C/code>) and\u000Athe XML declaration (\u003Ccode>&lt;?xml \u003Cvar>...\u003C/var>?&gt;\u003C/code>) are not\u000Aallowed in HTML document.\u000A\u000A    \u003C/p>\u003Cdl class=\u0022switch\u0022>\u000A    \u003Cdt>\u003Ccode>&lt;?xml?&gt;\u003C/code> (XML declaration)\u003C/dt>\u000A        \u003Cdd>The XML declaration is not necessary in an HTML document.\u003C/dd>\u000A    \u003Cdt>\u003Ccode>&lt;?xml-stylesheet?&gt;\u003C/code> (XML style sheet declaration)\u000A        \u003C/dt>\u003Cdd>Use HTML \u003Ccode>link\u003C/code> element with \u003Ccode>rel\u003C/code>\u000A        attribute set to \u003Ccode>stylesheet\u003C/code> (or,\u000A        \u003Ccode>alternate stylesheet\u003C/code> for an alternative style \u000A        sheet).\u000A          \u003Cpre class=\u0022example html\u0022>\u000A\u003Ccode>&lt;link rel=stylesheet href=\u0022path/to/stylesheet.css\u0022&gt;\u003C/code>\u003C/pre>\u000A        \u003C/dd>\u000A    \u003Cdt>\u003Ccode>&lt;?php?&gt;\u003C/code> (\u003Cabbr>PHP\u003C/abbr> code)\u003C/dt>\u000A        \u003Cdd>PHP is not supported.  It must be interpreted within\u000A        server such that public documents must not contain any\u000A        PHP code.\u000A    \u003C/dd>\u003Cdt>Other processing instructions\u003C/dt>\u000A        \u003Cdd>Processing instructions cannot be inserted in an HTML\u000A        document.  If a processing instruction is required, use XML\u000A        with an appropriate MIME type\u000A        (e.g. \u003Ccode>application/xhtml\u002Bxml\u003C/code>).\u000A    \u003C/dd>\u003C/dl>",
            "ja" : "\u003Cp>処理指令 (\u003Ccode>&lt;?\u003Cvar>...\u003C/var>?&gt;\u003C/code>) や\u000AXML 宣言 (\u003Ccode>&lt;?xml \u003Cvar>...\u003C/var>?&gt;\u003C/code>)\u000Aは HTML文書中では使えません。\u000A\u000A    \u003C/p>\u003Cdl class=\u0022switch\u0022>\u000A    \u003Cdt>\u003Ccode>&lt;?xml?&gt;\u003C/code> (XML 宣言)\u003C/dt>\u000A        \u003Cdd>XML 宣言は HTML 文書には不要です。\u000A    \u003C/dd>\u003Cdt>\u003Ccode>&lt;?xml-stylesheet?&gt;\u003C/code> (XML スタイルシート宣言)\u000A        \u003C/dt>\u003Cdd>HTML \u003Ccode>link\u003C/code> 要素の \u003Ccode>rel\u003C/code>\u000A        属性を \u003Ccode>stylesheet\u003C/code> (代替スタイルシートの場合は\u000A        \u003Ccode>alternate stylesheet\u003C/code>) にして使ってください。\u000A          \u003Cpre class=\u0022example html\u0022>\u000A\u003Ccode>&lt;link rel=stylesheet href=\u0022path/to/stylesheet.css\u0022&gt;\u003C/code>\u003C/pre>\u000A        \u003C/dd>\u000A    \u003Cdt>\u003Ccode>&lt;?php?&gt;\u003C/code> (\u003Cabbr>PHP\u003C/abbr> コード)\u003C/dt>\u000A        \u003Cdd>PHP には対応していません。 PHP はサーバー内で処理するものですから、\u000A        公開文書に PHP のコードが含まれていてはいけません。\u000A    \u003C/dd>\u003Cdt>その他の処理指令\u000A        \u003C/dt>\u003Cdd>処理指令は HTML 文書では使えません。\u000A        処理指令が必要なときは、適切な MIME 型\u000A        (\u003Ccode>application/xhtml\u002Bxml\u003C/code> など) で XML\u000A        を使ってください。\u000A    \u003C/dd>\u003C/dl>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "There is a processing instruction",
            "ja" : "処理指令があります"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "tag-open-003f" : 1
         },
         "parser_tests" : [
            {
               "index" : 1,
               "input" : "\u003C?xml version=\u00221.0\u0022?>\u003C!DOCTYPE HTML>"
            },
            {
               "index" : 16,
               "input" : "\u003C!DOCTYPE HTML>\u003C?php print (\u0022Hello!\u0022)?>"
            }
         ]
      },
      "stray end tag" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>The end tag has no corresponding start tag.  There must be a start\u000Atag with the same tag name before the end tag.  The end tag is\u000Aignored.\u003C/p>\u000A\u000A\u003Cp>Note that void elements have no end tag, that is, following\u000Aelements cannot have end tags: \u003Ccode>area\u003C/code>, \u003Ccode>base\u003C/code>,\u000A\u003Ccode>br\u003C/code>, \u003Ccode>col\u003C/code>, \u003Ccode>embed\u003C/code>,\u000A\u003Ccode>hr\u003C/code>, \u003Ccode>img\u003C/code>, \u003Ccode>input\u003C/code>,\u000A\u003Ccode>keygen\u003C/code>, \u003Ccode>link\u003C/code>, \u003Ccode>menuitem\u003C/code>,\u000A\u003Ccode>meta\u003C/code>, \u003Ccode>param\u003C/code>, \u003Ccode>source\u003C/code>,\u000A\u003Ccode>track\u003C/code>, and \u003Ccode>wbr\u003C/code>.\u003C/p>",
            "ja" : "\u003Cp>この終了タグには対応する開始タグがありません。\u000A終了タグより前に同じタグ名の開始タグが必要です。終了タグは無視されます。\u003C/p>\u000A\u000A\u003Cp>なお void 要素は終了タグを持ちませんから、次の要素では終了タグを使えません:\u000A\u003Ccode>area\u003C/code>, \u003Ccode>base\u003C/code>, \u003Ccode>br\u003C/code>,\u000A\u003Ccode>col\u003C/code>, \u003Ccode>embed\u003C/code>, \u003Ccode>hr\u003C/code>,\u000A\u003Ccode>img\u003C/code>, \u003Ccode>input\u003C/code>, \u003Ccode>keygen\u003C/code>,\u000A\u003Ccode>link\u003C/code>, \u003Ccode>menuitem\u003C/code>, \u003Ccode>meta\u003C/code>,\u000A\u003Ccode>param\u003C/code>, \u003Ccode>source\u003C/code>, \u003Ccode>track\u003C/code>,\u000A\u003Ccode>wbr\u003C/code>。\u003C/p>"
         },
         "layer" : "tree-construction",
         "message" : {
            "en" : "The tag \u003Ccode>&lt;/\u003Cvar>{value}\u003C/var>&gt;\u003C/code> has no corresponding\u000Astart tag",
            "ja" : "終了タグ \u003Ccode>&lt;/\u003Cvar>{value}\u003C/var>&gt;\u003C/code>\u000Aに対応する開始タグがありません"
         },
         "modules" : {
            "Web::HTML::Parser::tree_constructor" : 1
         },
         "parser_error_names" : {
            "after-body-end-html" : 1,
            "after-head-end-else" : 1,
            "before-head-end-else" : 1,
            "before-html-end-else" : 1,
            "in-body-end-a3bbcd5f4hhlmmnopssu" : 1,
            "in-body-end-applet-marquee-object" : 1,
            "in-body-end-body" : 1,
            "in-body-end-dd-dt" : 1,
            "in-body-end-else-2" : 1,
            "in-body-end-form" : 1,
            "in-body-end-form-3" : 1,
            "in-body-end-h6" : 1,
            "in-body-end-html" : 1,
            "in-body-end-li" : 1
         },
         "parser_tests" : [
            {
               "index" : 15,
               "input" : "\u003C!DOCTYPE html>\u003C/hoge>",
               "value" : "hoge"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html>\u003Chtml>\u003C/hoge>",
               "value" : "hoge"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html>\u003C/head>\u003C/hoge>",
               "value" : "hoge"
            },
            {
               "context" : "html",
               "index" : 22,
               "input" : "\u003C!DOCTYPE html>\u003C/body>\u003C/html>",
               "value" : "html"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/div>",
               "value" : "div"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/object>",
               "value" : "object"
            },
            {
               "context" : "body",
               "index" : 0,
               "input" : "\u003C/body>",
               "value" : "body"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/dt>",
               "value" : "dt"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/form>",
               "value" : "form"
            },
            {
               "index" : 35,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003Ctemplate>\u003Cbr>\u003C/form>",
               "value" : "form"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/h4>",
               "value" : "h4"
            },
            {
               "context" : "body",
               "index" : 0,
               "input" : "\u003C/html>",
               "value" : "html"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/hoge>",
               "value" : "hoge"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE HTML>\u003Cbody>\u003C/li>",
               "value" : "li"
            }
         ],
         "value" : [
            "token",
            "tag name"
         ]
      },
      "tag not closed" : {
         "default_level" : "m",
         "desc" : {
            "en" : "\u003Cp>A start or end tag must be closed by a \u003Ccode>&gt;\u003C/code> character\u000Abefore following text or another tag.\u000A\u000A\u003C/p>\u003Cp>A bare \u003Ccode>&lt;\u003C/code> character cannot be used in start or end\u000Atags (except within quoted attribute values).\u003C/p>",
            "ja" : "\u003Cp>開始タグや終了タグは、次のテキストや他のタグの前に文字\u000A\u003Ccode>&gt;\u003C/code> で閉じなければいけません。\u000A\u000A\u003C/p>\u003Cp>文字 \u003Ccode>&lt;\u003C/code> をそのまま開始タグや終了タグの中\u000A(括られた属性値以外) で使ってはいけません。\u003C/p>"
         },
         "layer" : "tokenization",
         "message" : {
            "en" : "Tag is not closed",
            "ja" : "タグが閉じられていません"
         },
         "modules" : {
            "Web::HTML::Parser::tokenizer" : 1
         },
         "parser_error_names" : {
            "after-attribute-name-003c" : 1,
            "attribute-name-003c" : 1,
            "attribute-value-unquoted-003c" : 1,
            "before-attribute-name-003c" : 1,
            "before-attribute-value-003c" : 1
         },
         "parser_tests" : [
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE html>\u003Cp foo \u003Cbar>"
            },
            {
               "index" : 21,
               "input" : "\u003C!DOCTYPE html>\u003Cp foo\u003Cbar>"
            },
            {
               "index" : 18,
               "input" : "\u003C!DOCTYPE html>\u003Cp \u003Cbar>"
            },
            {
               "index" : 22,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=\u003Cbar>"
            },
            {
               "index" : 23,
               "input" : "\u003C!DOCTYPE HTML>\u003Cp foo=a\u003Cbar>"
            }
         ]
      }
   },
   "parser_error_name_to_error_type" : {
      "EOF" : "parser:EOF",
      "NULL" : "NULL",
      "after-after-body-else" : "after-after-body-else",
      "after-after-frameset-else" : "after-after-body-else",
      "after-attribute-name-0022" : "attr:no =",
      "after-attribute-name-0027" : "attr:no =",
      "after-attribute-name-003c" : "tag not closed",
      "after-attribute-value-quoted-else" : "no space before attr name",
      "after-body-doctype" : "doctype:bad context",
      "after-body-else" : "after-body-else",
      "after-body-end-html" : "stray end tag",
      "after-doctype-name-else" : "bogus DOCTYPE",
      "after-doctype-public-identifier-0022" : "no space before literal",
      "after-doctype-public-identifier-0027" : "no space before literal",
      "after-doctype-public-identifier-else" : "bogus DOCTYPE",
      "after-doctype-public-keyword-0022" : "no space before literal",
      "after-doctype-public-keyword-0027" : "no space before literal",
      "after-doctype-public-keyword-003e" : "no DOCTYPE literal",
      "after-doctype-public-keyword-else" : "bogus DOCTYPE",
      "after-doctype-system-identifier-else" : "bogus DOCTYPE",
      "after-doctype-system-keyword-0022" : "no space before literal",
      "after-doctype-system-keyword-0027" : "no space before literal",
      "after-doctype-system-keyword-003e" : "no DOCTYPE literal",
      "after-doctype-system-keyword-else" : "bogus DOCTYPE",
      "after-frameset-doctype" : "doctype:bad context",
      "after-frameset-else" : "after-body-else",
      "after-head-doctype" : "doctype:bad context",
      "after-head-end-else" : "stray end tag",
      "after-head-start-b3lmnsstt" : "after head",
      "after-head-start-head" : "after head",
      "attribute-name-0022" : "bad attribute name",
      "attribute-name-0027" : "bad attribute name",
      "attribute-name-003c" : "tag not closed",
      "attribute-value-unquoted-0022" : "bad attribute value",
      "attribute-value-unquoted-0027" : "bad attribute value",
      "attribute-value-unquoted-003c" : "tag not closed",
      "attribute-value-unquoted-003d" : "bad attribute value",
      "attribute-value-unquoted-0060" : "bad attribute value",
      "before-attribute-name-0022" : "bad attribute name",
      "before-attribute-name-0027" : "bad attribute name",
      "before-attribute-name-003c" : "tag not closed",
      "before-attribute-name-003d" : "parser:no attr name",
      "before-attribute-value-003c" : "tag not closed",
      "before-attribute-value-003d" : "bad attribute value",
      "before-attribute-value-003e" : "bad attribute value",
      "before-attribute-value-0060" : "bad attribute value",
      "before-doctype-name-003e" : "no DOCTYPE name",
      "before-doctype-public-identifier-003e" : "no DOCTYPE literal",
      "before-doctype-public-identifier-else" : "bogus DOCTYPE",
      "before-doctype-system-identifier-003e" : "no DOCTYPE literal",
      "before-doctype-system-identifier-else" : "bogus DOCTYPE",
      "before-head-doctype" : "doctype:bad context",
      "before-head-end-else" : "stray end tag",
      "before-html-doctype" : "doctype:bad context",
      "before-html-end-else" : "stray end tag",
      "between-doctype-public-and-system-identifiers-else" : "bogus DOCTYPE",
      "character-reference-before-hexadecimal-number-else" : "bare hcro",
      "character-reference-decimal-number-else" : "no refc",
      "character-reference-hexadecimal-number-else" : "no refc",
      "character-reference-number-else" : "bare nero",
      "comment-end-0021" : "parser:comment not closed",
      "comment-end-002d" : "parser:comment not closed",
      "comment-end-else" : "parser:comment not closed",
      "comment-start-003e" : "parser:comment closed",
      "comment-start-dash-003e" : "parser:comment closed",
      "doctype-else" : "bogus DOCTYPE",
      "doctype-public-identifier-double-quoted-003e" : "parser:literal not closed",
      "doctype-public-identifier-single-quoted-003e" : "parser:literal not closed",
      "doctype-system-identifier-double-quoted-003e" : "parser:literal not closed",
      "doctype-system-identifier-single-quoted-003e" : "parser:literal not closed",
      "end-tag-open-003e" : "empty end tag",
      "end-tag-open-else" : "bare etago",
      "in-body-doctype" : "doctype:bad context",
      "in-body-end-a3bbcd5f4hhlmmnopssu" : "stray end tag",
      "in-body-end-a3bbcd5f4hhlmmnopssu-2" : "not closed before ancestor end tag",
      "in-body-end-applet-marquee-object" : "stray end tag",
      "in-body-end-applet-marquee-object-2" : "not closed before ancestor end tag",
      "in-body-end-body" : "stray end tag",
      "in-body-end-body-2" : "not closed before ancestor end tag",
      "in-body-end-br" : "\u003C/br>",
      "in-body-end-dd-dt" : "stray end tag",
      "in-body-end-dd-dt-2" : "not closed before ancestor end tag",
      "in-body-end-else" : "not closed before ancestor end tag",
      "in-body-end-else-2" : "stray end tag",
      "in-body-end-form" : "stray end tag",
      "in-body-end-form-2" : "not closed before ancestor end tag",
      "in-body-end-form-3" : "stray end tag",
      "in-body-end-form-4" : "not closed before ancestor end tag",
      "in-body-end-h6" : "stray end tag",
      "in-body-end-h6-2" : "not closed before ancestor end tag",
      "in-body-end-html" : "stray end tag",
      "in-body-end-html-2" : "not closed before ancestor end tag",
      "in-body-end-li" : "stray end tag",
      "in-body-end-li-2" : "not closed before ancestor end tag",
      "in-body-end-p" : "\u003C/p>",
      "in-body-eof" : "in body:#eof",
      "in-body-null" : "parser:NULL",
      "in-body-start-a" : null,
      "in-body-start-body" : null,
      "in-body-start-button" : null,
      "in-body-start-c3fht6" : null,
      "in-body-start-dd-dt" : null,
      "in-body-start-dd-dt-2" : null,
      "in-body-start-form" : null,
      "in-body-start-frameset" : null,
      "in-body-start-h6" : null,
      "in-body-start-html" : null,
      "in-body-start-image" : null,
      "in-body-start-isindex" : null,
      "in-body-start-li" : null,
      "in-body-start-nobr" : null,
      "in-body-start-rp-rt" : null,
      "in-caption-end-bccht6" : null,
      "in-caption-end-caption" : null,
      "in-caption-end-caption-2" : null,
      "in-caption-end-table" : null,
      "in-caption-end-table-2" : null,
      "in-caption-start-c3t6" : null,
      "in-caption-start-c3t6-2" : null,
      "in-cell-end-bc3h" : null,
      "in-cell-end-t5" : null,
      "in-cell-end-td-th" : null,
      "in-cell-end-td-th-2" : null,
      "in-cell-start-c3t6" : null,
      "in-column-group-doctype" : null,
      "in-column-group-else" : null,
      "in-column-group-end-col" : null,
      "in-column-group-end-colgroup" : null,
      "in-foreign-content-doctype" : null,
      "in-foreign-content-end-else" : null,
      "in-foreign-content-end-script" : null,
      "in-foreign-content-null" : null,
      "in-foreign-content-start-b5ccd4eeh8iillmmnopprs7ttuuv" : null,
      "in-foreign-content-start-font" : null,
      "in-frameset-doctype" : null,
      "in-frameset-else" : null,
      "in-frameset-end-frameset" : null,
      "in-frameset-eof" : null,
      "in-head-doctype" : null,
      "in-head-end-else" : null,
      "in-head-end-template" : null,
      "in-head-end-template-2" : null,
      "in-head-noscript-doctype" : null,
      "in-head-noscript-else" : null,
      "in-head-noscript-end-else" : null,
      "in-head-noscript-start-head-noscript" : null,
      "in-head-start-head" : null,
      "in-row-end-bc3htt" : null,
      "in-row-end-table" : null,
      "in-row-end-tbody-tfoot-thead" : null,
      "in-row-end-tr" : null,
      "in-row-start-c3t4" : null,
      "in-select-doctype" : null,
      "in-select-else" : null,
      "in-select-end-optgroup" : null,
      "in-select-end-option" : null,
      "in-select-end-select" : null,
      "in-select-in-table-end-ct7" : null,
      "in-select-in-table-start-ct7" : null,
      "in-select-null" : null,
      "in-select-start-input-keygen-textarea" : null,
      "in-select-start-select" : null,
      "in-table-body-end-bc3ht3" : null,
      "in-table-body-end-table" : null,
      "in-table-body-end-tbody-tfoot-thead" : null,
      "in-table-body-start-c3t3" : null,
      "in-table-body-start-td-th" : null,
      "in-table-char" : null,
      "in-table-doctype" : null,
      "in-table-else" : null,
      "in-table-end-bc3ht6" : null,
      "in-table-end-table" : null,
      "in-table-start-form" : null,
      "in-table-start-input" : null,
      "in-table-start-table" : null,
      "in-table-text-else" : null,
      "in-table-text-null" : null,
      "in-template-end-else" : null,
      "in-template-eof" : null,
      "initial-doctype" : "obs DOCTYPE",
      "initial-else" : "no DOCTYPE",
      "markup-declaration-open-else" : "bogus comment",
      "self-closing-start-tag-else" : "nestc has no net",
      "tag-open-003f" : "pio",
      "tag-open-else" : "bare stago",
      "text-eof" : null
   }
}
