{
   "dispatcher_html" : [
      "or",
      [
         "oe",
         "is empty"
      ],
      [
         "adjusted current node",
         "is",
         "HTML:*"
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            "MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext"
         ],
         [
            "token",
            "is a",
            "START-NOT:malignmark mglyph"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            "MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext"
         ],
         [
            "token",
            "is a",
            "CHAR"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            "MathML:annotation-xml"
         ],
         [
            "token",
            "is a",
            "START:svg"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            "MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html SVG:desc,SVG:foreignObject,SVG:title"
         ],
         [
            "token",
            "is a",
            "START"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            "MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html SVG:desc,SVG:foreignObject,SVG:title"
         ],
         [
            "token",
            "is a",
            "CHAR"
         ]
      ],
      [
         "token",
         "is a",
         "EOF"
      ]
   ],
   "element_matching" : {
      "element_groups" : [
         "HTML:*",
         "HTML:a,HTML:b,HTML:big,HTML:code,HTML:em,HTML:font,HTML:i,HTML:nobr,HTML:s,HTML:small,HTML:strike,HTML:strong,HTML:tt,HTML:u",
         "HTML:address,HTML:div",
         "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml",
         "HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp",
         "HTML:body",
         "HTML:button",
         "HTML:caption",
         "HTML:colgroup",
         "HTML:dd",
         "HTML:dt",
         "HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6",
         "HTML:html",
         "HTML:li",
         "HTML:ol,HTML:ul",
         "HTML:optgroup,HTML:option",
         "HTML:p",
         "HTML:rp,HTML:rt",
         "HTML:table",
         "HTML:tbody,HTML:tfoot,HTML:thead",
         "HTML:td,HTML:th",
         "HTML:template",
         "HTML:tr",
         "MathML:*",
         "MathML:annotation-xml",
         "MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html",
         "MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext",
         "SVG:*",
         "SVG:desc,SVG:foreignObject,SVG:title"
      ],
      "element_types" : [
         "HTML:a",
         "HTML:address",
         "HTML:applet",
         "HTML:article",
         "HTML:aside",
         "HTML:blockquote",
         "HTML:body",
         "HTML:button",
         "HTML:caption",
         "HTML:center",
         "HTML:colgroup",
         "HTML:dd",
         "HTML:details",
         "HTML:dialog",
         "HTML:dir",
         "HTML:div",
         "HTML:dl",
         "HTML:dt",
         "HTML:fieldset",
         "HTML:figcaption",
         "HTML:figure",
         "HTML:footer",
         "HTML:form",
         "HTML:frameset",
         "HTML:h1",
         "HTML:h2",
         "HTML:h3",
         "HTML:h4",
         "HTML:h5",
         "HTML:h6",
         "HTML:header",
         "HTML:hgroup",
         "HTML:html",
         "HTML:li",
         "HTML:listing",
         "HTML:main",
         "HTML:marquee",
         "HTML:menu",
         "HTML:nav",
         "HTML:nobr",
         "HTML:object",
         "HTML:ol",
         "HTML:optgroup",
         "HTML:option",
         "HTML:p",
         "HTML:pre",
         "HTML:ruby",
         "HTML:sarcasm",
         "HTML:script",
         "HTML:section",
         "HTML:select",
         "HTML:summary",
         "HTML:table",
         "HTML:tbody",
         "HTML:td",
         "HTML:template",
         "HTML:tfoot",
         "HTML:th",
         "HTML:thead",
         "HTML:tr",
         "HTML:ul",
         "SVG:script"
      ]
   },
   "ims" : {
      "after after body" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in body"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "after after frameset" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in body"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                     ],
                     "char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "after body" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "oe[0]",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "false_actions" : [
                        {
                           "im" : "after after body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "after frameset" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "im" : "after after frameset",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                     ],
                     "char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "after head" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body,br,html" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "body",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "body",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "body",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:base,basefont bgsound link,meta,noframes,script,style,template,title" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "item" : "head element pointer",
                     "type" : "push-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  },
                  {
                     "item" : "head element pointer",
                     "type" : "remove-oe"
                  }
               ]
            },
            "START:body" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in frameset",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "before head" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body,br,head,html" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "head",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "head",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "head",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "attrs" : "none",
                           "tag_name" : "head",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "set-head-element-pointer"
                        },
                        {
                           "im" : "in head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "after head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "before html" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body,br,head,html" : {
               "actions" : [
                  {
                     "local_name" : "html",
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "local_name" : "html",
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "local_name" : "html",
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "local_name" : "html",
                           "type" : "create an HTML element"
                        },
                        {
                           "type" : "append-to-document"
                        },
                        {
                           "type" : "push-oe"
                        },
                        {
                           "type" : "appcache-processing"
                        },
                        {
                           "im" : "before head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "head",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "set-head-element-pointer"
                        },
                        {
                           "im" : "in head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "after head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in body" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ],
               "also_used_by" : {
                  "in caption" : 1,
                  "in cell" : 1,
                  "in template" : 1
               }
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ],
               "also_used_by" : {
                  "after after body" : 1,
                  "after after frameset" : 1,
                  "in caption" : 1,
                  "in cell" : 1,
                  "in template" : 1
               }
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "ns" : "HTML",
                                    "same_tag_name_as_token" : 1
                                 },
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is",
                                    "node"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    },
                                    {
                                       "type" : "ignore the token"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:address,HTML:div HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:p HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:a,b big code em i s small strike strong tt u,font,nobr" : {
               "actions" : [
                  {
                     "type" : "adoption agency algorithm"
                  }
               ]
            },
            "END:address article aside details dialog dir fieldset figcaption figure footer header hgroup main nav section summary,blockquote center div dl menu ol ul,button,listing pre" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML-same-tag-name"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML-same-tag-name"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:applet marquee object" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML-same-tag-name"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML-same-tag-name"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:body" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML:body"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              "HTML:body HTML:dd HTML:dt HTML:html HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:tr"
                           ],
                           "type" : "if"
                        },
                        {
                           "im" : "after body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:br" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "reprocess \u003Cbr>"
                  }
               ]
            },
            "END:dd dt" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "except" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           },
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML-same-tag-name"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML-same-tag-name"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:form" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "set-node",
                           "value" : "form element pointer"
                        },
                        {
                           "target" : "form element pointer",
                           "type" : "set-null"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "abort these steps"
                              },
                              {
                                 "type" : "ignore the token"
                              }
                           ],
                           "cond" : [
                              "or",
                              [
                                 "node",
                                 "is null"
                              ],
                              [
                                 "oe",
                                 "not in scope",
                                 "all",
                                 "node"
                              ]
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is",
                              "node"
                           ],
                           "type" : "if"
                        },
                        {
                           "item" : "node",
                           "type" : "remove-oe"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        "HTML:template"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "abort these steps"
                              },
                              {
                                 "type" : "ignore the token"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "scope",
                              "HTML:form"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:form"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:form"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "all",
                        "HTML:template"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:h1 h2 h3 h4 h5 h6" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML-same-tag-name"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        "HTML:body"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              "HTML:body HTML:dd HTML:dt HTML:html HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:tr"
                           ],
                           "type" : "if"
                        },
                        {
                           "im" : "after body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:li" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "list item",
                        "HTML:li"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:li"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:li"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:p" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "p",
                           "type" : "insert an HTML element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe",
                     "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe",
                     "until" : "HTML:p"
                  }
               ]
            },
            "END:sarcasm" : {
               "actions" : [
                  {
                     "type" : "take a deep breath"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "ns" : "HTML",
                                    "same_tag_name_as_token" : 1
                                 },
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is",
                                    "node"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML-same-tag-name"
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    },
                                    {
                                       "type" : "ignore the token"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:address,HTML:div HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:p HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "stop parsing"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "false_actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:template"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "type" : "pop-template-ims"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "cond" : [
                        "stack of template insertion modes",
                        "is not empty"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              "HTML:body HTML:dd HTML:dt HTML:html HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:tr"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "type" : "if"
                  }
               ],
               "also_used_by" : {
                  "in caption" : 1,
                  "in cell" : 1,
                  "in column group" : 1,
                  "in row" : 1,
                  "in select" : 1,
                  "in select in table" : 1,
                  "in table" : 1,
                  "in table body" : 1
               }
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:a" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "remove_from_afe_and_oe" : 1,
                           "tag_name" : "a",
                           "type" : "adoption agency algorithm"
                        }
                     ],
                     "cond" : [
                        "afe",
                        "in scope",
                        "marker",
                        "HTML:a"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:address article aside details dialog dir fieldset figcaption figure footer header hgroup main nav section summary,blockquote center div dl menu ol ul,p" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:applet marquee object" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:area wbr,br,embed img,keygen" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:b big code em i s small strike strong tt u,font" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:base,basefont bgsound link,meta,noframes,script,style,template,title" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:body" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[1]",
                           "is not",
                           "HTML:body"
                        ],
                        [
                           "oe[-1]",
                           "is",
                           "HTML:html"
                        ],
                        [
                           "oe",
                           "in scope",
                           "all",
                           "HTML:template"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "node" : "oe[1]",
                           "type" : "set-attrs-if-missing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:button" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:button"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        "HTML:button"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:caption,col,colgroup,frame,head,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:dd dt" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:dd"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:dd"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML:dd"
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "pop-oe",
                                       "while" : "HTML:dd HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                                    },
                                    {
                                       "actions" : [
                                          {
                                             "type" : "parse error"
                                          }
                                       ],
                                       "cond" : [
                                          "oe[-1]",
                                          "is not",
                                          "HTML:dt"
                                       ],
                                       "type" : "if"
                                    },
                                    {
                                       "type" : "pop-oe",
                                       "until" : "HTML:dt"
                                    },
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:dt"
                                 ],
                                 "false_actions" : [
                                    {
                                       "actions" : [
                                          {
                                             "type" : "break-for-each"
                                          }
                                       ],
                                       "cond" : [
                                          "node",
                                          "is",
                                          "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                       ],
                                       "false_actions" : [
                                       ],
                                       "type" : "if"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:form" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "form element pointer",
                           "is not null"
                        ],
                        [
                           "oe",
                           "not in scope",
                           "all",
                           "HTML:template"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:p"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:p"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope",
                              "button",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "set-form-element-pointer"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[-1]",
                           "is",
                           "HTML:html"
                        ],
                        [
                           "oe[1]",
                           "is not",
                           "HTML:body"
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "frameset-ok flag",
                        "is",
                        "not ok"
                     ],
                     "false_actions" : [
                        {
                           "item" : "oe[1]",
                           "type" : "remove-tree"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "oe[1]"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in frameset",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:h1 h2 h3 h4 h5 h6" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:hr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "all",
                        "HTML:template"
                     ],
                     "type" : "if"
                  },
                  {
                     "node" : "oe[0]",
                     "type" : "set-attrs-if-missing"
                  }
               ]
            },
            "START:iframe" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:image" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "tag_name" : "img",
                     "type" : "change the token's tag name"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:input" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "cond" : [
                        "token[type]",
                        "lc is not",
                        "hidden"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:isindex" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "oe",
                           "not in scope",
                           "all",
                           "HTML:template"
                        ],
                        [
                           "form element pointer",
                           "is not null"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:p"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:p"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope",
                              "button",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "form",
                           "type" : "insert an HTML element"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "set-form-element-pointer"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "action",
                                 "type" : "set-form-attr"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has attr",
                              "action"
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "label",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "attrs" : "isindex",
                           "tag_name" : "input",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "form element pointer",
                                 "type" : "set-null"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:li" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:li"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:li"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML:li"
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                 ],
                                 "false_actions" : [
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:listing pre" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "ignore-next-lf"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:math" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust MathML attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "MathML",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:menuitem param source track" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:nobr" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "tag_name" : "nobr",
                           "type" : "adoption agency algorithm"
                        },
                        {
                           "type" : "reconstruct the active formatting elements"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        "HTML:nobr"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:noembed" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:noscript" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "state" : "RAWTEXT state",
                           "type" : "switch the tokenizer"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "text",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "scripting"
                     ],
                     "false_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert an HTML element"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:optgroup,option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:option"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:plaintext" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "PLAINTEXT state",
                     "type" : "switch the tokenizer"
                  }
               ]
            },
            "START:rp rt" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        "HTML:ruby"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:ruby"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:select" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "im" : "in select in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "im",
                        "is",
                        [
                           "in table",
                           "in caption",
                           "in table body",
                           "in row",
                           "in cell"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "im" : "in select",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:svg" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust SVG attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "SVG",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "quirks"
                        ],
                        [
                           "oe",
                           "in scope",
                           "button",
                           "HTML:p"
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in table",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:textarea" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "ignore-next-lf"
                  },
                  {
                     "state" : "RCDATA state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:xmp" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in caption" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in body"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in body"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body,col,colgroup,html,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:caption" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:caption"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:caption"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:caption"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:caption"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:caption"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:caption"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,col,colgroup,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:caption"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:caption"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:caption"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in cell" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in body"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in body"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body,caption,col,colgroup,html" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table,tbody tfoot thead,tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:td,HTML:th"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:td,HTML:th"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in row",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:td th" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML-same-tag-name"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML-same-tag-name"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in row",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,col,colgroup,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:td,HTML:th"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:td,HTML:th"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:td,HTML:th"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in row",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in column group" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:colgroup"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:col" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:colgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:colgroup"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:colgroup"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                           ],
                           "char_actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "type" : "process-chars",
                           "ws_seq_actions" : [
                              {
                                 "type" : "insert-chars"
                              }
                           ]
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:colgroup"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "im" : "in table",
                                 "type" : "switch the insertion mode"
                              },
                              {
                                 "type" : "reprocess the token"
                              }
                           ],
                           "type" : "text-with-optional-ws-prefix",
                           "ws_actions" : [
                              {
                                 "type" : "insert-chars"
                              }
                           ]
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in foreign content" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "lc is not",
                        {
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML:html"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "lc is",
                              {
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                        {
                           "actions" : [
                           ],
                           "cond" : [
                              "node",
                              "is not",
                              "HTML:*"
                           ],
                           "false_actions" : [
                              {
                                 "im" : [
                                    "current"
                                 ],
                                 "type" : "USING-THE-RULES-FOR"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:script" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "script-processing"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "SVG:script"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "lc is not",
                              {
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:html"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "pop-oe",
                                       "until" : "node"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "lc is",
                                    {
                                       "same_tag_name_as_token" : 1
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "between_actions" : [
                              {
                                 "actions" : [
                                 ],
                                 "cond" : [
                                    "node",
                                    "is not",
                                    "HTML:*"
                                 ],
                                 "false_actions" : [
                                    {
                                       "im" : [
                                          "current"
                                       ],
                                       "type" : "USING-THE-RULES-FOR"
                                    },
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "for-each-reverse-oe-as-node"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "adjust MathML attributes"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        "MathML:*"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "fixup-svg-tag-name"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        "SVG:*"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "adjust SVG attributes"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        "SVG:*"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "inherit",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "acknowledge the token's self-closing flag"
                              },
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "script-processing"
                              }
                           ],
                           "cond" : [
                              "and",
                              [
                                 "token tag_name",
                                 "is",
                                 "script"
                              ],
                              [
                                 "oe[-1]",
                                 "is",
                                 "SVG:*"
                              ]
                           ],
                           "false_actions" : [
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "acknowledge the token's self-closing flag"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:b big code em i s small strike strong tt u,blockquote center div dl menu ol ul,body,br,dd dt,embed img,h1 h2 h3 h4 h5 h6,head,hr,li,listing pre,meta,nobr,p,ruby span sub sup var,table" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "adjust MathML attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "MathML:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "fixup-svg-tag-name"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "SVG:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "adjust SVG attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "SVG:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "adjust foreign attributes"
                        },
                        {
                           "ns" : "inherit",
                           "type" : "insert a foreign element"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    },
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "script-processing"
                                    }
                                 ],
                                 "cond" : [
                                    "and",
                                    [
                                       "token tag_name",
                                       "is",
                                       "script"
                                    ],
                                    [
                                       "oe[-1]",
                                       "is",
                                       "SVG:*"
                                    ]
                                 ],
                                 "false_actions" : [
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has",
                              "self-closing flag"
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:* MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:font" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "adjust MathML attributes"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    "MathML:*"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "fixup-svg-tag-name"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    "SVG:*"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "adjust SVG attributes"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    "SVG:*"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "adjust foreign attributes"
                              },
                              {
                                 "ns" : "inherit",
                                 "type" : "insert a foreign element"
                              },
                              {
                                 "actions" : [
                                    {
                                       "actions" : [
                                          {
                                             "type" : "acknowledge the token's self-closing flag"
                                          },
                                          {
                                             "type" : "pop-oe"
                                          },
                                          {
                                             "type" : "script-processing"
                                          }
                                       ],
                                       "cond" : [
                                          "and",
                                          [
                                             "token tag_name",
                                             "is",
                                             "script"
                                          ],
                                          [
                                             "oe[-1]",
                                             "is",
                                             "SVG:*"
                                          ]
                                       ],
                                       "false_actions" : [
                                          {
                                             "type" : "pop-oe"
                                          },
                                          {
                                             "type" : "acknowledge the token's self-closing flag"
                                          }
                                       ],
                                       "type" : "if"
                                    }
                                 ],
                                 "cond" : [
                                    "token",
                                    "has",
                                    "self-closing flag"
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "fragment"
                           ],
                           "false_actions" : [
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "pop-oe",
                                 "while_not" : "HTML:* MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                              },
                              {
                                 "type" : "reprocess the token"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has attr",
                        [
                           "color",
                           "face",
                           "size"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "adjust MathML attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "MathML:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "fixup-svg-tag-name"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "SVG:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "adjust SVG attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              "SVG:*"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "adjust foreign attributes"
                        },
                        {
                           "ns" : "inherit",
                           "type" : "insert a foreign element"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                 ],
                                 "cond" : [
                                    "and",
                                    [
                                       "token tag_name",
                                       "is",
                                       "script"
                                    ],
                                    [
                                       "oe[-1]",
                                       "is",
                                       "SVG:*"
                                    ]
                                 ],
                                 "false_actions" : [
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has",
                              "self-closing flag"
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert-chars"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "null_seq_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in frameset" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:frameset" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:html"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "actions" : [
                              {
                                 "im" : "after frameset",
                                 "type" : "switch the insertion mode"
                              }
                           ],
                           "cond" : [
                              "and",
                              [
                                 "fragment"
                              ],
                              [
                                 "oe[-1]",
                                 "is not",
                                 "HTML:frameset"
                              ]
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:html"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:frame" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                     ],
                     "char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in head" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ],
               "also_used_by" : {
                  "in head noscript" : 1
               }
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body,br,html" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:head" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        "HTML:template"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:tr"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:template"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:template"
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "type" : "pop-template-ims"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:base,basefont bgsound link" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:meta" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "type" : "change-the-encoding-if-appropriate"
                  }
               ]
            },
            "START:noframes,style" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:noscript" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "state" : "RAWTEXT state",
                           "type" : "switch the tokenizer"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "text",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "scripting"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in head noscript",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:script" : {
               "actions" : [
                  {
                     "target" : "adjusted insertion location",
                     "type" : "set-appropriate-place"
                  },
                  {
                     "intended_parent" : "adjusted insertion location parent",
                     "type" : "create an HTML element"
                  },
                  {
                     "target" : "parser-inserted",
                     "type" : "set-node-flag"
                  },
                  {
                     "target" : "force-async",
                     "type" : "unset-node-flag"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "already started",
                           "type" : "set-node-flag"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "append-to-adjusted-insertion-location"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "state" : "script data state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:template" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in template",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "im" : "in template",
                     "type" : "push-template-ims"
                  }
               ]
            },
            "START:title" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RCDATA state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "after head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in head noscript" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in head"
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:br" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:noscript" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:basefont bgsound link,meta,noframes,style" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:head,noscript" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "after head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "in row" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in table"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in table"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body,caption,col,colgroup,html,td th" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:template HTML:tr"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML-same-tag-name"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:template HTML:tr"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:template HTML:tr"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,col,colgroup,tbody tfoot thead,tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:template HTML:tr"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:template HTML:tr"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in cell",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "target" : "pending table character tokens",
                           "type" : "set-empty"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "in table text",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              },
                              {
                                 "target" : "frameset-ok",
                                 "type" : "set-false"
                              }
                           ],
                           "null_char_actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "type" : "process-chars",
                           "ws_seq_actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              }
                           ]
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in select" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ],
               "also_used_by" : {
                  "in select in table" : 1
               }
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ],
               "also_used_by" : {
                  "in select in table" : 1
               }
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:optgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "oe[-1]",
                           "is",
                           "HTML:option"
                        ],
                        [
                           "oe[-2]",
                           "is",
                           "HTML:optgroup"
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:optgroup"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:option"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:select" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        "HTML:select"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:select"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:input,keygen,textarea" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        "HTML:select"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:select"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:optgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:option"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:optgroup"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:option"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:script,template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:select" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        "HTML:select"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:select"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars"
                  }
               ]
            }
         }
      },
      "in select in table" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in select"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in select"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "im" : "in select",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:caption,table,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:select"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "in select",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,table,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe",
                     "until" : "HTML:select"
                  },
                  {
                     "type" : "reset the insertion mode appropriately"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars"
                  }
               ]
            }
         }
      },
      "in table" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ],
               "also_used_by" : {
                  "in row" : 1,
                  "in table body" : 1
               }
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ],
               "also_used_by" : {
                  "in row" : 1,
                  "in table body" : 1
               }
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body,caption,col,colgroup,html,tbody tfoot thead,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:table"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:table"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:a" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "foster_parenting" : 1,
                           "remove_from_afe_and_oe" : 1,
                           "tag_name" : "a",
                           "type" : "adoption agency algorithm"
                        }
                     ],
                     "cond" : [
                        "afe",
                        "in scope",
                        "marker",
                        "HTML:a"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:address article aside details dialog dir fieldset figcaption figure footer header hgroup main nav section summary,blockquote center div dl menu ol ul,p" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:applet marquee object" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:area wbr,br,embed img,keygen" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:b big code em i s small strike strong tt u,font" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:base,basefont bgsound link,meta,noframes,title" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:body" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[1]",
                           "is not",
                           "HTML:body"
                        ],
                        [
                           "oe[-1]",
                           "is",
                           "HTML:html"
                        ],
                        [
                           "oe",
                           "in scope",
                           "all",
                           "HTML:template"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "node" : "oe[1]",
                           "type" : "set-attrs-if-missing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:button" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:caption" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:table HTML:template"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in caption",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:table HTML:template"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "colgroup",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:colgroup" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:table HTML:template"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:dd dt" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:dd"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:dd"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML:dd"
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "pop-oe",
                                       "while" : "HTML:dd HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                                    },
                                    {
                                       "actions" : [
                                          {
                                             "type" : "parse error"
                                          }
                                       ],
                                       "cond" : [
                                          "oe[-1]",
                                          "is not",
                                          "HTML:dt"
                                       ],
                                       "type" : "if"
                                    },
                                    {
                                       "type" : "pop-oe",
                                       "until" : "HTML:dt"
                                    },
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:dt"
                                 ],
                                 "false_actions" : [
                                    {
                                       "actions" : [
                                          {
                                             "type" : "break-for-each"
                                          }
                                       ],
                                       "cond" : [
                                          "node",
                                          "is",
                                          "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                       ],
                                       "false_actions" : [
                                       ],
                                       "type" : "if"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:form" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe",
                           "in scope",
                           "all",
                           "HTML:template"
                        ],
                        [
                           "form element pointer",
                           "is not null"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "set-form-element-pointer"
                        },
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:frame,head" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[-1]",
                           "is",
                           "HTML:html"
                        ],
                        [
                           "oe[1]",
                           "is not",
                           "HTML:body"
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "frameset-ok flag",
                        "is",
                        "not ok"
                     ],
                     "false_actions" : [
                        {
                           "item" : "oe[1]",
                           "type" : "remove-tree"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "oe[1]"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in frameset",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:h1 h2 h3 h4 h5 h6" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:hr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "all",
                        "HTML:template"
                     ],
                     "type" : "if"
                  },
                  {
                     "node" : "oe[0]",
                     "type" : "set-attrs-if-missing"
                  }
               ]
            },
            "START:iframe" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:image" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "tag_name" : "img",
                     "type" : "change the token's tag name"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:input" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "frameset-ok",
                                 "type" : "set-false"
                              }
                           ],
                           "cond" : [
                              "token[type]",
                              "lc is not",
                              "hidden"
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "token[type]",
                        "lc is not",
                        "hidden"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:isindex" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "oe",
                           "not in scope",
                           "all",
                           "HTML:template"
                        ],
                        [
                           "form element pointer",
                           "is not null"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:p"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:p"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope",
                              "button",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "foster_parenting" : 1,
                           "tag_name" : "form",
                           "type" : "insert an HTML element"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "set-form-element-pointer"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "action",
                                 "type" : "set-form-attr"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has attr",
                              "action"
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "foster_parenting" : 1,
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "attrs" : "none",
                           "foster_parenting" : 1,
                           "tag_name" : "label",
                           "type" : "insert an HTML element"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "attrs" : "isindex",
                           "foster_parenting" : 1,
                           "tag_name" : "input",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "attrs" : "none",
                           "foster_parenting" : 1,
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "form element pointer",
                                 "type" : "set-null"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              "HTML:template"
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:li" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "while" : "HTML:dd HTML:dt HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "HTML:li"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "HTML:li"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              "HTML:li"
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
                                 ],
                                 "false_actions" : [
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:listing pre" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:math" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust MathML attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "foster_parenting" : 1,
                     "ns" : "MathML",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:menuitem param source track" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:nobr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "foster_parenting" : 1,
                           "tag_name" : "nobr",
                           "type" : "adoption agency algorithm"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "reconstruct the active formatting elements"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        "HTML:nobr"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:noembed" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:noscript" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "foster_parenting" : 1,
                           "type" : "insert an HTML element"
                        },
                        {
                           "state" : "RAWTEXT state",
                           "type" : "switch the tokenizer"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "text",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "scripting"
                     ],
                     "false_actions" : [
                        {
                           "foster_parenting" : 1,
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "foster_parenting" : 1,
                           "type" : "insert an HTML element"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:optgroup,option" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:option"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:plaintext" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "PLAINTEXT state",
                     "type" : "switch the tokenizer"
                  }
               ]
            },
            "START:rp rt" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:p HTML:rp,HTML:rt"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        "HTML:ruby"
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        "HTML:ruby"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:script,style,template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:select" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "im" : "in select in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "im",
                        "is",
                        [
                           "in table",
                           "in caption",
                           "in table body",
                           "in row",
                           "in cell"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "im" : "in select",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:svg" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust SVG attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "foster_parenting" : 1,
                     "ns" : "SVG",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:table" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:table"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:table"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:tbody tfoot thead" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:table HTML:template"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:td th,tr" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:table HTML:template"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "tbody",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:textarea" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "ignore-next-lf"
                  },
                  {
                     "state" : "RCDATA state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:xmp" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe",
                           "while" : "HTML:dd HTML:dt HTML:li HTML:optgroup,HTML:option HTML:rp,HTML:rt"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "HTML:p"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "HTML:p"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        "HTML:p"
                     ],
                     "type" : "if"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "foster_parenting" : 1,
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "RAWTEXT state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "target" : "pending table character tokens",
                           "type" : "set-empty"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "in table text",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              },
                              {
                                 "target" : "frameset-ok",
                                 "type" : "set-false"
                              }
                           ],
                           "null_char_actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "type" : "process-chars",
                           "ws_seq_actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              }
                           ]
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in table body" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in table"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in table"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body,caption,col,colgroup,html,td th,tr" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tbody,HTML:tfoot,HTML:thead"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:tbody,HTML:tfoot,HTML:thead HTML:template"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML-same-tag-name"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:tbody,HTML:tfoot,HTML:thead HTML:template"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "using_the_rules_for" : "in body"
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,col,colgroup,tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        "HTML:tbody,HTML:tfoot,HTML:thead"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "while_not" : "HTML:html HTML:tbody,HTML:tfoot,HTML:thead HTML:template"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:tbody,HTML:tfoot,HTML:thead HTML:template"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "tr",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:tr" : {
               "actions" : [
                  {
                     "type" : "pop-oe",
                     "while_not" : "HTML:html HTML:tbody,HTML:tfoot,HTML:thead HTML:template"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "target" : "pending table character tokens",
                           "type" : "set-empty"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "in table text",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:tr"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              },
                              {
                                 "target" : "frameset-ok",
                                 "type" : "set-false"
                              }
                           ],
                           "null_char_actions" : [
                              {
                                 "type" : "parse error"
                              }
                           ],
                           "type" : "process-chars",
                           "ws_seq_actions" : [
                              {
                                 "foster_parenting" : 1,
                                 "type" : "reconstruct the active formatting elements"
                              },
                              {
                                 "foster_parenting" : 1,
                                 "type" : "insert-chars"
                              }
                           ]
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in table text" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "append-to-pending-table-character-tokens-list"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars"
                  }
               ]
            }
         }
      },
      "in template" : {
         "conds" : {
            "COMMENT" : {
               "using_the_rules_for" : "in body"
            },
            "DOCTYPE" : {
               "using_the_rules_for" : "in body"
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        "HTML:template"
                     ],
                     "false_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe",
                     "until" : "HTML:template"
                  },
                  {
                     "type" : "clear the list of active formatting elements up to the last marker"
                  },
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "type" : "reset the insertion mode appropriately"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in body",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:base,basefont bgsound link,meta,noframes,script,style,template,title" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption,colgroup,tbody tfoot thead" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in table",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in table",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in column group",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in row",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:tr" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in table body",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "null_char_actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "type" : "process-chars",
                     "ws_seq_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert-chars"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "initial" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "legacy doctype"
                     ],
                     "type" : "if"
                  },
                  {
                     "item" : "DocumentType",
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "doctype-switch"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "set-compat-mode",
                           "value" : "quirks"
                        }
                     ],
                     "cond" : [
                        "not iframe srcdoc document"
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "set-compat-mode",
                           "value" : "quirks"
                        }
                     ],
                     "cond" : [
                        "not iframe srcdoc document"
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "parse error"
                        },
                        {
                           "type" : "set-compat-mode",
                           "value" : "quirks"
                        }
                     ],
                     "cond" : [
                        "not iframe srcdoc document"
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "set-compat-mode",
                                 "value" : "quirks"
                              }
                           ],
                           "cond" : [
                              "not iframe srcdoc document"
                           ],
                           "type" : "if"
                        },
                        {
                           "im" : "before html",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "local_name" : "html",
                           "type" : "create an HTML element"
                        },
                        {
                           "type" : "append-to-document"
                        },
                        {
                           "type" : "push-oe"
                        },
                        {
                           "type" : "appcache-processing"
                        },
                        {
                           "im" : "before head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "head",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "set-head-element-pointer"
                        },
                        {
                           "im" : "in head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "after head",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "body",
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "text-with-optional-ws-prefix",
                     "ws_actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ]
                  }
               ]
            }
         }
      },
      "text" : {
         "conds" : {
            "COMMENT" : {
               "actions" : [
               ]
            },
            "DOCTYPE" : {
               "actions" : [
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "END:script" : {
               "actions" : [
                  {
                     "type" : "script-processing"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "script-processing"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "already started",
                           "type" : "set-node-flag"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        "HTML:script"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
               ]
            },
            "TEXT" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "insert-chars"
                        }
                     ],
                     "type" : "process-chars"
                  }
               ]
            }
         }
      }
   },
   "tag_name_groups" : [
      "a",
      "address article aside details dialog dir fieldset figcaption figure footer header hgroup main nav section summary",
      "applet marquee object",
      "area wbr",
      "b big code em i s small strike strong tt u",
      "base",
      "basefont bgsound link",
      "blockquote center div dl menu ol ul",
      "body",
      "br",
      "button",
      "caption",
      "col",
      "colgroup",
      "dd dt",
      "embed img",
      "font",
      "form",
      "frame",
      "frameset",
      "h1 h2 h3 h4 h5 h6",
      "head",
      "hr",
      "html",
      "iframe",
      "image",
      "input",
      "isindex",
      "keygen",
      "li",
      "listing pre",
      "malignmark mglyph",
      "math",
      "menuitem param source track",
      "meta",
      "nobr",
      "noembed",
      "noframes",
      "noscript",
      "optgroup",
      "option",
      "p",
      "plaintext",
      "rp rt",
      "ruby span sub sup var",
      "sarcasm",
      "script",
      "select",
      "style",
      "svg",
      "table",
      "tbody tfoot thead",
      "td th",
      "template",
      "textarea",
      "title",
      "tr",
      "xmp"
   ],
   "tree_patterns" : {
      "HTML integration point" : "MathML:annotation-xml@encoding=application/xhtml\u002Bxml,MathML:annotation-xml@encoding=text/html SVG:desc,SVG:foreignObject,SVG:title",
      "MathML text integration point" : "MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext",
      "formatting category" : "HTML:a,HTML:b,HTML:big,HTML:code,HTML:em,HTML:font,HTML:i,HTML:nobr,HTML:s,HTML:small,HTML:strike,HTML:strong,HTML:tt,HTML:u",
      "has an element in button scope" : "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:button HTML:caption HTML:html HTML:table HTML:td,HTML:th HTML:template MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title",
      "has an element in list item scope" : "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:caption HTML:html HTML:ol,HTML:ul HTML:table HTML:td,HTML:th HTML:template MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title",
      "has an element in scope" : "HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:caption HTML:html HTML:table HTML:td,HTML:th HTML:template MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title",
      "has an element in table scope" : "HTML:html HTML:table HTML:template",
      "special category" : "HTML:address,HTML:div HTML:applet,HTML:marquee,HTML:object,MathML:annotation-xml HTML:area,HTML:article,HTML:aside,HTML:base,HTML:basefont,HTML:bgsound,HTML:blockquote,HTML:br,HTML:center,HTML:col,HTML:details,HTML:dir,HTML:dl,HTML:embed,HTML:fieldset,HTML:figcaption,HTML:figure,HTML:footer,HTML:form,HTML:frame,HTML:frameset,HTML:head,HTML:header,HTML:hgroup,HTML:hr,HTML:iframe,HTML:img,HTML:input,HTML:isindex,HTML:link,HTML:listing,HTML:main,HTML:menu,HTML:menuitem,HTML:meta,HTML:nav,HTML:noembed,HTML:noframes,HTML:noscript,HTML:param,HTML:plaintext,HTML:pre,HTML:script,HTML:section,HTML:select,HTML:source,HTML:style,HTML:summary,HTML:textarea,HTML:title,HTML:track,HTML:wbr,HTML:xmp HTML:body HTML:button HTML:caption HTML:colgroup HTML:dd HTML:dt HTML:h1,HTML:h2,HTML:h3,HTML:h4,HTML:h5,HTML:h6 HTML:html HTML:li HTML:ol,HTML:ul HTML:p HTML:table HTML:tbody,HTML:tfoot,HTML:thead HTML:td,HTML:th HTML:template HTML:tr MathML:mi,MathML:mn,MathML:mo,MathML:ms,MathML:mtext SVG:desc,SVG:foreignObject,SVG:title"
   },
   "tree_patterns_not" : {
      "has an element in select scope" : "HTML:optgroup,HTML:option"
   }
}
