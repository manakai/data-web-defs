{
   "adjusted_mathml_attr_names" : {
      "definitionurl" : "definitionURL"
   },
   "adjusted_ns_attr_names" : {
      "xlink:actuate" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "actuate"
         ]
      ],
      "xlink:arcrole" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "arcrole"
         ]
      ],
      "xlink:href" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "href"
         ]
      ],
      "xlink:role" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "role"
         ]
      ],
      "xlink:show" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "show"
         ]
      ],
      "xlink:title" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "title"
         ]
      ],
      "xlink:type" : [
         "http://www.w3.org/1999/xlink",
         [
            "xlink",
            "type"
         ]
      ],
      "xml:base" : [
         "http://www.w3.org/XML/1998/namespace",
         [
            "xml",
            "base"
         ]
      ],
      "xml:lang" : [
         "http://www.w3.org/XML/1998/namespace",
         [
            "xml",
            "lang"
         ]
      ],
      "xml:space" : [
         "http://www.w3.org/XML/1998/namespace",
         [
            "xml",
            "space"
         ]
      ],
      "xmlns" : [
         "http://www.w3.org/2000/xmlns/",
         [
            null,
            "xmlns"
         ]
      ],
      "xmlns:xlink" : [
         "http://www.w3.org/2000/xmlns/",
         [
            "xmlns",
            "xlink"
         ]
      ]
   },
   "adjusted_svg_attr_names" : {
      "attributename" : "attributeName",
      "attributetype" : "attributeType",
      "basefrequency" : "baseFrequency",
      "baseprofile" : "baseProfile",
      "calcmode" : "calcMode",
      "clippathunits" : "clipPathUnits",
      "diffuseconstant" : "diffuseConstant",
      "edgemode" : "edgeMode",
      "filterunits" : "filterUnits",
      "glyphref" : "glyphRef",
      "gradienttransform" : "gradientTransform",
      "gradientunits" : "gradientUnits",
      "kernelmatrix" : "kernelMatrix",
      "kernelunitlength" : "kernelUnitLength",
      "keypoints" : "keyPoints",
      "keysplines" : "keySplines",
      "keytimes" : "keyTimes",
      "lengthadjust" : "lengthAdjust",
      "limitingconeangle" : "limitingConeAngle",
      "markerheight" : "markerHeight",
      "markerunits" : "markerUnits",
      "markerwidth" : "markerWidth",
      "maskcontentunits" : "maskContentUnits",
      "maskunits" : "maskUnits",
      "numoctaves" : "numOctaves",
      "pathlength" : "pathLength",
      "patterncontentunits" : "patternContentUnits",
      "patterntransform" : "patternTransform",
      "patternunits" : "patternUnits",
      "pointsatx" : "pointsAtX",
      "pointsaty" : "pointsAtY",
      "pointsatz" : "pointsAtZ",
      "preservealpha" : "preserveAlpha",
      "preserveaspectratio" : "preserveAspectRatio",
      "primitiveunits" : "primitiveUnits",
      "refx" : "refX",
      "refy" : "refY",
      "repeatcount" : "repeatCount",
      "repeatdur" : "repeatDur",
      "requiredextensions" : "requiredExtensions",
      "requiredfeatures" : "requiredFeatures",
      "specularconstant" : "specularConstant",
      "specularexponent" : "specularExponent",
      "spreadmethod" : "spreadMethod",
      "startoffset" : "startOffset",
      "stddeviation" : "stdDeviation",
      "stitchtiles" : "stitchTiles",
      "surfacescale" : "surfaceScale",
      "systemlanguage" : "systemLanguage",
      "tablevalues" : "tableValues",
      "targetx" : "targetX",
      "targety" : "targetY",
      "textlength" : "textLength",
      "viewbox" : "viewBox",
      "viewtarget" : "viewTarget",
      "xchannelselector" : "xChannelSelector",
      "ychannelselector" : "yChannelSelector",
      "zoomandpan" : "zoomAndPan"
   },
   "adjusted_svg_element_names" : {
      "altglyph" : "altGlyph",
      "altglyphdef" : "altGlyphDef",
      "altglyphitem" : "altGlyphItem",
      "animatecolor" : "animateColor",
      "animatemotion" : "animateMotion",
      "animatetransform" : "animateTransform",
      "clippath" : "clipPath",
      "feblend" : "feBlend",
      "fecolormatrix" : "feColorMatrix",
      "fecomponenttransfer" : "feComponentTransfer",
      "fecomposite" : "feComposite",
      "feconvolvematrix" : "feConvolveMatrix",
      "fediffuselighting" : "feDiffuseLighting",
      "fedisplacementmap" : "feDisplacementMap",
      "fedistantlight" : "feDistantLight",
      "fedropshadow" : "feDropShadow",
      "feflood" : "feFlood",
      "fefunca" : "feFuncA",
      "fefuncb" : "feFuncB",
      "fefuncg" : "feFuncG",
      "fefuncr" : "feFuncR",
      "fegaussianblur" : "feGaussianBlur",
      "feimage" : "feImage",
      "femerge" : "feMerge",
      "femergenode" : "feMergeNode",
      "femorphology" : "feMorphology",
      "feoffset" : "feOffset",
      "fepointlight" : "fePointLight",
      "fespecularlighting" : "feSpecularLighting",
      "fespotlight" : "feSpotLight",
      "fetile" : "feTile",
      "feturbulence" : "feTurbulence",
      "foreignobject" : "foreignObject",
      "glyphref" : "glyphRef",
      "lineargradient" : "linearGradient",
      "radialgradient" : "radialGradient",
      "textpath" : "textPath"
   },
   "dispatcher_html" : [
      "or",
      [
         "oe",
         "is empty"
      ],
      [
         "adjusted current node",
         "is",
         {
            "ns" : "HTML"
         }
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            {
               "MathML text integration point" : 1
            }
         ],
         [
            "and",
            [
               "token",
               "is a",
               "START"
            ],
            [
               "token tag_name",
               "is not",
               [
                  "mglyph",
                  "malignmark"
               ]
            ]
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            {
               "MathML text integration point" : 1
            }
         ],
         [
            "token",
            "is a",
            "CHAR"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            {
               "name" : "annotation-xml",
               "ns" : "MathML"
            }
         ],
         [
            "and",
            [
               "token",
               "is a",
               "START"
            ],
            [
               "token tag_name",
               "is",
               [
                  "svg"
               ]
            ]
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            {
               "HTML integration point" : 1
            }
         ],
         [
            "token",
            "is a",
            "START"
         ]
      ],
      [
         "and",
         [
            "adjusted current node",
            "is",
            {
               "HTML integration point" : 1
            }
         ],
         [
            "token",
            "is a",
            "CHAR"
         ]
      ],
      [
         "token",
         "is a",
         "EOF"
      ]
   ],
   "doctype_switch" : {
      "legacy" : [
         [
            null,
            "about:legacy-compat"
         ]
      ],
      "limited_quirks" : {
         "regexp" : {
            "public_id_prefix" : "(?:-//W3C//DTD XHTML 1\u005C.0 (?:TRANSITIONAL|FRAMESET)//)",
            "public_id_prefix_if_system_id" : "(?:-//W3C//DTD HTML 4\u005C.01 (?:TRANSITIONAL|FRAMESET)//)"
         },
         "values" : {
            "public_id_prefix" : {
               "-//W3C//DTD XHTML 1.0 FRAMESET//" : 1,
               "-//W3C//DTD XHTML 1.0 TRANSITIONAL//" : 1
            },
            "public_id_prefix_if_system_id" : {
               "-//W3C//DTD HTML 4.01 FRAMESET//" : 1,
               "-//W3C//DTD HTML 4.01 TRANSITIONAL//" : 1
            }
         }
      },
      "obsolete_permitted" : [
         [
            "-//W3C//DTD HTML 4.0//EN",
            null
         ],
         [
            "-//W3C//DTD HTML 4.0//EN",
            "http://www.w3.org/TR/REC-html40/strict.dtd"
         ],
         [
            "-//W3C//DTD HTML 4.01//EN",
            null
         ],
         [
            "-//W3C//DTD HTML 4.01//EN",
            "http://www.w3.org/TR/html4/strict.dtd"
         ],
         [
            "-//W3C//DTD XHTML 1.0 Strict//EN",
            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
         ],
         [
            "-//W3C//DTD XHTML 1.1//EN",
            "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
         ]
      ],
      "quirks" : {
         "regexp" : {
            "public_id" : "(?:(?:-/(?:/W3O//DTD W3 HTML STRICT 3\u005C.0//EN//|W3C/DTD HTML 4\u005C.0 TRANSITIONAL/EN)|HTML))",
            "public_id_prefix" : "(?:(?:-(?://(?:S(?:OFTQUAD(?: SOFTWARE//DTD HOTMETAL PRO 6\u005C.0::19990601|//DTD HOTMETAL PRO 4\u005C.0::19971010)::EXTENSIONS TO HTML 4\u005C.0|UN MICROSYSTEMS CORP\u005C.//DTD HOTJAVA(?: STRICT)? HTML|Q//DTD HTML 2\u005C.0 HOTMETAL \u005C\u002B EXTENSIONS|PYGLASS//DTD HTML 2\u005C.0 EXTENDED)|W(?:3(?:C//DTD HTML (?:3\u005C.2(?: (?:DRAFT|FINAL)|S DRAFT)?|4\u005C.0 (?:TRANSITIONAL|FRAMESET))|O//DTD W3 HTML 3\u005C.0)|EBTECHS//DTD MOZILLA HTML 2\u005C.0)|IETF//DTD HTML (?:2\u005C.(?:0(?: (?:STRICT(?: LEVEL [12])?|LEVEL [12]))?|1E)|3\u005C.(?:2(?: FINAL)?|0))|MICROSOFT//DTD INTERNET EXPLORER [23]\u005C.0 (?:HTML(?: STRICT)?|TABLES)|O'REILLY AND ASSOCIATES//DTD HTML (?:EXTEND(?:ED RELAX)?ED 1|2)\u005C.0|A(?:DVASOFT LTD|S)//DTD HTML 3\u005C.0 ASWEDIT \u005C\u002B EXTENSIONS|NETSCAPE COMM\u005C. CORP\u005C.//DTD(?: STRICT)? HTML)//|//(?:W(?:3C//DTD (?:HTML (?:EXPERIMENTAL (?:19960712|970421)|3 1995-03-24)|W3 HTML)|EBTECHS//DTD MOZILLA HTML)|IETF//DTD HTML(?: (?:STRICT(?: LEVEL [0123])?|LEVEL [0123]|3))?|METRIUS//DTD METRIUS PRESENTATIONAL)//)|\u005C\u002B//SILMARIL//DTD HTML PRO V0R11 19970101//))",
            "public_id_prefix_if_no_system_id" : "(?:-//W3C//DTD HTML 4\u005C.01 (?:TRANSITIONAL|FRAMESET)//)",
            "system_id" : "(?:HTTP://WWW\u005C.IBM\u005C.COM/DATA/DTD/V11/IBMXHTML1-TRANSITIONAL\u005C.DTD)"
         },
         "values" : {
            "public_id" : {
               "-//W3O//DTD W3 HTML STRICT 3.0//EN//" : 1,
               "-/W3C/DTD HTML 4.0 TRANSITIONAL/EN" : 1,
               "HTML" : 1
            },
            "public_id_prefix" : {
               "\u002B//SILMARIL//DTD HTML PRO V0R11 19970101//" : 1,
               "-//ADVASOFT LTD//DTD HTML 3.0 ASWEDIT \u002B EXTENSIONS//" : 1,
               "-//AS//DTD HTML 3.0 ASWEDIT \u002B EXTENSIONS//" : 1,
               "-//IETF//DTD HTML 2.0 LEVEL 1//" : 1,
               "-//IETF//DTD HTML 2.0 LEVEL 2//" : 1,
               "-//IETF//DTD HTML 2.0 STRICT LEVEL 1//" : 1,
               "-//IETF//DTD HTML 2.0 STRICT LEVEL 2//" : 1,
               "-//IETF//DTD HTML 2.0 STRICT//" : 1,
               "-//IETF//DTD HTML 2.0//" : 1,
               "-//IETF//DTD HTML 2.1E//" : 1,
               "-//IETF//DTD HTML 3.0//" : 1,
               "-//IETF//DTD HTML 3.2 FINAL//" : 1,
               "-//IETF//DTD HTML 3.2//" : 1,
               "-//IETF//DTD HTML 3//" : 1,
               "-//IETF//DTD HTML LEVEL 0//" : 1,
               "-//IETF//DTD HTML LEVEL 1//" : 1,
               "-//IETF//DTD HTML LEVEL 2//" : 1,
               "-//IETF//DTD HTML LEVEL 3//" : 1,
               "-//IETF//DTD HTML STRICT LEVEL 0//" : 1,
               "-//IETF//DTD HTML STRICT LEVEL 1//" : 1,
               "-//IETF//DTD HTML STRICT LEVEL 2//" : 1,
               "-//IETF//DTD HTML STRICT LEVEL 3//" : 1,
               "-//IETF//DTD HTML STRICT//" : 1,
               "-//IETF//DTD HTML//" : 1,
               "-//METRIUS//DTD METRIUS PRESENTATIONAL//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 2.0 HTML STRICT//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 2.0 HTML//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 2.0 TABLES//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 3.0 HTML STRICT//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 3.0 HTML//" : 1,
               "-//MICROSOFT//DTD INTERNET EXPLORER 3.0 TABLES//" : 1,
               "-//NETSCAPE COMM. CORP.//DTD HTML//" : 1,
               "-//NETSCAPE COMM. CORP.//DTD STRICT HTML//" : 1,
               "-//O'REILLY AND ASSOCIATES//DTD HTML 2.0//" : 1,
               "-//O'REILLY AND ASSOCIATES//DTD HTML EXTENDED 1.0//" : 1,
               "-//O'REILLY AND ASSOCIATES//DTD HTML EXTENDED RELAXED 1.0//" : 1,
               "-//SOFTQUAD SOFTWARE//DTD HOTMETAL PRO 6.0::19990601::EXTENSIONS TO HTML 4.0//" : 1,
               "-//SOFTQUAD//DTD HOTMETAL PRO 4.0::19971010::EXTENSIONS TO HTML 4.0//" : 1,
               "-//SPYGLASS//DTD HTML 2.0 EXTENDED//" : 1,
               "-//SQ//DTD HTML 2.0 HOTMETAL \u002B EXTENSIONS//" : 1,
               "-//SUN MICROSYSTEMS CORP.//DTD HOTJAVA HTML//" : 1,
               "-//SUN MICROSYSTEMS CORP.//DTD HOTJAVA STRICT HTML//" : 1,
               "-//W3C//DTD HTML 3 1995-03-24//" : 1,
               "-//W3C//DTD HTML 3.2 DRAFT//" : 1,
               "-//W3C//DTD HTML 3.2 FINAL//" : 1,
               "-//W3C//DTD HTML 3.2//" : 1,
               "-//W3C//DTD HTML 3.2S DRAFT//" : 1,
               "-//W3C//DTD HTML 4.0 FRAMESET//" : 1,
               "-//W3C//DTD HTML 4.0 TRANSITIONAL//" : 1,
               "-//W3C//DTD HTML EXPERIMENTAL 19960712//" : 1,
               "-//W3C//DTD HTML EXPERIMENTAL 970421//" : 1,
               "-//W3C//DTD W3 HTML//" : 1,
               "-//W3O//DTD W3 HTML 3.0//" : 1,
               "-//WEBTECHS//DTD MOZILLA HTML 2.0//" : 1,
               "-//WEBTECHS//DTD MOZILLA HTML//" : 1
            },
            "public_id_prefix_if_no_system_id" : {
               "-//W3C//DTD HTML 4.01 FRAMESET//" : 1,
               "-//W3C//DTD HTML 4.01 TRANSITIONAL//" : 1
            },
            "system_id" : {
               "HTTP://WWW.IBM.COM/DATA/DTD/V11/IBMXHTML1-TRANSITIONAL.DTD" : 1
            }
         }
      }
   },
   "ims" : {
      "after after body" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "after-after-body-else",
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "after after frameset" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "after-after-frameset-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "after body" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "oe[0]",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "after-body-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "after-body-else",
                     "type" : "parse error"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "after-body-end-html",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "false_actions" : [
                        {
                           "im" : "after after body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "after frameset" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "after-frameset-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "after-frameset-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "im" : "after after frameset",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "after head" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "after-head-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "body",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "after-head-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body br html" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "body",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:base basefont bgsound link meta noframes script style template title" : {
               "actions" : [
                  {
                     "name" : "after-head-start-b3lmnsstt",
                     "type" : "parse error"
                  },
                  {
                     "item" : "head element pointer",
                     "type" : "push-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  },
                  {
                     "item" : "head element pointer",
                     "type" : "remove-oe"
                  }
               ]
            },
            "START:body" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in frameset",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "name" : "after-head-start-head",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "before head" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "before-head-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "head",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-head-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body br head html" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "tag_name" : "head",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "set-head-element-pointer"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "before html" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "before-html-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "local_name" : "html",
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-html-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body br head html" : {
               "actions" : [
                  {
                     "attrs" : "none",
                     "local_name" : "html",
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "type" : "create an HTML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "can_have_manifest" : 1,
                     "type" : "appcache-processing"
                  },
                  {
                     "im" : "before head",
                     "type" : "switch the insertion mode"
                  }
               ]
            }
         }
      },
      "in body" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert a character"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "CHAR:0000" : {
               "actions" : [
                  {
                     "name" : "in-body-null",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-body-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "ns" : "HTML",
                                    "same_tag_name_as_token" : 1
                                 },
                                 "type" : "generate implied end tags"
                              },
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-end-else",
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "node"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-end-else-2",
                                       "type" : "parse error"
                                    },
                                    {
                                       "type" : "ignore the token"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    {
                                       "category" : "special"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:a b big code em font i nobr s small strike strong tt u" : {
               "actions" : [
                  {
                     "type" : "adoption agency algorithm"
                  }
               ]
            },
            "END:address article aside blockquote button center details dialog dir div dl fieldset figcaption figure footer header hgroup listing main menu nav ol pre section summary ul" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-a3bbcd5f4hhlmmnopssu",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-a3bbcd5f4hhlmmnopssu-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           }
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:applet marquee object" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-applet-marquee-object",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-applet-marquee-object-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:body" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-body",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "name" : "body",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-body-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              {
                                 "name" : [
                                    "dd",
                                    "dt",
                                    "li",
                                    "optgroup",
                                    "option",
                                    "p",
                                    "rp",
                                    "rt",
                                    "tbody",
                                    "td",
                                    "tfoot",
                                    "th",
                                    "thead",
                                    "tr",
                                    "body",
                                    "html"
                                 ],
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "im" : "after body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:br" : {
               "actions" : [
                  {
                     "name" : "in-body-end-br",
                     "type" : "parse error"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "br",
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "END:dd dt" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-dd-dt",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "except" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           },
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-dd-dt-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           }
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:form" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "set-node",
                           "value" : "form element pointer"
                        },
                        {
                           "target" : "form element pointer",
                           "type" : "set-null"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-form",
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "abort these steps"
                              },
                              {
                                 "type" : "ignore the token"
                              }
                           ],
                           "cond" : [
                              "or",
                              [
                                 "node",
                                 "is null"
                              ],
                              [
                                 "oe",
                                 "not in scope",
                                 "all",
                                 "node"
                              ]
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-form-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              "node"
                           ],
                           "type" : "if"
                        },
                        {
                           "item" : "node",
                           "type" : "remove-oe"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        {
                           "name" : "template",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-form-3",
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "abort these steps"
                              },
                              {
                                 "type" : "ignore the token"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "scope",
                              {
                                 "name" : "form",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-form-4",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "form",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "form",
                              "ns" : "HTML"
                           }
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "all",
                        {
                           "name" : "template",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:h1 h2 h3 h4 h5 h6" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-h6",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "name" : [
                              "h1",
                              "h2",
                              "h3",
                              "h4",
                              "h5",
                              "h6"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-h6-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : [
                                 "h1",
                                 "h2",
                                 "h3",
                                 "h4",
                                 "h5",
                                 "h6"
                              ],
                              "ns" : "HTML"
                           }
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:html" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-html",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "scope",
                        {
                           "name" : "body",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-html-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              {
                                 "name" : [
                                    "dd",
                                    "dt",
                                    "li",
                                    "optgroup",
                                    "option",
                                    "p",
                                    "rp",
                                    "rt",
                                    "tbody",
                                    "td",
                                    "tfoot",
                                    "th",
                                    "thead",
                                    "tr",
                                    "body",
                                    "html"
                                 ],
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "im" : "after body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:li" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-li",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "list item",
                        {
                           "name" : "li",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "except" : {
                              "name" : "li",
                              "ns" : "HTML"
                           },
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-end-li-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "li",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "li",
                              "ns" : "HTML"
                           }
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:p" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-end-p",
                           "type" : "parse error"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "p",
                           "type" : "insert an HTML element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "close a p element"
                  }
               ]
            },
            "END:sarcasm" : {
               "actions" : [
                  {
                     "type" : "take a deep breath"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "ns" : "HTML",
                                    "same_tag_name_as_token" : 1
                                 },
                                 "type" : "generate implied end tags"
                              },
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-end-else",
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "node"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-end-else-2",
                                       "type" : "parse error"
                                    },
                                    {
                                       "type" : "ignore the token"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    {
                                       "category" : "special"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "im" : "in template",
                           "type" : "USING-THE-RULES-FOR"
                        }
                     ],
                     "cond" : [
                        "stack of template insertion modes",
                        "is not empty"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-body-eof",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope not",
                              "all",
                              {
                                 "name" : [
                                    "dd",
                                    "dt",
                                    "li",
                                    "optgroup",
                                    "option",
                                    "p",
                                    "rp",
                                    "rt",
                                    "tbody",
                                    "td",
                                    "tfoot",
                                    "th",
                                    "thead",
                                    "tr",
                                    "body",
                                    "html"
                                 ],
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:a" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-a",
                           "type" : "parse error"
                        },
                        {
                           "remove_from_afe_and_oe" : 1,
                           "tag_name" : "a",
                           "type" : "adoption agency algorithm"
                        }
                     ],
                     "cond" : [
                        "afe",
                        "in scope",
                        "marker",
                        {
                           "name" : "a",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:address article aside blockquote center details dialog dir div dl fieldset figcaption figure footer header hgroup main menu nav ol p section summary ul" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:applet marquee object" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:area br embed img keygen wbr" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:b big code em font i s small strike strong tt u" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:base basefont bgsound link meta noframes script style template title" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:body" : {
               "actions" : [
                  {
                     "name" : "in-body-start-body",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[1]",
                           "is not",
                           {
                              "name" : "body",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "oe[-1]",
                           "is",
                           {
                              "name" : "html",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "oe",
                           "in scope",
                           "all",
                           {
                              "name" : "template",
                              "ns" : "HTML"
                           }
                        ]
                     ],
                     "false_actions" : [
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "node" : "oe[1]",
                           "type" : "set-attrs-if-missing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:button" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-button",
                           "type" : "parse error"
                        },
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "button",
                              "ns" : "HTML"
                           }
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        {
                           "name" : "button",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:caption col colgroup frame head tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "name" : "in-body-start-c3fht6",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:dd dt" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "name" : "dd",
                                    "ns" : "HTML"
                                 },
                                 "type" : "generate implied end tags"
                              },
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-start-dd-dt",
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    {
                                       "name" : "dd",
                                       "ns" : "HTML"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : {
                                    "name" : "dd",
                                    "ns" : "HTML"
                                 }
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "name" : "dd",
                                 "ns" : "HTML"
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "except" : {
                                          "name" : "dt",
                                          "ns" : "HTML"
                                       },
                                       "type" : "generate implied end tags"
                                    },
                                    {
                                       "actions" : [
                                          {
                                             "name" : "in-body-start-dd-dt-2",
                                             "type" : "parse error"
                                          }
                                       ],
                                       "cond" : [
                                          "oe[-1]",
                                          "is not",
                                          {
                                             "name" : "dt",
                                             "ns" : "HTML"
                                          }
                                       ],
                                       "type" : "if"
                                    },
                                    {
                                       "type" : "pop-oe",
                                       "until" : {
                                          "name" : "dt",
                                          "ns" : "HTML"
                                       }
                                    },
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    {
                                       "name" : "dt",
                                       "ns" : "HTML"
                                    }
                                 ],
                                 "false_actions" : [
                                    {
                                       "actions" : [
                                          {
                                             "type" : "break-for-each"
                                          }
                                       ],
                                       "cond" : [
                                          "node",
                                          "is",
                                          {
                                             "category" : "special",
                                             "except" : [
                                                "address",
                                                "div",
                                                "p"
                                             ]
                                          }
                                       ],
                                       "false_actions" : [
                                       ],
                                       "type" : "if"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:form" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-form",
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "form element pointer",
                           "is not null"
                        ],
                        [
                           "oe",
                           "not in scope",
                           "all",
                           {
                              "name" : "template",
                              "ns" : "HTML"
                           }
                        ]
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "close a p element"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope",
                              "button",
                              {
                                 "name" : "p",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "set-form-element-pointer"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              {
                                 "name" : "template",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "name" : "in-body-start-frameset",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe[-1]",
                           "is",
                           {
                              "name" : "html",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "oe[1]",
                           "is not",
                           {
                              "name" : "body",
                              "ns" : "HTML"
                           }
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "frameset-ok flag",
                        "is",
                        "not ok"
                     ],
                     "false_actions" : [
                        {
                           "item" : "oe[1]",
                           "type" : "remove-tree"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : "oe[1]"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in frameset",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:h1 h2 h3 h4 h5 h6" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-h6",
                           "type" : "parse error"
                        },
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : [
                              "h1",
                              "h2",
                              "h3",
                              "h4",
                              "h5",
                              "h6"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:hr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "name" : "in-body-start-html",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "all",
                        {
                           "name" : "template",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "node" : "oe[0]",
                           "type" : "set-attrs-if-missing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:iframe" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "type" : "generic raw text element parsing algorithm"
                  }
               ]
            },
            "START:image" : {
               "actions" : [
                  {
                     "name" : "in-body-start-image",
                     "type" : "parse error"
                  },
                  {
                     "tag_name" : "img",
                     "type" : "change the token's tag name"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:input" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        }
                     ],
                     "cond" : [
                        "token[type]",
                        "lc is not",
                        "hidden"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:isindex" : {
               "actions" : [
                  {
                     "name" : "in-body-start-isindex",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "oe",
                           "not in scope",
                           "all",
                           {
                              "name" : "template",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "form element pointer",
                           "is not null"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        },
                        {
                           "target" : "frameset-ok",
                           "type" : "set-false"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "close a p element"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "in scope",
                              "button",
                              {
                                 "name" : "p",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "form",
                           "type" : "insert an HTML element"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "set-form-element-pointer"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              {
                                 "name" : "template",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "action",
                                 "type" : "set-form-attr"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has attr",
                              "action"
                           ],
                           "type" : "if"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "label",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "attrs" : "isindex",
                           "tag_name" : "input",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "prompt-string"
                           ]
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "attrs" : "none",
                           "tag_name" : "hr",
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "actions" : [
                              {
                                 "target" : "form element pointer",
                                 "type" : "set-null"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "not in scope",
                              "all",
                              {
                                 "name" : "template",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:li" : {
               "actions" : [
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "except" : {
                                    "name" : "li",
                                    "ns" : "HTML"
                                 },
                                 "type" : "generate implied end tags"
                              },
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-body-start-li",
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    {
                                       "name" : "li",
                                       "ns" : "HTML"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : {
                                    "name" : "li",
                                    "ns" : "HTML"
                                 }
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "name" : "li",
                                 "ns" : "HTML"
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    {
                                       "category" : "special",
                                       "except" : [
                                          "address",
                                          "div",
                                          "p"
                                       ]
                                    }
                                 ],
                                 "false_actions" : [
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:listing pre" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "ignore-next-lf"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "START:math" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust MathML attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "MathML",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:menuitem param source track" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:nobr" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-nobr",
                           "type" : "parse error"
                        },
                        {
                           "tag_name" : "nobr",
                           "type" : "adoption agency algorithm"
                        },
                        {
                           "type" : "reconstruct the active formatting elements"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        {
                           "name" : "nobr",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "push onto the list of active formatting elements"
                  }
               ]
            },
            "START:noembed" : {
               "actions" : [
                  {
                     "type" : "generic raw text element parsing algorithm"
                  }
               ]
            },
            "START:noscript" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "generic raw text element parsing algorithm"
                        }
                     ],
                     "cond" : [
                        "scripting"
                     ],
                     "false_actions" : [
                        {
                           "type" : "reconstruct the active formatting elements"
                        },
                        {
                           "type" : "insert an HTML element"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:optgroup option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "option",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:plaintext" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "state" : "PLAINTEXT state",
                     "type" : "switch the tokenizer"
                  }
               ]
            },
            "START:rp rt" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "generate implied end tags"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "scope",
                        {
                           "name" : "ruby",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "name" : "in-body-start-rp-rt",
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        {
                           "name" : "ruby",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:select" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "actions" : [
                        {
                           "im" : "in select in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "im",
                        "is",
                        [
                           "in table",
                           "in caption",
                           "in table body",
                           "in row",
                           "in cell"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "im" : "in select",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:svg" : {
               "actions" : [
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "type" : "adjust SVG attributes"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "SVG",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "not quirks"
                        ],
                        [
                           "oe",
                           "in scope",
                           "button",
                           {
                              "name" : "p",
                              "ns" : "HTML"
                           }
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in table",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:textarea" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "ignore-next-lf"
                  },
                  {
                     "state" : "RCDATA state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:xmp" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "close a p element"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "in scope",
                        "button",
                        {
                           "name" : "p",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "reconstruct the active formatting elements"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "type" : "generic raw text element parsing algorithm"
                  }
               ]
            }
         }
      },
      "in caption" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body col colgroup html tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "name" : "in-caption-end-bccht6",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:caption" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-caption-end-caption",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "caption",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-caption-end-caption-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "caption",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "caption",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-caption-end-table",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "caption",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-caption-end-table-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "caption",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "caption",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:caption col colgroup tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-caption-start-c3t6",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "caption",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-caption-start-c3t6-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "caption",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "caption",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in cell" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body caption col colgroup html" : {
               "actions" : [
                  {
                     "name" : "in-cell-end-bc3h",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table tbody tfoot thead tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-cell-end-t5",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "close the cell"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:td th" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-cell-end-td-th",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate implied end tags"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-cell-end-td-th-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "ns" : "HTML",
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "ns" : "HTML",
                              "same_tag_name_as_token" : 1
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "im" : "in row",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:caption col colgroup tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-cell-start-c3t6",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : [
                              "td",
                              "th"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "close the cell"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in column group" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-column-group-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-column-group-else",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        {
                           "name" : "colgroup",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:col" : {
               "actions" : [
                  {
                     "name" : "in-column-group-end-col",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:colgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-column-group-end-colgroup",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        {
                           "name" : "colgroup",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "in foreign content" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  }
               ]
            },
            "CHAR:0000" : {
               "actions" : [
                  {
                     "name" : "in-foreign-content-null",
                     "type" : "parse error"
                  },
                  {
                     "type" : "insert a character",
                     "value" : "�"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-foreign-content-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-foreign-content-end-else",
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "lc is not",
                        {
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "name" : "html",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "lc is",
                              {
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                        {
                           "actions" : [
                           ],
                           "cond" : [
                              "node",
                              "is not",
                              {
                                 "ns" : "HTML"
                              }
                           ],
                           "false_actions" : [
                              {
                                 "im" : [
                                    "current"
                                 ],
                                 "type" : "USING-THE-RULES-FOR"
                              },
                              {
                                 "type" : "break-for-each"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "END:script" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "script-processing-1"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "script-processing-2"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "script",
                           "ns" : "SVG"
                        }
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-foreign-content-end-script",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "lc is not",
                              {
                                 "same_tag_name_as_token" : 1
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    {
                                       "name" : "html",
                                       "ns" : "HTML"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "pop-oe",
                                       "until" : "node"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "lc is",
                                    {
                                       "same_tag_name_as_token" : 1
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "between_actions" : [
                              {
                                 "actions" : [
                                 ],
                                 "cond" : [
                                    "node",
                                    "is not",
                                    {
                                       "ns" : "HTML"
                                    }
                                 ],
                                 "false_actions" : [
                                    {
                                       "im" : [
                                          "current"
                                       ],
                                       "type" : "USING-THE-RULES-FOR"
                                    },
                                    {
                                       "type" : "break-for-each"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "for-each-reverse-oe-as-node"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "adjust MathML attributes"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        {
                           "ns" : "MathML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "fixup-svg-tag-name"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        {
                           "ns" : "SVG"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "adjust SVG attributes"
                        }
                     ],
                     "cond" : [
                        "adjusted current node",
                        "is",
                        {
                           "ns" : "SVG"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "adjust foreign attributes"
                  },
                  {
                     "ns" : "inherit",
                     "type" : "insert a foreign element"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "acknowledge the token's self-closing flag"
                              },
                              {
                                 "type" : "script-processing-1"
                              },
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "script-processing-2"
                              }
                           ],
                           "cond" : [
                              "and",
                              [
                                 "token tag_name",
                                 "is",
                                 "script"
                              ],
                              [
                                 "oe[-1]",
                                 "is",
                                 {
                                    "ns" : "SVG"
                                 }
                              ]
                           ],
                           "false_actions" : [
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "acknowledge the token's self-closing flag"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:b big blockquote body br center code dd div dl dt em embed h1 h2 h3 h4 h5 h6 head hr i img li listing menu meta nobr ol p pre ruby s small span strike strong sub sup table tt u ul var" : {
               "actions" : [
                  {
                     "name" : "in-foreign-content-start-b5ccd4eeh8iillmmnopprs7ttuuv",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "adjust MathML attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "MathML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "fixup-svg-tag-name"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "SVG"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "adjust SVG attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "SVG"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "adjust foreign attributes"
                        },
                        {
                           "ns" : "inherit",
                           "type" : "insert a foreign element"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    },
                                    {
                                       "type" : "script-processing-1"
                                    },
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "script-processing-2"
                                    }
                                 ],
                                 "cond" : [
                                    "and",
                                    [
                                       "token tag_name",
                                       "is",
                                       "script"
                                    ],
                                    [
                                       "oe[-1]",
                                       "is",
                                       {
                                          "ns" : "SVG"
                                       }
                                    ]
                                 ],
                                 "false_actions" : [
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has",
                              "self-closing flag"
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "pop-oe",
                           "while_not" : [
                              "or",
                              {
                                 "MathML text integration point" : 1
                              },
                              {
                                 "HTML integration point" : 1
                              },
                              {
                                 "ns" : "HTML"
                              }
                           ]
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:font" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-foreign-content-start-font",
                           "type" : "parse error"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "adjust MathML attributes"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    {
                                       "ns" : "MathML"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "fixup-svg-tag-name"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    {
                                       "ns" : "SVG"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "type" : "adjust SVG attributes"
                                    }
                                 ],
                                 "cond" : [
                                    "adjusted current node",
                                    "is",
                                    {
                                       "ns" : "SVG"
                                    }
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "adjust foreign attributes"
                              },
                              {
                                 "ns" : "inherit",
                                 "type" : "insert a foreign element"
                              },
                              {
                                 "actions" : [
                                    {
                                       "actions" : [
                                          {
                                             "type" : "acknowledge the token's self-closing flag"
                                          },
                                          {
                                             "type" : "script-processing-1"
                                          },
                                          {
                                             "type" : "pop-oe"
                                          },
                                          {
                                             "type" : "script-processing-2"
                                          }
                                       ],
                                       "cond" : [
                                          "and",
                                          [
                                             "token tag_name",
                                             "is",
                                             "script"
                                          ],
                                          [
                                             "oe[-1]",
                                             "is",
                                             {
                                                "ns" : "SVG"
                                             }
                                          ]
                                       ],
                                       "false_actions" : [
                                          {
                                             "type" : "pop-oe"
                                          },
                                          {
                                             "type" : "acknowledge the token's self-closing flag"
                                          }
                                       ],
                                       "type" : "if"
                                    }
                                 ],
                                 "cond" : [
                                    "token",
                                    "has",
                                    "self-closing flag"
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "fragment"
                           ],
                           "false_actions" : [
                              {
                                 "type" : "pop-oe"
                              },
                              {
                                 "type" : "pop-oe",
                                 "while_not" : [
                                    "or",
                                    {
                                       "MathML text integration point" : 1
                                    },
                                    {
                                       "HTML integration point" : 1
                                    },
                                    {
                                       "ns" : "HTML"
                                    }
                                 ]
                              },
                              {
                                 "type" : "reprocess the token"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has attr",
                        [
                           "color",
                           "face",
                           "size"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "adjust MathML attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "MathML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "fixup-svg-tag-name"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "SVG"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "type" : "adjust SVG attributes"
                              }
                           ],
                           "cond" : [
                              "adjusted current node",
                              "is",
                              {
                                 "ns" : "SVG"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "adjust foreign attributes"
                        },
                        {
                           "ns" : "inherit",
                           "type" : "insert a foreign element"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    },
                                    {
                                       "type" : "script-processing-1"
                                    },
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "script-processing-2"
                                    }
                                 ],
                                 "cond" : [
                                    "and",
                                    [
                                       "token tag_name",
                                       "is",
                                       "script"
                                    ],
                                    [
                                       "oe[-1]",
                                       "is",
                                       {
                                          "ns" : "SVG"
                                       }
                                    ]
                                 ],
                                 "false_actions" : [
                                    {
                                       "type" : "pop-oe"
                                    },
                                    {
                                       "type" : "acknowledge the token's self-closing flag"
                                    }
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "cond" : [
                              "token",
                              "has",
                              "self-closing flag"
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in frameset" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-frameset-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "in-frameset-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:frameset" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-frameset-end-frameset",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "html",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "actions" : [
                              {
                                 "im" : "after frameset",
                                 "type" : "switch the insertion mode"
                              }
                           ],
                           "cond" : [
                              "and",
                              [
                                 "not fragment"
                              ],
                              [
                                 "oe[-1]",
                                 "is not",
                                 {
                                    "name" : "frameset",
                                    "ns" : "HTML"
                                 }
                              ]
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-frameset-eof",
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is not",
                        {
                           "name" : "html",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "START:frame" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:frameset" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:noframes" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "in head" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-head-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "in-head-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:body br html" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:head" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "after head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-head-end-template",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        {
                           "name" : "template",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "generate all implied end tags thoroughly"
                        },
                        {
                           "actions" : [
                              {
                                 "name" : "in-head-end-template-2",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe[-1]",
                              "is not",
                              {
                                 "name" : "template",
                                 "ns" : "HTML"
                              }
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "template",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "clear the list of active formatting elements up to the last marker"
                        },
                        {
                           "type" : "pop-template-ims"
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:base basefont bgsound link" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  }
               ]
            },
            "START:head" : {
               "actions" : [
                  {
                     "name" : "in-head-start-head",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:meta" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "type" : "acknowledge the token's self-closing flag"
                  },
                  {
                     "type" : "change-the-encoding-if-appropriate"
                  }
               ]
            },
            "START:noframes style" : {
               "actions" : [
                  {
                     "type" : "generic raw text element parsing algorithm"
                  }
               ]
            },
            "START:noscript" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "generic raw text element parsing algorithm"
                        }
                     ],
                     "cond" : [
                        "scripting"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "im" : "in head noscript",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:script" : {
               "actions" : [
                  {
                     "target" : "adjusted insertion location",
                     "type" : "set-appropriate-place"
                  },
                  {
                     "intended_parent" : "adjusted insertion location parent",
                     "type" : "create an HTML element"
                  },
                  {
                     "target" : "parser-inserted",
                     "type" : "set-node-flag"
                  },
                  {
                     "target" : "force-async",
                     "type" : "unset-node-flag"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "already started",
                           "type" : "set-node-flag"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "append-to-adjusted-insertion-location"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "state" : "script data state",
                     "type" : "switch the tokenizer"
                  },
                  {
                     "target" : "original insertion mode",
                     "type" : "set-current-im"
                  },
                  {
                     "im" : "text",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:template" : {
               "actions" : [
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "target" : "frameset-ok",
                     "type" : "set-false"
                  },
                  {
                     "im" : "in template",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "im" : "in template",
                     "type" : "push-template-ims"
                  }
               ]
            },
            "START:title" : {
               "actions" : [
                  {
                     "type" : "generic RCDATA element parsing algorithm"
                  }
               ]
            }
         }
      },
      "in head noscript" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-head-noscript-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "in-head-noscript-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "in-head-noscript-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:br" : {
               "actions" : [
                  {
                     "name" : "in-head-noscript-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "END:noscript" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : "in head",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:basefont bgsound link meta noframes style" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:head noscript" : {
               "actions" : [
                  {
                     "name" : "in-head-noscript-start-head-noscript",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            }
         }
      },
      "in row" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body caption col colgroup html td th" : {
               "actions" : [
                  {
                     "name" : "in-row-end-bc3htt",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-row-end-table",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "tr",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table row context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-row-end-tbody-tfoot-thead",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "tr",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table row context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-row-end-tr",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "tr",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table row context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:caption col colgroup tbody tfoot thead tr" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-row-start-c3t4",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "tr",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table row context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table body",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table row context"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in cell",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  }
               ]
            }
         }
      },
      "in select" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "CHAR:0000" : {
               "actions" : [
                  {
                     "name" : "in-select-null",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-select-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "in-select-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:optgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "and",
                        [
                           "oe[-1]",
                           "is",
                           {
                              "name" : "option",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "oe[-2]",
                           "is",
                           {
                              "name" : "optgroup",
                              "ns" : "HTML"
                           }
                        ]
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "optgroup",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-select-end-optgroup",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "option",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-select-end-option",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:select" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-select-end-select",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        {
                           "name" : "select",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "select",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:html" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:input keygen textarea" : {
               "actions" : [
                  {
                     "name" : "in-select-start-input-keygen-textarea",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        {
                           "name" : "select",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "select",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:optgroup" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "option",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "optgroup",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:option" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "option",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "insert an HTML element"
                  }
               ]
            },
            "START:script template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:select" : {
               "actions" : [
                  {
                     "name" : "in-select-start-select",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "select",
                        {
                           "name" : "select",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "select",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in select in table" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "im" : "in select",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:caption table tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "name" : "in-select-in-table-end-ct7",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "select",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:caption table tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "name" : "in-select-in-table-start-ct7",
                     "type" : "parse error"
                  },
                  {
                     "type" : "pop-oe",
                     "until" : {
                        "name" : "select",
                        "ns" : "HTML"
                     }
                  },
                  {
                     "type" : "reset the insertion mode appropriately"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "in table" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "target" : "pending table character tokens",
                           "type" : "set-empty"
                        },
                        {
                           "target" : "original insertion mode",
                           "type" : "set-current-im"
                        },
                        {
                           "im" : "in table text",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : [
                              "table",
                              "tbody",
                              "tfoot",
                              "thead",
                              "tr"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-table-char",
                           "type" : "parse error"
                        },
                        {
                           "foster_parenting" : 1,
                           "im" : "in body",
                           "type" : "USING-THE-RULES-FOR"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-table-doctype",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "name" : "in-table-else",
                     "type" : "parse error"
                  },
                  {
                     "foster_parenting" : 1,
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body caption col colgroup html tbody td tfoot th thead tr" : {
               "actions" : [
                  {
                     "name" : "in-table-end-bc3ht6",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-end-table",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "table",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "table",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table context"
                  },
                  {
                     "type" : "append-marker-to-afe"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in caption",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table context"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "colgroup",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:colgroup" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table context"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:form" : {
               "actions" : [
                  {
                     "name" : "in-table-start-form",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "or",
                        [
                           "oe",
                           "in scope",
                           "all",
                           {
                              "name" : "template",
                              "ns" : "HTML"
                           }
                        ],
                        [
                           "form element pointer",
                           "is not null"
                        ]
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "set-form-element-pointer"
                        },
                        {
                           "type" : "pop-oe"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:input" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-else",
                           "type" : "parse error"
                        },
                        {
                           "foster_parenting" : 1,
                           "im" : "in body",
                           "type" : "USING-THE-RULES-FOR"
                        }
                     ],
                     "cond" : [
                        "token[type]",
                        "lc is not",
                        "hidden"
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-table-start-input",
                           "type" : "parse error"
                        },
                        {
                           "type" : "insert an HTML element"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:script style template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:table" : {
               "actions" : [
                  {
                     "name" : "in-table-start-table",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : "table",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "pop-oe",
                           "until" : {
                              "name" : "table",
                              "ns" : "HTML"
                           }
                        },
                        {
                           "type" : "reset the insertion mode appropriately"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:tbody tfoot thead" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table context"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "START:td th tr" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table context"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "tbody",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "in table body" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "im" : "in table",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END:body caption col colgroup html td th tr" : {
               "actions" : [
                  {
                     "name" : "in-table-body-end-bc3ht3",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:table" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-body-end-table",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : [
                              "tbody",
                              "thead",
                              "tfoot"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table body context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END:tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-body-end-tbody-tfoot-thead",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "ns" : "HTML",
                           "same_tag_name_as_token" : 1
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table body context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:caption col colgroup tbody tfoot thead" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-body-start-c3t3",
                           "type" : "parse error"
                        },
                        {
                           "type" : "ignore the token"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "table",
                        {
                           "name" : [
                              "tbody",
                              "thead",
                              "tfoot"
                           ],
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "type" : "clear the stack back to a table body context"
                        },
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "im" : "in table",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "name" : "in-table-body-start-td-th",
                     "type" : "parse error"
                  },
                  {
                     "type" : "clear the stack back to a table body context"
                  },
                  {
                     "attrs" : "none",
                     "tag_name" : "tr",
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:tr" : {
               "actions" : [
                  {
                     "type" : "clear the stack back to a table body context"
                  },
                  {
                     "type" : "insert an HTML element"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  }
               ]
            }
         }
      },
      "in table text" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "append-to-pending-table-character-tokens-list"
                  }
               ]
            },
            "CHAR:0000" : {
               "actions" : [
                  {
                     "name" : "in-table-text-null",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "in-table-text-else",
                           "type" : "parse error"
                        },
                        {
                           "FIELD" : "anything else",
                           "im" : "in table",
                           "type" : "reprocess pending table character tokens list"
                        }
                     ],
                     "cond" : [
                        "pending table character tokens list",
                        "has non-space"
                     ],
                     "false_actions" : [
                        {
                           "type" : "insert-chars",
                           "value" : [
                              "pending table character tokens list"
                           ]
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "in template" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "im" : "in body",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "in-template-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "END:template" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "cond" : [
                        "oe",
                        "not in scope",
                        "all",
                        {
                           "name" : "template",
                           "ns" : "HTML"
                        }
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-template-eof",
                           "type" : "parse error"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe",
                     "until" : {
                        "name" : "template",
                        "ns" : "HTML"
                     }
                  },
                  {
                     "type" : "clear the list of active formatting elements up to the last marker"
                  },
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "type" : "reset the insertion mode appropriately"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in body",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:base basefont bgsound link meta noframes script style template title" : {
               "actions" : [
                  {
                     "im" : "in head",
                     "type" : "USING-THE-RULES-FOR"
                  }
               ]
            },
            "START:caption colgroup tbody tfoot thead" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in table",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in table",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:col" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in column group",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in column group",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:td th" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in row",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in row",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "START:tr" : {
               "actions" : [
                  {
                     "type" : "pop-template-ims"
                  },
                  {
                     "im" : "in table body",
                     "type" : "push-template-ims"
                  },
                  {
                     "im" : "in table body",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "initial" : {
         "conds" : {
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "initial-doctype",
                           "type" : "parse error"
                        }
                     ],
                     "cond" : [
                        "legacy doctype"
                     ],
                     "type" : "if"
                  },
                  {
                     "item" : "DocumentType",
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "doctype-switch"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "ELSE" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "name" : "initial-else",
                           "type" : "parse error"
                        },
                        {
                           "type" : "set-compat-mode",
                           "value" : "quirks"
                        }
                     ],
                     "cond" : [
                        "not iframe srcdoc document"
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : "before html",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "text" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "END:script" : {
               "actions" : [
                  {
                     "type" : "script-processing-1"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "script-processing-2"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "name" : "text-eof",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "target" : "already started",
                           "type" : "set-node-flag"
                        }
                     ],
                     "cond" : [
                        "oe[-1]",
                        "is",
                        {
                           "name" : "script",
                           "ns" : "HTML"
                        }
                     ],
                     "type" : "if"
                  },
                  {
                     "type" : "pop-oe"
                  },
                  {
                     "im" : [
                        "original"
                     ],
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      }
   },
   "reset_im_by_html_element" : {
      "always" : {
         "body" : "in body",
         "caption" : "in caption",
         "colgroup" : "in column group",
         "frameset" : "in frameset",
         "table" : "in table",
         "tbody" : "in table body",
         "tfoot" : "in table body",
         "thead" : "in table body",
         "tr" : "in row"
      },
      "last_is_false" : {
         "head" : "in head",
         "td" : "in cell",
         "th" : "in cell"
      }
   },
   "tokenizer" : {
      "char_sets" : {
         "DIGIT" : {
            "48" : 1,
            "49" : 1,
            "50" : 1,
            "51" : 1,
            "52" : 1,
            "53" : 1,
            "54" : 1,
            "55" : 1,
            "56" : 1,
            "57" : 1
         },
         "HEXDIGIT" : {
            "100" : 1,
            "101" : 1,
            "102" : 1,
            "48" : 1,
            "49" : 1,
            "50" : 1,
            "51" : 1,
            "52" : 1,
            "53" : 1,
            "54" : 1,
            "55" : 1,
            "56" : 1,
            "57" : 1,
            "65" : 1,
            "66" : 1,
            "67" : 1,
            "68" : 1,
            "69" : 1,
            "70" : 1,
            "97" : 1,
            "98" : 1,
            "99" : 1
         },
         "LOWER" : {
            "100" : 1,
            "101" : 1,
            "102" : 1,
            "103" : 1,
            "104" : 1,
            "105" : 1,
            "106" : 1,
            "107" : 1,
            "108" : 1,
            "109" : 1,
            "110" : 1,
            "111" : 1,
            "112" : 1,
            "113" : 1,
            "114" : 1,
            "115" : 1,
            "116" : 1,
            "117" : 1,
            "118" : 1,
            "119" : 1,
            "120" : 1,
            "121" : 1,
            "122" : 1,
            "97" : 1,
            "98" : 1,
            "99" : 1
         },
         "UPPER" : {
            "65" : 1,
            "66" : 1,
            "67" : 1,
            "68" : 1,
            "69" : 1,
            "70" : 1,
            "71" : 1,
            "72" : 1,
            "73" : 1,
            "74" : 1,
            "75" : 1,
            "76" : 1,
            "77" : 1,
            "78" : 1,
            "79" : 1,
            "80" : 1,
            "81" : 1,
            "82" : 1,
            "83" : 1,
            "84" : 1,
            "85" : 1,
            "86" : 1,
            "87" : 1,
            "88" : 1,
            "89" : 1,
            "90" : 1
         },
         "WS:HTML" : {
            "10" : 1,
            "12" : 1,
            "32" : 1,
            "9" : 1
         },
         "WS:XML" : {
            "10" : 1,
            "32" : 1,
            "9" : 1
         }
      },
      "initial_state_by_html_element" : {
         "always" : {
            "iframe" : "RAWTEXT state",
            "noembed" : "RAWTEXT state",
            "noframes" : "RAWTEXT state",
            "plaintext" : "PLAINTEXT state",
            "script" : "script data state",
            "style" : "RAWTEXT state",
            "textarea" : "RCDATA state",
            "title" : "RCDATA state",
            "xmp" : "RAWTEXT state"
         },
         "scripting_flag_is_enabled" : {
            "noscript" : "RAWTEXT state"
         }
      },
      "states" : {
         "CDATA section state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "CDATA section state -- ]",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state -- ]" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "CDATA section state -- ]]",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state -- ]]" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "DOCTYPE name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "offset" : 32,
                        "type" : "append"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "DOCTYPE system identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-system-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE system identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-system-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "PLAINTEXT state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "RAWTEXT end tag name state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "check_end_tag_token" : 1,
                        "if" : "appropriate end tag",
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "state" : "data state",
                        "type" : "switch-and-emit"
                     },
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RAWTEXT end tag open state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RAWTEXT end tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RAWTEXT end tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RAWTEXT less-than sign state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "RAWTEXT end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RAWTEXT state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RAWTEXT state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "RAWTEXT less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA end tag name state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "check_end_tag_token" : 1,
                        "if" : "appropriate end tag",
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "state" : "data state",
                        "type" : "switch-and-emit"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA end tag open state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA end tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA end tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA less-than sign state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "RCDATA end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in RCDATA state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "RCDATA less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "before_equals" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "RCDATA state - character reference state" : {
            "conds" : {
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "RCDATA state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "RCDATA state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "after DOCTYPE name state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- P" : {
            "conds" : {
               "CHAR:0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PU" : {
            "conds" : {
               "CHAR:0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUB" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBL" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBLI" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- S" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SY" : {
            "conds" : {
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYS" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYST" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYSTE" : {
            "conds" : {
               "CHAR:004D" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006D" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "between DOCTYPE public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system identifier state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "offset" : 32,
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "after attribute value (quoted) state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "offset" : 32,
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "after attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference state" : {
            "conds" : {
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before DOCTYPE name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "before DOCTYPE public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before DOCTYPE system identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "offset" : 32,
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before attribute value state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "between DOCTYPE public and system identifiers state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "between-doctype-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "bogus DOCTYPE state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "bogus comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "character reference in RCDATA state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "RCDATA state - character reference state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "character reference in data state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "data state - character reference state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "comment end bang state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "--!�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "--�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "comment-end-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "comment end bang state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "name" : "comment-end-002d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-dash-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment start dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "data state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "before_equals" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference state" : {
            "conds" : {
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "end tag open state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "end-tag-open-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "end-tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0064" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- -" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "comment start state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- D" : {
            "conds" : {
               "CHAR:004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DO" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOC" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCT" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTY" : {
            "conds" : {
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTYP" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [C",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [C" : {
            "conds" : {
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CD",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CD" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDA" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDAT" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDATA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDATA" : {
            "conds" : {
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "in-foreign",
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         },
         "script data double escape end state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "script_state" : "script data escaped state",
                        "state" : "script data double escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "script_state" : "script data escaped state",
                        "state" : "script data double escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "offset" : 32,
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "script_state" : "script data escaped state",
                        "state" : "script data double escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               }
            }
         },
         "script data double escape start state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "script_state" : "script data double escaped state",
                        "state" : "script data escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "script_state" : "script data double escaped state",
                        "state" : "script data escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "offset" : 32,
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "script_state" : "script data double escaped state",
                        "state" : "script data escaped state",
                        "type" : "switch-by-temp"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data double escaped dash dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped less-than sign state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : ">"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "script data double escaped dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped dash dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped less-than sign state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "script data double escaped less-than sign state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "script data double escape end state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "/"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "script data double escaped state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data double escaped less-than sign state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "script data end tag name state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "check_end_tag_token" : 1,
                        "if" : "appropriate end tag",
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "state" : "data state",
                        "type" : "switch-and-emit"
                     },
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data end tag open state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data end tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data end tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escape start dash state" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data escaped dash dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escape start state" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data escape start dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped dash dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data escaped less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : ">"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data escaped dash dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data escaped less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped end tag name state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "check_end_tag_token" : 1,
                        "if" : "appropriate end tag",
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "state" : "data state",
                        "type" : "switch-and-emit"
                     },
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "append"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "appropriate end tag",
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped end tag open state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C/"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data escaped end tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data escaped end tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped less-than sign state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "script data escaped end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data escaped state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data double escape start state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "offset" : 32,
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "script data double escape start state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data escaped state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "script data escaped dash state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data escaped less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data less-than sign state" : {
            "conds" : {
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "state" : "script data escape start state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C!"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "script data end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "script data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "script data state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "script data less-than sign state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1
            }
         },
         "self-closing start tag state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "tag name",
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "append"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag open state" : {
            "conds" : {
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "tag-open-003f",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "offset" : 32,
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : -1,
               "start tag token" : -1
            }
         }
      },
      "tokens" : {
         "DOCTYPE token" : {
            "fields" : {
               "force-quirks flag" : 1,
               "name" : 1,
               "public identifier" : 1,
               "system identifier" : 1
            },
            "short_name" : "DOCTYPE"
         },
         "character token" : {
            "fields" : {
               "value" : 1
            },
            "short_name" : "CHAR"
         },
         "comment token" : {
            "fields" : {
               "data" : 1
            },
            "short_name" : "COMMENT"
         },
         "end tag token" : {
            "fields" : {
               "attributes" : 1,
               "name" : 1,
               "self-closing flag" : 1,
               "tag name" : 1,
               "value" : 1
            },
            "short_name" : "END"
         },
         "end-of-file token" : {
            "fields" : {
            },
            "short_name" : "EOF"
         },
         "start tag token" : {
            "fields" : {
               "attributes" : 1,
               "name" : 1,
               "self-closing flag" : 1,
               "tag name" : 1,
               "value" : 1
            },
            "short_name" : "START"
         }
      }
   },
   "tree_patterns" : {
      "HTML integration point" : [
         "or",
         {
            "attrs" : [
               {
                  "lc_value" : "text/html",
                  "name" : "encoding"
               }
            ],
            "name" : "annotation-xml",
            "ns" : "MathML"
         },
         {
            "attrs" : [
               {
                  "lc_value" : "application/xhtml\u002Bxml",
                  "name" : "encoding"
               }
            ],
            "name" : "annotation-xml",
            "ns" : "MathML"
         },
         {
            "name" : "foreignObject",
            "ns" : "SVG"
         },
         {
            "name" : "desc",
            "ns" : "SVG"
         },
         {
            "name" : "title",
            "ns" : "SVG"
         }
      ],
      "MathML text integration point" : [
         "or",
         {
            "name" : "mi",
            "ns" : "MathML"
         },
         {
            "name" : "mo",
            "ns" : "MathML"
         },
         {
            "name" : "mn",
            "ns" : "MathML"
         },
         {
            "name" : "ms",
            "ns" : "MathML"
         },
         {
            "name" : "mtext",
            "ns" : "MathML"
         }
      ],
      "formatting category" : [
         "or",
         {
            "name" : [
               "a",
               "b",
               "big",
               "code",
               "em",
               "font",
               "i",
               "nobr",
               "s",
               "small",
               "strike",
               "strong",
               "tt",
               "u"
            ],
            "ns" : "HTML"
         }
      ],
      "has an element in button scope" : [
         "or",
         {
            "name" : "applet",
            "ns" : "HTML"
         },
         {
            "name" : "caption",
            "ns" : "HTML"
         },
         {
            "name" : "html",
            "ns" : "HTML"
         },
         {
            "name" : "table",
            "ns" : "HTML"
         },
         {
            "name" : "td",
            "ns" : "HTML"
         },
         {
            "name" : "th",
            "ns" : "HTML"
         },
         {
            "name" : "marquee",
            "ns" : "HTML"
         },
         {
            "name" : "object",
            "ns" : "HTML"
         },
         {
            "name" : "template",
            "ns" : "HTML"
         },
         {
            "name" : "mi",
            "ns" : "MathML"
         },
         {
            "name" : "mo",
            "ns" : "MathML"
         },
         {
            "name" : "mn",
            "ns" : "MathML"
         },
         {
            "name" : "ms",
            "ns" : "MathML"
         },
         {
            "name" : "mtext",
            "ns" : "MathML"
         },
         {
            "name" : "annotation-xml",
            "ns" : "MathML"
         },
         {
            "name" : "foreignObject",
            "ns" : "SVG"
         },
         {
            "name" : "desc",
            "ns" : "SVG"
         },
         {
            "name" : "title",
            "ns" : "SVG"
         },
         {
            "name" : "button",
            "ns" : "HTML"
         }
      ],
      "has an element in list item scope" : [
         "or",
         {
            "name" : "applet",
            "ns" : "HTML"
         },
         {
            "name" : "caption",
            "ns" : "HTML"
         },
         {
            "name" : "html",
            "ns" : "HTML"
         },
         {
            "name" : "table",
            "ns" : "HTML"
         },
         {
            "name" : "td",
            "ns" : "HTML"
         },
         {
            "name" : "th",
            "ns" : "HTML"
         },
         {
            "name" : "marquee",
            "ns" : "HTML"
         },
         {
            "name" : "object",
            "ns" : "HTML"
         },
         {
            "name" : "template",
            "ns" : "HTML"
         },
         {
            "name" : "mi",
            "ns" : "MathML"
         },
         {
            "name" : "mo",
            "ns" : "MathML"
         },
         {
            "name" : "mn",
            "ns" : "MathML"
         },
         {
            "name" : "ms",
            "ns" : "MathML"
         },
         {
            "name" : "mtext",
            "ns" : "MathML"
         },
         {
            "name" : "annotation-xml",
            "ns" : "MathML"
         },
         {
            "name" : "foreignObject",
            "ns" : "SVG"
         },
         {
            "name" : "desc",
            "ns" : "SVG"
         },
         {
            "name" : "title",
            "ns" : "SVG"
         },
         {
            "name" : "ol",
            "ns" : "HTML"
         },
         {
            "name" : "ul",
            "ns" : "HTML"
         }
      ],
      "has an element in scope" : [
         "or",
         {
            "name" : "applet",
            "ns" : "HTML"
         },
         {
            "name" : "caption",
            "ns" : "HTML"
         },
         {
            "name" : "html",
            "ns" : "HTML"
         },
         {
            "name" : "table",
            "ns" : "HTML"
         },
         {
            "name" : "td",
            "ns" : "HTML"
         },
         {
            "name" : "th",
            "ns" : "HTML"
         },
         {
            "name" : "marquee",
            "ns" : "HTML"
         },
         {
            "name" : "object",
            "ns" : "HTML"
         },
         {
            "name" : "template",
            "ns" : "HTML"
         },
         {
            "name" : "mi",
            "ns" : "MathML"
         },
         {
            "name" : "mo",
            "ns" : "MathML"
         },
         {
            "name" : "mn",
            "ns" : "MathML"
         },
         {
            "name" : "ms",
            "ns" : "MathML"
         },
         {
            "name" : "mtext",
            "ns" : "MathML"
         },
         {
            "name" : "annotation-xml",
            "ns" : "MathML"
         },
         {
            "name" : "foreignObject",
            "ns" : "SVG"
         },
         {
            "name" : "desc",
            "ns" : "SVG"
         },
         {
            "name" : "title",
            "ns" : "SVG"
         }
      ],
      "has an element in table scope" : [
         "or",
         {
            "name" : "html",
            "ns" : "HTML"
         },
         {
            "name" : "table",
            "ns" : "HTML"
         },
         {
            "name" : "template",
            "ns" : "HTML"
         }
      ],
      "special category" : [
         "or",
         {
            "name" : [
               "address",
               "applet",
               "area",
               "article",
               "aside",
               "base",
               "basefont",
               "bgsound",
               "blockquote",
               "body",
               "br",
               "button",
               "caption",
               "center",
               "col",
               "colgroup",
               "dd",
               "details",
               "dir",
               "div",
               "dl",
               "dt",
               "embed",
               "fieldset",
               "figcaption",
               "figure",
               "footer",
               "form",
               "frame",
               "frameset",
               "h1",
               "h2",
               "h3",
               "h4",
               "h5",
               "h6",
               "head",
               "header",
               "hgroup",
               "hr",
               "html",
               "iframe",
               "img",
               "input",
               "isindex",
               "li",
               "link",
               "listing",
               "main",
               "marquee",
               "menu",
               "menuitem",
               "meta",
               "nav",
               "noembed",
               "noframes",
               "noscript",
               "object",
               "ol",
               "p",
               "param",
               "plaintext",
               "pre",
               "script",
               "section",
               "select",
               "source",
               "style",
               "summary",
               "table",
               "tbody",
               "td",
               "template",
               "textarea",
               "tfoot",
               "th",
               "thead",
               "title",
               "tr",
               "track",
               "ul",
               "wbr",
               "xmp"
            ],
            "ns" : "HTML"
         },
         {
            "name" : [
               "annotation-xml",
               "mi",
               "mn",
               "mo",
               "ms",
               "mtext"
            ],
            "ns" : "MathML"
         },
         {
            "name" : [
               "desc",
               "foreignObject",
               "title"
            ],
            "ns" : "SVG"
         }
      ]
   },
   "tree_patterns_not" : {
      "has an element in select scope" : [
         "or",
         {
            "name" : "optgroup",
            "ns" : "HTML"
         },
         {
            "name" : "option",
            "ns" : "HTML"
         }
      ]
   },
   "tree_steps" : {
      "clear the stack back to a table body context" : {
         "actions" : [
            {
               "type" : "pop-oe",
               "while_not" : {
                  "name" : [
                     "tbody",
                     "tfoot",
                     "thead",
                     "template",
                     "html"
                  ],
                  "ns" : "HTML"
               }
            }
         ]
      },
      "clear the stack back to a table context" : {
         "actions" : [
            {
               "type" : "pop-oe",
               "while_not" : {
                  "name" : [
                     "table",
                     "template",
                     "html"
                  ],
                  "ns" : "HTML"
               }
            }
         ]
      },
      "clear the stack back to a table row context" : {
         "actions" : [
            {
               "type" : "pop-oe",
               "while_not" : {
                  "name" : [
                     "tr",
                     "template",
                     "html"
                  ],
                  "ns" : "HTML"
               }
            }
         ]
      },
      "close a p element" : {
         "actions" : [
            {
               "except" : {
                  "name" : "p",
                  "ns" : "HTML"
               },
               "type" : "generate implied end tags"
            },
            {
               "actions" : [
                  {
                     "name" : "-steps-close-a-p-element",
                     "type" : "parse error"
                  }
               ],
               "cond" : [
                  "oe[-1]",
                  "is not",
                  {
                     "name" : "p",
                     "ns" : "HTML"
                  }
               ],
               "type" : "if"
            },
            {
               "type" : "pop-oe",
               "until" : {
                  "name" : "p",
                  "ns" : "HTML"
               }
            }
         ]
      },
      "close the cell" : {
         "actions" : [
            {
               "type" : "generate implied end tags"
            },
            {
               "actions" : [
                  {
                     "name" : "-steps-close-the-cell",
                     "type" : "parse error"
                  }
               ],
               "cond" : [
                  "oe[-1]",
                  "is not",
                  {
                     "name" : [
                        "td",
                        "th"
                     ],
                     "ns" : "HTML"
                  }
               ],
               "type" : "if"
            },
            {
               "type" : "pop-oe",
               "until" : {
                  "name" : [
                     "td",
                     "th"
                  ],
                  "ns" : "HTML"
               }
            },
            {
               "type" : "clear the list of active formatting elements up to the last marker"
            },
            {
               "im" : "in row",
               "type" : "switch the insertion mode"
            }
         ]
      },
      "generate all implied end tags thoroughly" : {
         "actions" : [
            {
               "type" : "pop-oe",
               "while" : {
                  "name" : [
                     "caption",
                     "colgroup",
                     "dd",
                     "dt",
                     "li",
                     "option",
                     "optgroup",
                     "p",
                     "rp",
                     "rt",
                     "tbody",
                     "td",
                     "tfoot",
                     "th",
                     "thead",
                     "tr"
                  ],
                  "ns" : "HTML"
               }
            }
         ]
      },
      "generate implied end tags" : {
         "actions" : [
            {
               "type" : "pop-oe",
               "while" : {
                  "name" : [
                     "dd",
                     "dt",
                     "li",
                     "option",
                     "optgroup",
                     "p",
                     "rp",
                     "rt"
                  ],
                  "ns" : "HTML"
               }
            }
         ]
      },
      "generic RCDATA element parsing algorithm" : {
         "actions" : [
            {
               "type" : "insert an HTML element"
            },
            {
               "state" : "RCDATA state",
               "type" : "switch the tokenizer"
            },
            {
               "target" : "original insertion mode",
               "type" : "set-current-im"
            },
            {
               "im" : "text",
               "type" : "switch the insertion mode"
            }
         ]
      },
      "generic raw text element parsing algorithm" : {
         "actions" : [
            {
               "type" : "insert an HTML element"
            },
            {
               "state" : "RAWTEXT state",
               "type" : "switch the tokenizer"
            },
            {
               "target" : "original insertion mode",
               "type" : "set-current-im"
            },
            {
               "im" : "text",
               "type" : "switch the insertion mode"
            }
         ]
      }
   }
}
