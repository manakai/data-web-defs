{
   "charrefs_pubids" : {
      "-//W3C//DTD MathML 2.0//EN" : 1,
      "-//W3C//DTD XHTML 1.0 Frameset//EN" : 1,
      "-//W3C//DTD XHTML 1.0 Strict//EN" : 1,
      "-//W3C//DTD XHTML 1.0 Transitional//EN" : 1,
      "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" : 1,
      "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" : 1,
      "-//W3C//DTD XHTML 1.1//EN" : 1,
      "-//W3C//DTD XHTML Basic 1.0//EN" : 1,
      "-//WAPFORUM//DTD XHTML Mobile 1.0//EN" : 1
   },
   "ims" : {
      "after root element" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "name" : "after-root-element-char",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "after-root-element-doctype",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "set the stop processing flag"
                        },
                        {
                           "im" : "in subset after root element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "has internal subset flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "after-root-element-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a processing instruction"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "name" : "after-root-element-start-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            }
         }
      },
      "before DOCTYPE" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-doctype-char",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "type" : "insert a DOCTYPE"
                  },
                  {
                     "type" : "set-DOCTYPE-system-identifier"
                  },
                  {
                     "actions" : [
                        {
                           "im" : "in subset",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "has internal subset flag"
                     ],
                     "false_actions" : [
                        {
                           "actions" : [
                              {
                                 "type" : "process the external subset"
                              }
                           ],
                           "cond" : [
                              "DOCTYPE system identifier",
                              "non-empty"
                           ],
                           "false_actions" : [
                              {
                                 "im" : "before root element",
                                 "type" : "switch the insertion mode"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-doctype-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "im" : "before root element",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a processing instruction"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "im" : "before root element",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            }
         }
      },
      "before DTD text declaration" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "the XML declaration is missing"
                  },
                  {
                     "im" : "in subset",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "process an XML declaration"
                        },
                        {
                           "im" : "in subset",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token target",
                        "is",
                        "xml"
                     ],
                     "false_actions" : [
                        {
                           "type" : "the XML declaration is missing"
                        },
                        {
                           "im" : "in subset",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "before XML declaration" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "the XML declaration is missing"
                  },
                  {
                     "im" : "before DOCTYPE",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "process an XML declaration"
                        },
                        {
                           "im" : "before DOCTYPE",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token target",
                        "is",
                        "xml"
                     ],
                     "false_actions" : [
                        {
                           "type" : "the XML declaration is missing"
                        },
                        {
                           "im" : "before DOCTYPE",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "before content text declaration" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "the XML declaration is missing"
                  },
                  {
                     "im" : "in element",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "process an XML declaration"
                        },
                        {
                           "im" : "in element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token target",
                        "is",
                        "xml"
                     ],
                     "false_actions" : [
                        {
                           "type" : "the XML declaration is missing"
                        },
                        {
                           "im" : "in element",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "before root element" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-root-element-char",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "before-root-element-doctype",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "set the stop processing flag"
                        },
                        {
                           "im" : "in subset before root element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "has internal subset flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "name" : "before-root-element-end-else",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "name" : "before-root-element-eof",
                     "type" : "parse error"
                  },
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "position" : "document",
                     "type" : "insert a processing instruction"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "create an XML element"
                  },
                  {
                     "type" : "append-to-document"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "type" : "appcache-processing"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        },
                        {
                           "im" : "after root element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "false_actions" : [
                        {
                           "im" : "in element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in element" : {
         "conds" : {
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "type" : "insert a character"
                  }
               ]
            },
            "CHAR:0000" : {
               "actions" : [
                  {
                     "name" : "in-element-null",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "insert a comment"
                  }
               ]
            },
            "DOCTYPE" : {
               "actions" : [
                  {
                     "name" : "in-element-doctype",
                     "type" : "parse error"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "set the stop processing flag"
                        },
                        {
                           "im" : "in subset in element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "has internal subset flag"
                     ],
                     "type" : "if"
                  }
               ]
            },
            "END-ELSE" : {
               "actions" : [
                  {
                     "type" : "set-end-tag-name"
                  },
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-element-end-else",
                                 "type" : "parse error"
                              },
                              {
                                 "type" : "ignore the token"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "and",
                              [
                                 "fragment"
                              ],
                              [
                                 "node",
                                 "is",
                                 "oe[0]"
                              ]
                           ],
                           "type" : "if"
                        },
                        {
                           "actions" : [
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-element-end-else-2",
                                       "type" : "parse error"
                                    }
                                 ],
                                 "cond" : [
                                    "oe[-1]",
                                    "is not",
                                    "node"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "actions" : [
                                    {
                                       "im" : "after root element",
                                       "type" : "switch the insertion mode"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "oe[0]"
                                 ],
                                 "type" : "if"
                              },
                              {
                                 "type" : "pop-oe",
                                 "until" : "node"
                              },
                              {
                                 "type" : "abort these steps"
                              }
                           ],
                           "cond" : [
                              "node",
                              "is",
                              {
                                 "tag_name" : 1
                              }
                           ],
                           "false_actions" : [
                              {
                                 "actions" : [
                                    {
                                       "name" : "in-element-end-else-3",
                                       "type" : "parse error"
                                    },
                                    {
                                       "type" : "ignore the token"
                                    },
                                    {
                                       "type" : "abort these steps"
                                    }
                                 ],
                                 "cond" : [
                                    "node",
                                    "is",
                                    "oe[0]"
                                 ],
                                 "type" : "if"
                              }
                           ],
                           "type" : "if"
                        }
                     ],
                     "between_actions" : [
                     ],
                     "type" : "for-each-reverse-oe-as-node"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "actions" : [
                              {
                                 "name" : "in-element-eof",
                                 "type" : "parse error"
                              }
                           ],
                           "cond" : [
                              "oe",
                              "> 1"
                           ],
                           "type" : "if"
                        },
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "cond" : [
                        "fragment"
                     ],
                     "false_actions" : [
                        {
                           "name" : "in-element-eof-2",
                           "type" : "parse error"
                        },
                        {
                           "type" : "stop parsing"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "type" : "insert a processing instruction"
                  }
               ]
            },
            "START-ELSE" : {
               "actions" : [
                  {
                     "type" : "create an XML element"
                  },
                  {
                     "type" : "append-to-current"
                  },
                  {
                     "type" : "push-oe"
                  },
                  {
                     "actions" : [
                        {
                           "type" : "pop-oe"
                        },
                        {
                           "type" : "acknowledge the token's self-closing flag"
                        }
                     ],
                     "cond" : [
                        "token",
                        "has",
                        "self-closing flag"
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      },
      "in subset" : {
         "conds" : {
            "ATTLIST" : {
               "actions" : [
                  {
                     "type" : "process an ATTLIST token"
                  }
               ]
            },
            "CHAR-ELSE" : {
               "actions" : [
                  {
                     "name" : "in-subset-char",
                     "type" : "parse error"
                  },
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "CHAR:WS" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "COMMENT" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "ELEMENT" : {
               "actions" : [
                  {
                     "type" : "process an ELEMENT token"
                  }
               ]
            },
            "ENTITY" : {
               "actions" : [
                  {
                     "type" : "process an ENTITY token"
                  }
               ]
            },
            "EOD" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "process the external subset"
                        }
                     ],
                     "cond" : [
                        "DOCTYPE system identifier",
                        "non-empty"
                     ],
                     "type" : "if"
                  },
                  {
                     "im" : "before root element",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            },
            "NOTATION" : {
               "actions" : [
                  {
                     "type" : "process a NOTATION token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "position" : "doctype",
                     "type" : "insert a processing instruction"
                  }
               ]
            }
         }
      },
      "in subset after root element" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOD" : {
               "actions" : [
                  {
                     "im" : "after root element",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            }
         }
      },
      "in subset before root element" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOD" : {
               "actions" : [
                  {
                     "im" : "before root element",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            }
         }
      },
      "in subset in element" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "ignore the token"
                  }
               ]
            },
            "EOD" : {
               "actions" : [
                  {
                     "im" : "in element",
                     "type" : "switch the insertion mode"
                  }
               ]
            },
            "EOF" : {
               "actions" : [
                  {
                     "type" : "stop parsing"
                  }
               ]
            }
         }
      },
      "initial" : {
         "conds" : {
            "ELSE" : {
               "actions" : [
                  {
                     "type" : "the XML declaration is missing"
                  },
                  {
                     "im" : "before DOCTYPE",
                     "type" : "switch the insertion mode"
                  },
                  {
                     "type" : "reprocess the token"
                  }
               ]
            },
            "PI" : {
               "actions" : [
                  {
                     "actions" : [
                        {
                           "type" : "process an XML declaration"
                        },
                        {
                           "im" : "before root element",
                           "type" : "switch the insertion mode"
                        }
                     ],
                     "cond" : [
                        "token target",
                        "is",
                        "xml"
                     ],
                     "false_actions" : [
                        {
                           "type" : "the XML declaration is missing"
                        },
                        {
                           "im" : "before DOCTYPE",
                           "type" : "switch the insertion mode"
                        },
                        {
                           "type" : "reprocess the token"
                        }
                     ],
                     "type" : "if"
                  }
               ]
            }
         }
      }
   },
   "tokenizer" : {
      "char_sets" : {
         "DIGIT" : {
            "48" : 1,
            "49" : 1,
            "50" : 1,
            "51" : 1,
            "52" : 1,
            "53" : 1,
            "54" : 1,
            "55" : 1,
            "56" : 1,
            "57" : 1
         },
         "HEXDIGIT" : {
            "100" : 1,
            "101" : 1,
            "102" : 1,
            "48" : 1,
            "49" : 1,
            "50" : 1,
            "51" : 1,
            "52" : 1,
            "53" : 1,
            "54" : 1,
            "55" : 1,
            "56" : 1,
            "57" : 1,
            "65" : 1,
            "66" : 1,
            "67" : 1,
            "68" : 1,
            "69" : 1,
            "70" : 1,
            "97" : 1,
            "98" : 1,
            "99" : 1
         },
         "LOWER" : {
            "100" : 1,
            "101" : 1,
            "102" : 1,
            "103" : 1,
            "104" : 1,
            "105" : 1,
            "106" : 1,
            "107" : 1,
            "108" : 1,
            "109" : 1,
            "110" : 1,
            "111" : 1,
            "112" : 1,
            "113" : 1,
            "114" : 1,
            "115" : 1,
            "116" : 1,
            "117" : 1,
            "118" : 1,
            "119" : 1,
            "120" : 1,
            "121" : 1,
            "122" : 1,
            "97" : 1,
            "98" : 1,
            "99" : 1
         },
         "UPPER" : {
            "65" : 1,
            "66" : 1,
            "67" : 1,
            "68" : 1,
            "69" : 1,
            "70" : 1,
            "71" : 1,
            "72" : 1,
            "73" : 1,
            "74" : 1,
            "75" : 1,
            "76" : 1,
            "77" : 1,
            "78" : 1,
            "79" : 1,
            "80" : 1,
            "81" : 1,
            "82" : 1,
            "83" : 1,
            "84" : 1,
            "85" : 1,
            "86" : 1,
            "87" : 1,
            "88" : 1,
            "89" : 1,
            "90" : 1
         },
         "WS:HTML" : {
            "10" : 1,
            "12" : 1,
            "32" : 1,
            "9" : 1
         },
         "WS:XML" : {
            "10" : 1,
            "32" : 1,
            "9" : 1
         }
      },
      "states" : {
         "ATTLIST attribute default state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-default-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute default state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute default state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-default-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "attlist-attribute-default-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "default type",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-name-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "attlist-attribute-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "attlist-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST attribute type state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-type-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-type-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute type state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-type-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "attlist-attribute-type-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "attlist-attribute-type-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "attlist-attribute-type-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "declared type",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "attlist-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "attlist-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "attlist-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "attlist-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "CDATA section state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "CDATA section state -- ]",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state -- ]" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "CDATA section state -- ]]",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state -- ]]" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "index_offset" : 2,
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "DOCTYPE PI data state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "pi-003f",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI target question state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI target state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "target",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI target question state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "target",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "set-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE after PI target state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE bogus comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment end bang state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "state" : "DOCTYPE comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment end dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment end state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "comment-end-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE comment end bang state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "name" : "comment-end-002d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment start dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-dash-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment start state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment start dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE in pic state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "?"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- -",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- A",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- E",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "DTD mode is not internal subset",
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-005b",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0061" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- A",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- E",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- -" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE comment start state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- A" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- AT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- AT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- AT" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATT" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTL" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTLI" : {
            "conds" : {
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLIS",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLIS",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTLIS" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ATTLIST",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ATTLIST state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ATTLIST",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ATTLIST state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- E" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EN",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EN",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- EL" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELE",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELE",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELE" : {
            "conds" : {
               "CHAR:004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEM",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEM",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEM" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEME",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEME",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEME" : {
            "conds" : {
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEMEN",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEMEN",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEMEN" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ELEMENT",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ELEMENT state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ELEMENT",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ELEMENT state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- EN" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENT" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENTI" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTIT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTIT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENTIT" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ENTITY",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "ENTITY",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- N" : {
            "conds" : {
               "CHAR:004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NO",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NO",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NO" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOT" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTA",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTA" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTAT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTAT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTAT" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTATI" : {
            "conds" : {
               "CHAR:004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATIO",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATIO",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTATIO" : {
            "conds" : {
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "NOTATION",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "NOTATION",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "doctype-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "DOCTYPE system identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE system identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE tag state" : {
            "conds" : {
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "doctype-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DTD state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "DTD mode is internal subset",
                        "state" : "after DOCTYPE internal subset state",
                        "type" : "switch"
                     },
                     {
                        "state" : "in DTD msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ELEMENT content keyword state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "after ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "element-content-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "content keyword",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "ELEMENT name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "element-name-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "element-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "element-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "ELEMENT state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT name state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "element-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "element-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "element-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ENTITY name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "entity-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY name state - before text declaration in markup declaration state",
                        "state" : "after ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "entity-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "entity-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY public identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "entity-public-identifier-double-quoted-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "entity-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY public identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "entity-public-identifier-single-quoted-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "entity-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "state" : "parameter entity declaration or reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "entity-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "entity-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "entity-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ENTITY system identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY system identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value in entity state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference name state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "LOWER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "NDATA identifier state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY parameter state - before text declaration in markup declaration state",
                        "state" : "after ENTITY parameter state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "ndata-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "notation name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "NOTATION name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION name state - before text declaration in markup declaration state",
                        "state" : "after NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "notation-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION public identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "notation-public-identifier-double-quoted-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "notation-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION public identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "notation-public-identifier-single-quoted-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "notation-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION name state - before text declaration in markup declaration state",
                        "state" : "before NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "notation-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "notation-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "notation-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "NOTATION system identifier (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION system identifier (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "PI data state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "PI state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "pi-003f",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "PI target question state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "PI target state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "target",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "PI target question state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "target",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "set-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "after ATTLIST attribute default state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute default state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute default state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-attlist-attribute-default-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute default state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute default state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-default-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-default-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-default-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-default-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute name state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-attlist-attribute-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-attlist-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "field" : "declared type",
                        "type" : "set-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute type state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute type state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-attlist-attribute-type-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-attlist-attribute-type-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-type-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute type state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute type state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-type-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-type-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-type-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-attribute-type-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ATTLIST default value state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-attlist-default-value-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-attlist-default-value-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after DOCTYPE internal subset state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-internal-subset-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "bogus after DOCTYPE internal subset state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after DOCTYPE name state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- P" : {
            "conds" : {
               "CHAR:0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PU" : {
            "conds" : {
               "CHAR:0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUB" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBL" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBLI" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- S" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SY" : {
            "conds" : {
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYS" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYST" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYSTE" : {
            "conds" : {
               "CHAR:004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "between DOCTYPE public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system identifier state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-doctype-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DTD msc state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "pop-section"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "index_offset" : "2",
                        "name" : "after-dtd-msc-005d",
                        "type" : "parse error"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : "2",
                        "name" : "after-dtd-msc-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after ELEMENT content state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "after ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-element-content-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-element-content-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "after ELEMENT content state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ELEMENT content state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-element-content-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-element-content-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-element-content-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-element-content-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY name state - before text declaration in markup declaration state",
                        "state" : "after ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-entity-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-entity-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-entity-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-entity-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state -- P" : {
            "conds" : {
               "CHAR:0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PU" : {
            "conds" : {
               "CHAR:0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUB" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUBL" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUBLI" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- S" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SY" : {
            "conds" : {
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYS" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYST" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYSTE" : {
            "conds" : {
               "CHAR:004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY parameter state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY parameter state - before text declaration in markup declaration state",
                        "state" : "after ENTITY parameter state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-parameter-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-parameter-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY parameter state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ENTITY parameter state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-entity-parameter-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-entity-parameter-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-entity-parameter-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-entity-parameter-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ENTITY public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between ENTITY public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-public-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-entity-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY public keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY public identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-public-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-entity-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY system identifier state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA keyword state - before text declaration in markup declaration state",
                        "state" : "before NDATA keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-system-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY system keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-entity-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY system identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-entity-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-entity-system-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-entity-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-entity-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after IGNORE keyword state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after IGNORE keyword state - before text declaration in markup declaration state",
                        "state" : "after IGNORE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-ignore-keyword-003c-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-ignore-keyword-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-ignore-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-ignore-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-ignore-keyword-005b-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-ignore-keyword-005d-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-ignore-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-ignore-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after IGNORE keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after IGNORE keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-ignore-keyword-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-ignore-keyword-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-ignore-keyword-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-ignore-keyword-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after INCLUDE keyword state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after INCLUDE keyword state - before text declaration in markup declaration state",
                        "state" : "after INCLUDE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-include-keyword-003c-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-include-keyword-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-include-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-include-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "type" : "insert-INCLUDE"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-include-keyword-005d-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-include-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-include-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after INCLUDE keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after INCLUDE keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-include-keyword-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-include-keyword-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-include-keyword-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-include-keyword-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after NDATA keyword state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA identifier state - before text declaration in markup declaration state",
                        "state" : "before NDATA identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-ndata-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-ndata-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after NOTATION name state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION name state - before text declaration in markup declaration state",
                        "state" : "after NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-notation-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after NOTATION name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-notation-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-notation-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-notation-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-notation-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after NOTATION name state -- P" : {
            "conds" : {
               "CHAR:0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PU" : {
            "conds" : {
               "CHAR:0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUB" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUBL" : {
            "conds" : {
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUBLI" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- S" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SY" : {
            "conds" : {
               "CHAR:0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYS" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYST" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYSTE" : {
            "conds" : {
               "CHAR:004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between NOTATION public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-notation-public-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION public keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION public identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-notation-public-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-notation-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-notation-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION system identifier state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "after NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-notation-system-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after NOTATION system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after NOTATION system keyword state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-notation-system-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-notation-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-notation-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after PI target state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "after after allowed token list state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after after allowed token list state - before text declaration in markup declaration state",
                        "state" : "after after allowed token list state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-after-allowed-token-list-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-after-allowed-token-list-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after after allowed token list state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after after allowed token list state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-after-allowed-token-list-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-after-allowed-token-list-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-after-allowed-token-list-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-after-allowed-token-list-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after allowed token list state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after after allowed token list state - before text declaration in markup declaration state",
                        "state" : "after after allowed token list state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-allowed-token-list-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-allowed-token-list-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after allowed token state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after allowed token state - before text declaration in markup declaration state",
                        "state" : "after allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-allowed-token-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after allowed token state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after allowed token state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-allowed-token-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-name-upper",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "after attribute value (quoted) state" : {
            "conds" : {
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "after content model group state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-group-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:002A" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002B" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002C" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-content-model-group-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-group-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               }
            }
         },
         "after content model item state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "state" : "after content model group state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "name" : "after-content-model-item-0029",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "CHAR:002A" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002B" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002C" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "break" : 1,
                              "if" : "fragment",
                              "name" : "after-content-model-item-003e-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "name" : "after-content-model-item-003e",
                              "type" : "parse error"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "break" : 1,
                              "if" : "fragment",
                              "name" : "after-content-model-item-003e-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           },
                           {
                              "type" : "emit"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "after content model item state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after content model item state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-content-model-item-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after ignored section msc state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "pop-section"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after msc state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "after-msc-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "after mss state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after mss state - before text declaration in markup declaration state",
                        "state" : "after mss state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-mss-003c-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-mss-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-mss-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-mss-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0049" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-mss-005b-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-mss-005b",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "after-mss-005d-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "after-mss-005d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0069" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after mss state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "after-mss-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "after-mss-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "after-mss-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "after-mss-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "after mss state -- I" : {
            "conds" : {
               "CHAR:0047" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IG",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IN",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0067" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IG",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IN",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IG" : {
            "conds" : {
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGN",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGN",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGN" : {
            "conds" : {
               "CHAR:004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNO",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNO",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGNO" : {
            "conds" : {
               "CHAR:0052" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNOR",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0072" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNOR",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGNOR" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "IGNORE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "IGNORE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IN" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INC",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INC",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INC" : {
            "conds" : {
               "CHAR:004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCL",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCL",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCL" : {
            "conds" : {
               "CHAR:0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLU",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLU",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCLU" : {
            "conds" : {
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLUD",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0064" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLUD",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCLUD" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "INCLUDE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "INCLUDE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "allowed token state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-allowed-token",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after allowed token state - before text declaration in markup declaration state",
                        "state" : "after allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "allowed-token-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-allowed-token"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "after attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value in entity state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ATTLIST attribute default state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-default-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-default-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-default-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-attlist-attribute-default-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-attlist-attribute-default-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "default type",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-default-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-attlist-attribute-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST attribute name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ATTLIST attribute name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-attribute-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ATTLIST name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-attlist-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-attlist-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ATTLIST name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attlist-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before DOCTYPE name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-name-005b",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "before DOCTYPE public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-public-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before DOCTYPE system identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-system-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before ELEMENT content state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "field" : "content model group",
                        "type" : "set-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup-as-only-item"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002A" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002B" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002C" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-element-content-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-element-content-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "content keyword",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT content keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before ELEMENT content state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ELEMENT content state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-element-content-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ELEMENT name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT name state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-element-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-element-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before ELEMENT name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ELEMENT name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-element-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-element-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-element-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-element-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY name state - before text declaration in markup declaration state",
                        "state" : "before ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-entity-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-entity-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-entity-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-entity-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-entity-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY public identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-entity-public-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-entity-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-entity-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY public identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY public identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-entity-public-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-entity-public-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-entity-public-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-entity-public-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY system identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY system identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-entity-system-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-entity-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-entity-system-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-entity-system-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-entity-system-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-entity-system-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY type state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "state" : "parameter entity declaration or reference after space state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY type state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY type state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-entity-type-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-entity-type-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-entity-type-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-entity-type-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before ENTITY value in entity state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     },
                     {
                        "type" : "process-xml-declaration-in-value"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NDATA identifier state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA identifier state - before text declaration in markup declaration state",
                        "state" : "before NDATA identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-ndata-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-ndata-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "notation name",
                        "type" : "set"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NDATA identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state" : {
            "conds" : {
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA keyword state - before text declaration in markup declaration state",
                        "state" : "before NDATA keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-ndata-keyword-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:004E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-keyword-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-keyword-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-keyword-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-ndata-keyword-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state -- N" : {
            "conds" : {
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- ND",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0064" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- ND",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- ND" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDA",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- NDA" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- NDAT" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "NDATA",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "NDATA",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NOTATION name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION name state - before text declaration in markup declaration state",
                        "state" : "before NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-notation-name-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION name state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NOTATION name state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-notation-name-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-notation-name-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-notation-name-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-notation-name-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NOTATION public identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION public identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-notation-public-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-notation-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-notation-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION public identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NOTATION public identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-notation-public-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-notation-public-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-notation-public-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-notation-public-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NOTATION system identifier state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-notation-system-identifier-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-notation-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before NOTATION system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-notation-system-identifier-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-notation-system-identifier-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-notation-system-identifier-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-notation-system-identifier-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before allowed token state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token",
                        "value" : "�"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before allowed token state - before text declaration in markup declaration state",
                        "state" : "before allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-allowed-token-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-007c",
                        "type" : "parse error"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before allowed token state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before allowed token state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-allowed-token-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before attribute name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before attribute value state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before content model item state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement",
                        "value" : "�"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before content model item state - before text declaration in markup declaration state",
                        "state" : "before content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "type" : "append-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002A" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002B" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002C" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "before-content-model-item-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "before-content-model-item-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before content model item state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "before content model item state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "before-content-model-item-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "between DOCTYPE public and system identifiers state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "between-doctype-public-and-system-identifiers-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "name" : "between-doctype-public-and-system-identifiers-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "between-doctype-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "between ENTITY public and system identifiers state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between ENTITY public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "between-entity-public-and-system-identifiers-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "name" : "between-entity-public-and-system-identifiers-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "between-entity-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "between ENTITY public and system identifiers state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "between ENTITY public and system identifiers state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "between-entity-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "between-entity-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "between-entity-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "between-entity-public-and-system-identifiers-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "between NOTATION public and system identifiers state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between NOTATION public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "between-notation-public-and-system-identifiers-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "between-notation-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "between NOTATION public and system identifiers state - before text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "between NOTATION public and system identifiers state - text declaration in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "between-notation-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "between-notation-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "between-notation-public-and-system-identifiers-state-text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "between-notation-public-and-system-identifiers-state-text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "bogus DOCTYPE state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "bogus after DOCTYPE internal subset state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "bogus comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "bogus markup declaration state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "bogus-markup-declaration-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1,
                           "ELEMENT token" : 1,
                           "ENTITY token" : 1,
                           "NOTATION token" : 1,
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "character reference in data state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "data state - character reference state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "comment end bang state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "name" : "comment-end-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "comment end bang state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "name" : "comment-end-002d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "-"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start dash state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-dash-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment start dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "comment-start-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "content model element state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-cmelement",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0028" : {
                  "actions" : [
                     {
                        "name" : "content-model-element-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0029" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:002A" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002B" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002C" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "name" : "content-model-element-003e-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:007C" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-cmelement"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "data state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "default attribute value (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value in entity state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference decimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "HEXDIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference number state" : {
            "conds" : {
               "CHAR:0058" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "DIGIT" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "end tag open state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "end-tag-open-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set-empty"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "end-tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "ignored section state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "in DTD msc state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "state" : "after DTD msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : "1",
                        "name" : "in-dtd-msc-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "in ignored section msc state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "state" : "after ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "in msc state" : {
            "conds" : {
               "CHAR:005D" : {
                  "actions" : [
                     {
                        "state" : "after msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "in pic state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "?"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "markup declaration open state" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0064" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- -" : {
            "conds" : {
               "CHAR:002D" : {
                  "actions" : [
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "comment start state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- D" : {
            "conds" : {
               "CHAR:004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DO" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOC" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCT" : {
            "conds" : {
               "CHAR:0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTY" : {
            "conds" : {
               "CHAR:0050" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0070" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTYP" : {
            "conds" : {
               "CHAR:0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "DOCTYPE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "expected_keyword" : "DOCTYPE",
                        "if" : "temp-wrong-case",
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [" : {
            "conds" : {
               "CHAR:0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [C",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [C" : {
            "conds" : {
               "CHAR:0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CD",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CD" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDA" : {
            "conds" : {
               "CHAR:0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDAT" : {
            "conds" : {
               "CHAR:0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDATA",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDATA" : {
            "conds" : {
               "CHAR:005B" : {
                  "actions" : [
                     {
                        "if" : "OE is empty",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "parameter entity declaration or reference after space state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity declaration or reference state" : {
            "conds" : {
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-declaration-or-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in DTD state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-dtd"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-003d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-0060",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-dtd-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "parameter entity name in entity value (double-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in entity value (single-quoted) state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in entity value in entity state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-entity-value-in-entity-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            }
         },
         "parameter entity name in markup declaration state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:0022" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0023" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0025" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0026" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0027" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-md"
                     }
                  ]
               },
               "CHAR:003C" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003D" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-003d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:0060" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-0060",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "parameter-entity-name-in-markup-declaration-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "self-closing start tag state" : {
            "conds" : {
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag name state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "tag name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "UPPER" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag open state" : {
            "conds" : {
               "CHAR:0000" : {
                  "actions" : [
                     {
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:0021" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:002F" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "CHAR:003E" : {
                  "actions" : [
                     {
                        "name" : "tag-open-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "CHAR:003F" : {
                  "actions" : [
                     {
                        "state" : "PI state",
                        "type" : "switch"
                     }
                  ]
               },
               "ELSE" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               },
               "WS:HTML" : {
                  "actions" : [
                     {
                        "name" : "tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "reconsume"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         }
      },
      "tokens" : {
         "ATTLIST token" : {
            "fields" : {
               "name" : 1
            },
            "short_name" : "ATTLIST"
         },
         "DOCTYPE token" : {
            "fields" : {
               "force-quirks flag" : 1,
               "has internal subset flag" : 1,
               "name" : 1,
               "public identifier" : 1,
               "system identifier" : 1
            },
            "short_name" : "DOCTYPE"
         },
         "ELEMENT token" : {
            "fields" : {
               "content keyword" : 1,
               "content model group" : 1,
               "name" : 1
            },
            "short_name" : "ELEMENT"
         },
         "ENTITY token" : {
            "fields" : {
               "is parameter entity flag" : 1,
               "name" : 1,
               "notation name" : 1,
               "public identifier" : 1,
               "system identifier" : 1,
               "value" : 1
            },
            "short_name" : "ENTITY"
         },
         "NOTATION token" : {
            "fields" : {
               "name" : 1,
               "public identifier" : 1,
               "system identifier" : 1
            },
            "short_name" : "NOTATION"
         },
         "character token" : {
            "fields" : {
               "value" : 1
            },
            "short_name" : "CHAR"
         },
         "comment token" : {
            "fields" : {
               "data" : 1
            },
            "short_name" : "COMMENT"
         },
         "end tag token" : {
            "fields" : {
               "attributes" : 1,
               "self-closing flag" : 1,
               "tag name" : 1
            },
            "short_name" : "END"
         },
         "end-of-DOCTYPE token" : {
            "short_name" : "EOD"
         },
         "end-of-file token" : {
            "fields" : {
            },
            "short_name" : "EOF"
         },
         "processing instruction token" : {
            "fields" : {
               "data" : 1,
               "target" : 1
            },
            "short_name" : "PI"
         },
         "start tag token" : {
            "fields" : {
               "attributes" : 1,
               "self-closing flag" : 1,
               "tag name" : 1
            },
            "short_name" : "START"
         }
      }
   },
   "tree_patterns" : {
      "HTML element" : {
         "ns" : "HTML"
      }
   }
}
