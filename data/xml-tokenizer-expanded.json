{
   "tokenizer" : {
      "char_sets" : {
         "0000" : {
            "0" : 1
         },
         "0009,000C,0020" : {
            "12" : 1,
            "32" : 1,
            "9" : 1
         },
         "000A" : {
            "10" : 1
         },
         "000D" : {
            "13" : 1
         },
         "0021" : {
            "33" : 1
         },
         "0022" : {
            "34" : 1
         },
         "0023" : {
            "35" : 1
         },
         "0025" : {
            "37" : 1
         },
         "0026" : {
            "38" : 1
         },
         "0027" : {
            "39" : 1
         },
         "0028" : {
            "40" : 1
         },
         "0029" : {
            "41" : 1
         },
         "002A" : {
            "42" : 1
         },
         "002B" : {
            "43" : 1
         },
         "002C" : {
            "44" : 1
         },
         "002D" : {
            "45" : 1
         },
         "002F" : {
            "47" : 1
         },
         "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
            "48" : 1,
            "49" : 1,
            "50" : 1,
            "51" : 1,
            "52" : 1,
            "53" : 1,
            "54" : 1,
            "55" : 1,
            "56" : 1,
            "57" : 1
         },
         "003B" : {
            "59" : 1
         },
         "003C" : {
            "60" : 1
         },
         "003D" : {
            "61" : 1
         },
         "003E" : {
            "62" : 1
         },
         "003F" : {
            "63" : 1
         },
         "0041" : {
            "65" : 1
         },
         "0042" : {
            "66" : 1
         },
         "0043" : {
            "67" : 1
         },
         "0044" : {
            "68" : 1
         },
         "0045" : {
            "69" : 1
         },
         "0046" : {
            "70" : 1
         },
         "0047" : {
            "71" : 1
         },
         "0048,004A,004B,0051,0056,0057,005A" : {
            "72" : 1,
            "74" : 1,
            "75" : 1,
            "81" : 1,
            "86" : 1,
            "87" : 1,
            "90" : 1
         },
         "0049" : {
            "73" : 1
         },
         "004C" : {
            "76" : 1
         },
         "004D" : {
            "77" : 1
         },
         "004E" : {
            "78" : 1
         },
         "004F" : {
            "79" : 1
         },
         "0050" : {
            "80" : 1
         },
         "0052" : {
            "82" : 1
         },
         "0053" : {
            "83" : 1
         },
         "0054" : {
            "84" : 1
         },
         "0055" : {
            "85" : 1
         },
         "0058" : {
            "88" : 1
         },
         "0059" : {
            "89" : 1
         },
         "005B" : {
            "91" : 1
         },
         "005D" : {
            "93" : 1
         },
         "0060" : {
            "96" : 1
         },
         "0061" : {
            "97" : 1
         },
         "0062" : {
            "98" : 1
         },
         "0063" : {
            "99" : 1
         },
         "0064" : {
            "100" : 1
         },
         "0065" : {
            "101" : 1
         },
         "0066" : {
            "102" : 1
         },
         "0067" : {
            "103" : 1
         },
         "0068,006A,006B,0071,0076,0077,007A" : {
            "104" : 1,
            "106" : 1,
            "107" : 1,
            "113" : 1,
            "118" : 1,
            "119" : 1,
            "122" : 1
         },
         "0069" : {
            "105" : 1
         },
         "006C" : {
            "108" : 1
         },
         "006D" : {
            "109" : 1
         },
         "006E" : {
            "110" : 1
         },
         "006F" : {
            "111" : 1
         },
         "0070" : {
            "112" : 1
         },
         "0072" : {
            "114" : 1
         },
         "0073" : {
            "115" : 1
         },
         "0074" : {
            "116" : 1
         },
         "0075" : {
            "117" : 1
         },
         "0078" : {
            "120" : 1
         },
         "0079" : {
            "121" : 1
         },
         "007C" : {
            "124" : 1
         },
         "EOF" : {
            "-1" : 1
         }
      },
      "states" : {
         "ATTLIST attribute default state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "default type",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-default-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute default state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute default state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-default-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "attlist-attribute-default-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST attribute name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-name-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "attlist-attribute-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr type",
                        "name" : "attlist-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST attribute type state" : {
            "conds" : {
               "0000 0021 0026 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "declared type",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-type-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-type-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute type state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-type-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-attribute-type-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "attlist-attribute-type-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "attlist-attribute-type-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "attlist-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "ATTLIST state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "attlist-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "token" : "ATTLIST token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "attlist-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "attlist-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "CDATA section bracket state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "]"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "]"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "CDATA section state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "CDATA section end state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "]"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section end state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 2,
                        "type" : "emit-char",
                        "value" : "]]"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 2,
                        "type" : "emit-char",
                        "value" : "]]"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "CDATA section state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "index_offset" : 2,
                        "type" : "emit-char",
                        "value" : "]"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "index_offset" : 2,
                        "type" : "emit-char",
                        "value" : "]]"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "CDATA section state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "CDATA section bracket state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "CDATA section state after 000D" : {
            "conds" : {
               "0000 0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "CDATA section state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "CDATA section bracket state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE PI data state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI data state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE PI state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "field" : "data",
                        "index_offset" : "1",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set"
                     },
                     {
                        "field" : "data",
                        "index_offset" : "1",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-003f",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI target question state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE PI target state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "target",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "set-to-temp"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "target",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI target question state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE after PI target state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE after PI target state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE after PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE bogus comment state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE bogus comment state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE comment end bang state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "state" : "DOCTYPE comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment end dash state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment end state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE comment end bang state",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-002d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "-"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment start dash state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment closed",
                        "name" : "comment-start-dash-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment start state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment start dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment closed",
                        "name" : "comment-start-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "DOCTYPE comment state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE in pic state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "DOCTYPE PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "set"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- -",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- A",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- E",
                        "type" : "switch"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "if" : "DTD mode is not internal subset",
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "condsect in internal subset",
                        "index_offset" : "2",
                        "name" : "doctype-markup-declaration-open-005b",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0061" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- A",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- E",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- -" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE comment start state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- A" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- AT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- AT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- AT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTL",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTL",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTL" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTLI" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLIS",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ATTLIS",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ATTLIS" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ATTLIST",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ATTLIST state",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ATTLIST",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ATTLIST state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- E" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EL",
                        "type" : "switch"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EN",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EL",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- EN",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- EL" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELE",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELE",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELE" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEM",
                        "type" : "switch"
                     }
                  ]
               },
               "006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEM",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEM" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEME",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEME",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEME" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEMEN",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ELEMEN",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ELEMEN" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ELEMENT",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ELEMENT state",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ELEMENT",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ELEMENT state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- EN" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENTI" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTIT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- ENTIT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- ENTIT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ENTITY",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY state",
                        "type" : "switch"
                     }
                  ]
               },
               "0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "ENTITY",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "ENTITY state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- N" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NO",
                        "type" : "switch"
                     }
                  ]
               },
               "006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NO",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NO" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTA",
                        "type" : "switch"
                     }
                  ]
               },
               "0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTA",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTA" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTAT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTAT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTAT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTATI" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATIO",
                        "type" : "switch"
                     }
                  ]
               },
               "006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state -- NOTATIO",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE markup declaration open state -- NOTATIO" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "doctype-markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "NOTATION",
                        "if" : "temp-wrong-case",
                        "index_offset" : 7,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION state",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "NOTATION",
                        "if" : "temp-wrong-case",
                        "index_offset" : 7,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "NOTATION state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DOCTYPE name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "doctype-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "doctype-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE public identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "doctype-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE public identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "doctype-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "no DOCTYPE name",
                        "name" : "before-doctype-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "doctype-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "no DOCTYPE name",
                        "name" : "before-doctype-name-005b",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "DOCTYPE system identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE system identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE system identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "DOCTYPE system identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "DOCTYPE tag open state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "doctype-tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "doctype-tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "set"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "doctype-tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "DOCTYPE bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "DOCTYPE markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "doctype-tag-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE PI state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "DTD state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "DOCTYPE tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "after DOCTYPE internal subset state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ELEMENT content keyword state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "content keyword",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "after ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "element-content-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "ELEMENT name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "element-name-0028",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "field" : "content model group",
                        "type" : "set-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup-as-only-item"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "element-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "element-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "ELEMENT state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "element-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "element-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "token" : "ELEMENT token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT name state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "element-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "element-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ENTITY name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "entity-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY name state - before text declaration in markup declaration state",
                        "state" : "after ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "entity-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY public identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-public-identifier-double-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "entity-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY public identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-public-identifier-double-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "entity-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY public identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-public-identifier-single-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "entity-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY public identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-public-identifier-single-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "entity-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "entity-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "entity-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "token" : "ENTITY token",
                        "type" : "create"
                     },
                     {
                        "state" : "parameter entity declaration or reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "entity-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "entity-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ENTITY system identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY system identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY system identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY system identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference name state" : {
            "conds" : {
               "0000 0021 0028 0029 002A 002B 002C 002D 002F 003F 005B 005D 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-double-quoted-state-character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference name state" : {
            "conds" : {
               "0000 0021 0028 0029 002A 002B 002C 002D 002F 003F 005B 005D 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-single-quoted-state-character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "ENTITY value (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 003C 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_entity_value" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference name state" : {
            "conds" : {
               "0000 0021 0028 0029 002A 002B 002C 002D 002F 003F 005B 005D 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "validate-temp-as-entref"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "entity-value-in-entity-state-character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "ENTITY value in entity state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "NDATA identifier state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "notation name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY parameter state - before text declaration in markup declaration state",
                        "state" : "after ENTITY parameter state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "ndata-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "NOTATION name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION name state - before text declaration in markup declaration state",
                        "state" : "after NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION public identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-public-identifier-double-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "notation-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION public identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION public identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-public-identifier-double-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "notation-public-identifier-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "NOTATION public identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-public-identifier-single-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "notation-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION public identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION public identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-public-identifier-single-quoted-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "parser:literal not closed",
                        "name" : "notation-public-identifier-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "NOTATION state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "notation-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "notation-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "token" : "NOTATION token",
                        "type" : "create"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION name state - before text declaration in markup declaration state",
                        "state" : "before NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "notation-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "notation-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "NOTATION system identifier (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION system identifier (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "NOTATION system identifier (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "NOTATION system identifier (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "PI data state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "PI data state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "PI state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "field" : "data",
                        "index_offset" : "1",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "token" : "processing instruction token",
                        "type" : "create"
                     },
                     {
                        "field" : "target",
                        "type" : "set"
                     },
                     {
                        "field" : "data",
                        "index_offset" : "1",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "bare pio",
                        "index_offset" : "2",
                        "name" : "pi-003f",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "PI target question state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no s after target",
                        "index_offset" : "1",
                        "name" : "pi-target-question-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "type" : "set",
                        "value" : "?"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "PI target state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "target",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "state" : "after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "set-to-temp"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "target",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "PI target question state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "after ATTLIST attribute default state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute default state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute default state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-default-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute default state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute default state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute default state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-default-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute default state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute default state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute default state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute default state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute name state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "declared type",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr type",
                        "name" : "after-attlist-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "declared type",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr type",
                        "name" : "after-attlist-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute type state" : {
            "conds" : {
               "0000 0021 0026 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "after-attlist-attribute-type-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute type state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-type-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "after-attlist-attribute-type-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after ATTLIST attribute type state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0026 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "after-attlist-attribute-type-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ATTLIST attribute type state - before text declaration in markup declaration state",
                        "state" : "after ATTLIST attribute type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-attribute-type-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "after-attlist-attribute-type-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute type state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST attribute type state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ATTLIST attribute type state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ATTLIST attribute type state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ATTLIST default value state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-attlist-default-value-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-attlist-default-value-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-attlist-default-value-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-attrdef"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after DOCTYPE internal subset state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after internal subset",
                        "name" : "after-doctype-internal-subset-else",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "bogus after DOCTYPE internal subset state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string in internal subset",
                        "if" : "fragment",
                        "index_offset" : 1,
                        "name" : "after-doctype-internal-subset-003e-fragment",
                        "state" : "DTD state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "after DTD msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after DOCTYPE name state" : {
            "conds" : {
               "0000 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- P" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PU" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUB" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBL" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- PUBLI" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- S" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SY" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYS" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYST" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after DOCTYPE name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE name state -- SYSTE" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-name-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after DOCTYPE system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public identifier state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "between DOCTYPE public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-public-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE public keyword state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-public-keyword-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system identifier state" : {
            "conds" : {
               "0000 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DOCTYPE system keyword state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "after-doctype-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before DOCTYPE system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space before literal",
                        "name" : "after-doctype-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-doctype-system-keyword-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "after DTD msc state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string in internal subset",
                        "index_offset" : "2",
                        "name" : "after-dtd-msc-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "pop-section"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "string in internal subset",
                        "index_offset" : "2",
                        "name" : "after-dtd-msc-005d",
                        "type" : "parse error"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after ELEMENT content state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after md def",
                        "name" : "after-element-content-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "after ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-element-content-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "after ELEMENT content state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after md def",
                        "name" : "after-element-content-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "after ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-element-content-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ELEMENT content state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ELEMENT content state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ELEMENT content state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY name state - before text declaration in markup declaration state",
                        "state" : "after ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "after-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY name state - before text declaration in markup declaration state",
                        "state" : "after ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "after-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ENTITY name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY name state -- P" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PU" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUB" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUBL" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- PUBLI" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- S" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SY" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYS" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYST" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY name state -- SYSTE" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-entity-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after ENTITY system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY parameter state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after md def",
                        "name" : "after-entity-parameter-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY parameter state - before text declaration in markup declaration state",
                        "state" : "after ENTITY parameter state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-parameter-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY parameter state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after md def",
                        "name" : "after-entity-parameter-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after ENTITY parameter state - before text declaration in markup declaration state",
                        "state" : "after ENTITY parameter state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-parameter-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY parameter state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY parameter state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after ENTITY parameter state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ENTITY public identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between ENTITY public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY public keyword state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY public identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-public-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY system identifier state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA keyword state - before text declaration in markup declaration state",
                        "state" : "before NDATA keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after ENTITY system keyword state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY system identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-entity-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-entity-system-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-entity-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after IGNORE keyword state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after IGNORE keyword state - before text declaration in markup declaration state",
                        "state" : "after IGNORE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after IGNORE keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after IGNORE keyword state - before text declaration in markup declaration state",
                        "state" : "after IGNORE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-ignore-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-ignore-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after IGNORE keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after IGNORE keyword state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after IGNORE keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after INCLUDE keyword state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after INCLUDE keyword state - before text declaration in markup declaration state",
                        "state" : "after INCLUDE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-INCLUDE"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after INCLUDE keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after INCLUDE keyword state - before text declaration in markup declaration state",
                        "state" : "after INCLUDE keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-INCLUDE"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-include-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-include-keyword-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after INCLUDE keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after INCLUDE keyword state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after INCLUDE keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NDATA keyword state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA identifier state - before text declaration in markup declaration state",
                        "state" : "before NDATA identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-ndata-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no notation name",
                        "name" : "after-ndata-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "after NOTATION name state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION name state - before text declaration in markup declaration state",
                        "state" : "after NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "after-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION name state - before text declaration in markup declaration state",
                        "state" : "after NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "after-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- P",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- S",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after NOTATION name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION name state -- P" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PU",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PU" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0042" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "0062" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUB",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUB" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBL",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUBL" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- PUBLI",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- PUBLI" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "PUBLIC",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION public keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- S" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SY",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SY" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0053" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "0073" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYS",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYS" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYST",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYST" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION name state -- SYSTE",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION name state -- SYSTE" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:string after name",
                        "name" : "after-notation-name-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "004D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "006D" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "SYSTEM",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NOTATION system keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION public identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after PUBLIC literal",
                        "name" : "after-notation-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-public-identifier-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between NOTATION public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-public-identifier-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION public keyword state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-public-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-public-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION public identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-public-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-public-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-notation-public-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION system identifier state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "after-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "after NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after NOTATION system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "after-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "after NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION system identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after NOTATION system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after NOTATION system keyword state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-system-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-system-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-notation-system-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-notation-system-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "after-notation-system-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "after PI target state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "after PI target state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "after PI target state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after PI target state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after PI target state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "in pic state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after after allowed token list state" : {
            "conds" : {
               "0000 0021 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "after-after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after after allowed token list state - before text declaration in markup declaration state",
                        "state" : "after after allowed token list state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-after-allowed-token-list-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "after-after-allowed-token-list-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after after allowed token list state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "after-after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after after allowed token list state - before text declaration in markup declaration state",
                        "state" : "after after allowed token list state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-after-allowed-token-list-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "after-after-allowed-token-list-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after after allowed token list state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after after allowed token list state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after after allowed token list state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after allowed token list state" : {
            "conds" : {
               "0000 0021 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "after-after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after after allowed token list state - before text declaration in markup declaration state",
                        "state" : "after after allowed token list state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "after-allowed-token-list-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-allowed-token-list-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "after-allowed-token-list-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after allowed token state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-allowed-token-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after allowed token state - before text declaration in markup declaration state",
                        "state" : "after allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-allowed-token-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "after allowed token state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-allowed-token-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after allowed token state - before text declaration in markup declaration state",
                        "state" : "after allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-allowed-token-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after allowed token state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after allowed token state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after allowed token state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after attribute name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-upper",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "after attribute value (quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "parser:no attr name",
                        "name" : "before-attribute-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "error_type" : "no space before attr name",
                        "name" : "after-attribute-value-quoted-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "after content model group state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-group-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-group-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "state" : "after content model group state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "xml:dtd:no group delimiter",
                              "name" : "after-content-model-item-0029",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-content-model-group-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "error_type" : "unclosed cmgroup",
                              "name" : "after-content-model-item-003e",
                              "type" : "parse error"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           },
                           {
                              "type" : "emit"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmgroup"
                     },
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "pop-cmgroup"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after content model item state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "state" : "after content model group state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "xml:dtd:no group delimiter",
                              "name" : "after-content-model-item-0029",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "error_type" : "unclosed cmgroup",
                              "name" : "after-content-model-item-003e",
                              "type" : "parse error"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           },
                           {
                              "type" : "emit"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "after content model item state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "state" : "after content model group state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "xml:dtd:no group delimiter",
                              "name" : "after-content-model-item-0029",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "error_type" : "unclosed cmgroup",
                              "name" : "after-content-model-item-003e",
                              "type" : "parse error"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           },
                           {
                              "type" : "emit"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "after-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after content model item state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after content model item state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after content model item state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after content model item state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after ignored section msc state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "pop-section"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after msc state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "unmatched mse",
                        "index_offset" : "2",
                        "name" : "after-msc-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "after mss state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after mss state - before text declaration in markup declaration state",
                        "state" : "after mss state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-mss-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-mss-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-mss-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-mss-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after mss state - before text declaration in markup declaration state",
                        "state" : "after mss state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "after-mss-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0049" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-mss-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "after-mss-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "ms:no status keyword",
                        "name" : "after-mss-005d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0069" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "after mss state -- I",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after mss state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after mss state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after mss state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "after mss state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "after mss state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "after mss state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "after mss state -- I" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0047" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IG",
                        "type" : "switch"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IN",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0067" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IG",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IN",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IG" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGN",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGN",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGN" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNO",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNO",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGNO" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0052" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNOR",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0072" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- IGNOR",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IGNOR" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "IGNORE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "IGNORE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 5,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after IGNORE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- IN" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INC",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INC",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INC" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "004C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCL",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "006C" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCL",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCL" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0055" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLU",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0075" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLU",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCLU" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLUD",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0064" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "after mss state -- INCLUD",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "after mss state -- INCLUD" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "INCLUDE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "ms:no dso",
                        "name" : "after-mss-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "INCLUDE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after INCLUDE keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "allowed token state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-allowed-token",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-allowed-token"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after allowed token state - before text declaration in markup declaration state",
                        "state" : "after allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "allowed-token-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "attribute name state" : {
            "compound_conds" : {
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C\u0022([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C&\u005C\u003C]*)\u005C\u0022\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C=[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*\u005C'([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C&\u005C'\u005C\u003C]*)\u005C'\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "value",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               }
            },
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "after attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "state" : "before attribute value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-attr"
                     },
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "after attribute value (quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value (unquoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "attribute value (unquoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "attribute value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "attribute value in entity state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST attribute default state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "default type",
                        "type" : "append-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute default state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-attlist-attribute-default-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no attr default",
                        "name" : "before-attlist-attribute-default-eof",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST attribute name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-attlist-attribute-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST attribute name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "create-attrdef"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "state" : "ATTLIST attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST attribute name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST attribute name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-attlist-attribute-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST attribute name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST attribute name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ATTLIST attribute name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST attribute name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-attlist-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-attlist-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before ATTLIST name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ATTLIST name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ATTLIST name state - before text declaration in markup declaration state",
                        "state" : "before ATTLIST name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-attlist-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-attlist-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ATTLIST name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ATTLIST name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ATTLIST name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before DOCTYPE name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE name",
                        "name" : "before-doctype-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "DOCTYPE name state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE name",
                        "name" : "before-doctype-name-005b",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "DOCTYPE token",
                        "type" : "create"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "before DOCTYPE public identifier state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "before-doctype-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "field" : "public identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-doctype-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-doctype-public-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before DOCTYPE system identifier state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "before-doctype-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-doctype-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-doctype-system-identifier-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "before ELEMENT content state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "field" : "content keyword",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT content keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "field" : "content model group",
                        "type" : "set-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup-as-only-item"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-element-content-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before ELEMENT content state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "content keyword",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT content keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT content state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT content state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "field" : "content model group",
                        "type" : "set-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup-as-only-item"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-element-content-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ELEMENT token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no md def",
                        "name" : "before-element-content-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ELEMENT content state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ELEMENT content state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ELEMENT content state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT content state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ELEMENT name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT name state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-element-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-element-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before ELEMENT name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ELEMENT name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ELEMENT name state - before text declaration in markup declaration state",
                        "state" : "before ELEMENT name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-element-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-element-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ELEMENT name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ELEMENT name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ELEMENT name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ELEMENT name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY name state - before text declaration in markup declaration state",
                        "state" : "before ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY name state - before text declaration in markup declaration state",
                        "state" : "before ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY public identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY public identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY public identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY public identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY public identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY public identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY public identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY public identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY system identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY system identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY system identifier state - before text declaration in markup declaration state",
                        "state" : "before ENTITY system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-entity-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY system identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY type state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "state" : "parameter entity declaration or reference after space state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before ENTITY type state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "parameter entity declaration or reference after space state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY type state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY type state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before ENTITY type state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before ENTITY type state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before ENTITY value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "text declaration in ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA identifier state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "notation name",
                        "type" : "set"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA identifier state - before text declaration in markup declaration state",
                        "state" : "before NDATA identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-ndata-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no notation name",
                        "name" : "before-ndata-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "notation name",
                        "type" : "set"
                     },
                     {
                        "state" : "NDATA identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA identifier state - before text declaration in markup declaration state",
                        "state" : "before NDATA identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-ndata-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no notation name",
                        "name" : "before-ndata-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NDATA identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA keyword state - before text declaration in markup declaration state",
                        "state" : "before NDATA keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-ndata-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NDATA keyword state - before text declaration in markup declaration state",
                        "state" : "before NDATA keyword state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-ndata-keyword-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "006E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- N",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NDATA keyword state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NDATA keyword state -- N" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- ND",
                        "type" : "switch"
                     }
                  ]
               },
               "0064" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- ND",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- ND" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDA",
                        "type" : "switch"
                     }
                  ]
               },
               "0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDA",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- NDA" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NDATA keyword state -- NDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NDATA keyword state -- NDAT" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after SYSTEM literal",
                        "name" : "before-ndata-keyword-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "NDATA",
                        "if" : "temp-wrong-case",
                        "index_offset" : 4,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0061" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "NDATA",
                        "if" : "temp-wrong-case",
                        "index_offset" : 4,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after NDATA keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "before NOTATION name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION name state - before text declaration in markup declaration state",
                        "state" : "before NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION name state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "NOTATION name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION name state - before text declaration in markup declaration state",
                        "state" : "before NOTATION name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-notation-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION name state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION name state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION name state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION name state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION public identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION public identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION public identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-public-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION public identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION public identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION public identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-public-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-public-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION public identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION public identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION public identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION public identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION system identifier state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after md def",
                        "name" : "before-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "before NOTATION system identifier state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after md def",
                        "name" : "before-notation-system-identifier-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before NOTATION system identifier state - before text declaration in markup declaration state",
                        "state" : "before NOTATION system identifier state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-notation-system-identifier-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "before-notation-system-identifier-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION system identifier state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before NOTATION system identifier state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before NOTATION system identifier state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before NOTATION system identifier state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before allowed token state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token",
                        "value" : "�"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 0028 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before allowed token state - before text declaration in markup declaration state",
                        "state" : "before allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-allowed-token-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-007c",
                        "type" : "parse error"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "before allowed token state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token",
                        "value" : "�"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 0028 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "insert-allowed-token"
                     },
                     {
                        "field" : "value",
                        "type" : "set-to-allowed-token"
                     },
                     {
                        "state" : "allowed token state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before allowed token state - before text declaration in markup declaration state",
                        "state" : "before allowed token state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "after allowed token list state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-allowed-token-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-allowed-token-007c",
                        "type" : "parse error"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before allowed token state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before allowed token state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before allowed token state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before allowed token state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before attribute name state" : {
            "compound_conds" : {
               "([A-Z])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C'\u005C/\u005C\u003C\u005C=\u005C>A-Z]*)([A-Z]*)" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "name",
                        "type" : "append-to-attr"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C'\u005C/\u005C\u003C\u005C=\u005C>A-Z])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C\u0022\u005C'\u005C/\u005C\u003C\u005C=\u005C>A-Z]*)([A-Z]*)" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "name",
                        "type" : "append-to-attr"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "name",
                        "type" : "append-to-attr"
                     }
                  ]
               }
            },
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "parser:no attr name",
                        "name" : "before-attribute-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before attribute value state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "state" : "attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "attribute value (unquoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "state" : "attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-value-unquoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bad attribute value",
                        "name" : "before-attribute-value-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "attribute value (unquoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute value",
                        "name" : "attribute-value-unquoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "unquoted attr value",
                        "name" : "before-attribute-value-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "before content model item state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement",
                        "value" : "�"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before content model item state - before text declaration in markup declaration state",
                        "state" : "before content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "type" : "append-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-content-model-item-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "unclosed cmgroup",
                        "name" : "before-content-model-item-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "before content model item state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement",
                        "value" : "�"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "insert-cmelement"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "content model element state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before content model item state - before text declaration in markup declaration state",
                        "state" : "before content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "type" : "create-cmgroup"
                     },
                     {
                        "type" : "append-cmgroup"
                     },
                     {
                        "type" : "push-cmgroup"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-0029",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002a",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-002c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "before content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-content-model-item-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "unclosed cmgroup",
                        "name" : "before-content-model-item-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-003f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "xml:dtd:no group item",
                        "name" : "before-content-model-item-007c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before content model item state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before content model item state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "before content model item state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "before content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "before content model item state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "before content model item state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "before content model item state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between DOCTYPE public and system identifiers state" : {
            "conds" : {
               "0000 0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus DOCTYPE",
                        "name" : "between-doctype-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "bogus DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "field" : "system identifier",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "DOCTYPE system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-doctype-public-and-system-identifiers-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-doctype-public-and-system-identifiers-005b",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "force-quirks flag",
                        "type" : "set-flag"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "between ENTITY public and system identifiers state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-entity-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between ENTITY public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "between-entity-public-and-system-identifiers-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-entity-public-and-system-identifiers-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "between ENTITY public and system identifiers state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-entity-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between ENTITY public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "ENTITY system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "between-entity-public-and-system-identifiers-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no DOCTYPE literal",
                        "name" : "between-entity-public-and-system-identifiers-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ENTITY token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between ENTITY public and system identifiers state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between ENTITY public and system identifiers state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between ENTITY public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between NOTATION public and system identifiers state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "string after PUBLIC literal",
                        "name" : "between-notation-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between NOTATION public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "between-notation-public-and-system-identifiers-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "NOTATION token" : 1
            }
         },
         "between NOTATION public and system identifiers state - before text declaration in markup declaration state" : {
            "conds" : {
               "0000 0021 0023 0026 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "error_type" : "string after PUBLIC literal",
                        "name" : "between-notation-public-and-system-identifiers-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "between NOTATION public and system identifiers state - before text declaration in markup declaration state",
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "type" : "set-in-literal"
                     },
                     {
                        "state" : "NOTATION system identifier (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "between-notation-public-and-system-identifiers-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between NOTATION public and system identifiers state - text declaration in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "between NOTATION public and system identifiers state - text declaration in markup declaration state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0000-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state - text declaration in markup declaration state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0021",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "tag in pe in markup declaration",
                        "name" : "text-declaration-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-0026-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "between NOTATION public and system identifiers state",
                        "type" : "switch"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-003e-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "false_actions" : [
                           {
                              "error_type" : "tag in pe in markup declaration",
                              "index_offset" : 1,
                              "name" : "text-declaration-in-markup-declaration-eof-",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           }
                        ],
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "bogus DOCTYPE state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "field" : "has internal subset flag",
                        "type" : "set-flag"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "internal subset"
                     },
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "DOCTYPE token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "DOCTYPE token" : 1
            }
         },
         "bogus after DOCTYPE internal subset state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "bogus comment state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "bogus comment state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "bogus markup declaration state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-markup-declaration-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1,
                           "ELEMENT token" : 1,
                           "ENTITY token" : 1,
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1
            }
         },
         "bogus status keyword state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "0025" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005b-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-005d-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "character reference in data state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "comment end bang state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 3,
                        "type" : "append",
                        "value" : "--!"
                     },
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end dash state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment end state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 2,
                        "type" : "append",
                        "value" : "--"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-0021",
                        "type" : "parse error"
                     },
                     {
                        "state" : "comment end bang state",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment not closed",
                        "name" : "comment-end-002d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "-"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start dash state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "comment end state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment closed",
                        "name" : "comment-start-dash-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment start state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "comment start dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "parser:comment closed",
                        "name" : "comment-start-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "comment token" : 1
            }
         },
         "comment state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "content model element state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "name",
                        "type" : "append-to-cmelement",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0026 0027 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 ELSE" : {
                  "actions" : [
                     {
                        "field" : "name",
                        "type" : "append-to-cmelement"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "after content model item state - before text declaration in markup declaration state",
                        "state" : "after content model item state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0028" : {
                  "actions" : [
                     {
                        "error_type" : "xml:dtd:no group delimiter",
                        "name" : "content-model-element-0028",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0029" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "state" : "after content model group state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "xml:dtd:no group delimiter",
                              "name" : "after-content-model-item-0029",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "002A" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "002B" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "002C" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "content-model-element-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "error_type" : "unclosed cmgroup",
                              "name" : "after-content-model-item-003e",
                              "type" : "parse error"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "break" : 1,
                              "error_type" : "mdc in pe in md",
                              "if" : "md-fragment",
                              "name" : "after-content-model-item-003e-md-fragment",
                              "state" : "bogus markup declaration state",
                              "type" : "parse error-and-switch"
                           },
                           {
                              "state" : "DTD state",
                              "type" : "switch"
                           },
                           {
                              "type" : "emit"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "field" : "repetition",
                        "type" : "set-to-cmelement"
                     },
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     }
                  ]
               },
               "007C" : {
                  "actions" : [
                     {
                        "state" : "after content model item state",
                        "type" : "switch"
                     },
                     {
                        "actions" : [
                           {
                              "type" : "append-separator-to-cmgroup"
                           },
                           {
                              "state" : "before content model item state",
                              "type" : "switch"
                           }
                        ],
                        "false_actions" : [
                           {
                              "error_type" : "string after md def",
                              "name" : "after-content-model-item-007c",
                              "type" : "parse error"
                           },
                           {
                              "state" : "bogus markup declaration state",
                              "type" : "switch"
                           }
                        ],
                        "list" : "cm-group",
                        "type" : "if-empty"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ELEMENT token" : 1
            }
         },
         "data state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "emit-char"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "process-temp-as-named"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "data state - character reference state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "data state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "data state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "data state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "in msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (double-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-allowed-char",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1
            }
         },
         "default attribute value (single-quoted) state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ATTLIST default value state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "lt in attr value",
                        "name" : "default-attribute-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "default attribute value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ],
                  "repeat" : 1
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference before hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare hcro",
                        "name" : "character-reference-before-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference decimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-decimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-decimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference hexadecimal number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003D 003E 003F 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 0041 0042 0043 0044 0045 0046 0061 0062 0063 0064 0065 0066" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "003B" : {
                  "actions" : [
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-hexadecimal-number-else",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-hexadecimal"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-ws",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0022",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0023",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0025",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0026",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0027",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003c",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "before_equals" : 1,
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "character-reference-name-0060",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "in_attr" : 1,
                        "in_default_attr" : 1,
                        "type" : "process-temp-as-named"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference number state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0030,0031,0032,0033,0034,0035,0036,0037,0038,0039" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference decimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0058" : {
                  "actions" : [
                     {
                        "error_type" : "uppercase hcro",
                        "name" : "character-reference-number-0058",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0078" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference before hexadecimal number state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bare nero",
                        "name" : "character-reference-number-else",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state - character reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference number state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "index_offset" : "1",
                        "name" : "character-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "bare ero",
                        "index_offset" : "1",
                        "name" : "character-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp-to-attr"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "default attribute value in entity state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020" : {
                  "actions" : [
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr",
                        "value" : " "
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append-to-attr",
                        "value" : " "
                     },
                     {
                        "state" : "default attribute value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "default attribute value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "default attribute value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "entref in attr has element",
                        "name" : "default-attribute-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-to-attr"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "end tag open state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare etago",
                        "index_offset" : "2",
                        "name" : "end-tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "set"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare etago",
                        "index_offset" : "2",
                        "name" : "end-tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "empty end tag",
                        "index_offset" : "2",
                        "name" : "end-tag-open-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set-empty"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "index_offset" : "2",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "ignored section markup declaration open state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ignored section state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                  ],
                  "repeat" : 1
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "ignored section tag open state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "state" : "ignored section markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "in ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "in ignored section msc state" : {
            "conds" : {
               "0000 0009,000C,0020 000A 000D 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "after ignored section msc state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "in msc state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003D 003E 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "state" : "character reference in data state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "state" : "tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "005D" : {
                  "actions" : [
                     {
                        "state" : "after msc state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "in pic state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "state" : "PI data state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "PI data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "processing instruction token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "data",
                        "index_offset" : "2",
                        "type" : "append",
                        "value" : "?"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "processing instruction token" : 1
            }
         },
         "markup declaration open state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "set"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "set",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0044" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [",
                        "type" : "switch"
                     }
                  ]
               },
               "0064" : {
                  "actions" : [
                     {
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- D",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- -" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "002D" : {
                  "actions" : [
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "comment start state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "004F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "006F" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DO",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DO" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "0063" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOC",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOC" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "0074" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0059" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "0079" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTY",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTY" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0050" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "0070" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- DOCTYP",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- DOCTYP" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0045" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "DOCTYPE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "0065" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "error_type" : "keyword-wrong-case",
                        "expected_keyword" : "DOCTYPE",
                        "if" : "temp-wrong-case",
                        "index_offset" : 6,
                        "name" : "keyword-wrong-case",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0043" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [C",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [C" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0044" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CD",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CD" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDA",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDA" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0054" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDAT",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDAT" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- [CDATA",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "markup declaration open state -- [CDATA" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "bogus comment state",
                        "type" : "switch"
                     },
                     {
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "data",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "bogus comment state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "005B" : {
                  "actions" : [
                     {
                        "error_type" : "bogus comment",
                        "if" : "OE is empty",
                        "name" : "markup-declaration-open-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "CDATA section state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "field" : "data",
                        "type" : "append-temp"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "parameter entity declaration or reference after space state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY name state - before text declaration in markup declaration state",
                        "state" : "before ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-md"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity declaration or reference state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY name state - before text declaration in markup declaration state",
                        "state" : "before ENTITY name state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "index_offset" : 1,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "external_state" : "before ENTITY type state - before text declaration in markup declaration state",
                        "state" : "before ENTITY type state",
                        "type" : "set-original-state"
                     },
                     {
                        "state" : "parameter entity name in markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-md"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "before-entity-name-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "error_type" : "no md name",
                        "name" : "before-entity-name-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no space between params",
                        "name" : "parameter-entity-declaration-or-reference-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "field" : "name",
                        "type" : "set"
                     },
                     {
                        "state" : "ENTITY name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "is parameter entity flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "before ENTITY name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in DTD state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0025",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-dtd"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DOCTYPE tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-003d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-dtd-0060",
                        "type" : "parse error"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "string in internal subset",
                        "name" : "dtd-else",
                        "type" : "parse error"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "parameter entity name in entity value (double-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-double-quoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (double-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in entity value (single-quoted) state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "type" : "unset-in-literal"
                     },
                     {
                        "state" : "after ENTITY parameter state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-single-quoted-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value (single-quoted) state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ENTITY token" : 1
            }
         },
         "parameter entity name in entity value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-ws",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0022",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0023",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0025",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0026",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0027",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-entity-value"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003c",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003d",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-003e",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-entity-value-in-entity-0060",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "parameter entity name in markup declaration state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-md"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-003d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-markup-declaration-003e-md-fragment",
                        "state" : "bogus markup declaration state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "ATTLIST token" : 1,
                           "ELEMENT token" : 1,
                           "ENTITY token" : 1,
                           "NOTATION token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-markup-declaration-0060",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus markup declaration state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1
            }
         },
         "parameter entity name in status keyword state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "type" : "append-to-temp",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-ws",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0022",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0023" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0023",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0025",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-0025-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0026",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0027",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003B" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-temp-as-peref-md"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-003c",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "string after md def",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003c-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-003d",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "break" : 1,
                        "error_type" : "mdc in pe in md",
                        "if" : "md-fragment",
                        "name" : "bogus-status-keyword-003e-md-fragment",
                        "state" : "bogus status keyword state",
                        "type" : "parse error-and-switch"
                     },
                     {
                        "type" : "insert-IGNORE"
                     },
                     {
                        "state" : "ignored section state",
                        "type" : "switch"
                     }
                  ]
               },
               "0060" : {
                  "actions" : [
                     {
                        "error_type" : "no refc",
                        "name" : "parameter-entity-name-in-status-keyword-0060",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "bogus status keyword state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : 1,
               "ELEMENT token" : 1,
               "ENTITY token" : 1,
               "NOTATION token" : 1,
               "processing instruction token" : 1
            }
         },
         "self-closing start tag state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr",
                        "value" : "�"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0023 0025 0026 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0022",
                        "type" : "parse error"
                     }
                  ]
               },
               "0027" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "bad attribute name",
                        "name" : "attribute-name-0027",
                        "type" : "parse error"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "no attr value",
                        "name" : "after-attribute-name-002f",
                        "type" : "parse error"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003C" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "tag not closed",
                        "name" : "attribute-name-003c",
                        "type" : "parse error"
                     }
                  ]
               },
               "003D" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "error_type" : "parser:no attr name",
                        "name" : "before-attribute-name-003d",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "error_type" : "nestc has no net",
                        "name" : "self-closing-start-tag-else",
                        "type" : "parse error"
                     },
                     {
                        "type" : "create-attr"
                     },
                     {
                        "field" : "name",
                        "type" : "set-to-attr"
                     },
                     {
                        "field" : "value",
                        "type" : "set-empty-to-attr"
                     },
                     {
                        "state" : "attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag name state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "tag name",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 000D" : {
                  "actions" : [
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0021 0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "002F" : {
                  "actions" : [
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059" : {
                  "actions" : [
                     {
                        "field" : "tag name",
                        "type" : "append"
                     }
                  ],
                  "repeat" : 1
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "end tag token" : 1,
               "start tag token" : 1
            }
         },
         "tag open state" : {
            "compound_conds" : {
               "([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C!\u005C/\u005C>\u005C?])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C!\u005C/\u005C>\u005C?])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C!\u005C/\u005C>\u005C?])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)\u005C>" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C!(\u005C-)\u005C-([^\u005C\u0000\u005C\u000D\u005C-\u005C>])([^\u005C\u0000\u005C\u000D\u005C-]*)\u005C-([^\u005C\u0000\u005C\u000D\u005C-])([^\u005C\u0000\u005C\u000D\u005C-]*)" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 1,
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 4,
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "capture_index" : 4,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 5,
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "\u005C!(\u005C-)\u005C-([^\u005C\u0000\u005C\u000D\u005C-\u005C>])([^\u005C\u0000\u005C\u000D\u005C-]*)\u005C-\u005C-\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 1,
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C!(\u005C-)\u005C-\u005C-([^\u005C\u0000\u005C\u000D\u005C-\u005C>])([^\u005C\u0000\u005C\u000D\u005C-]*)\u005C-([^\u005C\u0000\u005C\u000D\u005C-])([^\u005C\u0000\u005C\u000D\u005C-]*)" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 1,
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "comment start dash state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment end dash state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 4,
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "capture_index" : 4,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "comment state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 5,
                        "field" : "data",
                        "type" : "append"
                     }
                  ]
               },
               "\u005C!(\u005C-)\u005C-\u005C-([^\u005C\u0000\u005C\u000D\u005C-\u005C>])([^\u005C\u0000\u005C\u000D\u005C-]*)\u005C-\u005C-\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 1,
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "comment start dash state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "index_offset" : 1,
                        "type" : "append",
                        "value" : "-"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "data",
                        "type" : "append"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C!(\u005C-)\u005C-\u005C-\u005C-\u005C>" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     },
                     {
                        "capture_index" : 1,
                        "type" : "set-to-temp"
                     },
                     {
                        "state" : "markup declaration open state -- -",
                        "type" : "switch"
                     },
                     {
                        "token" : "comment token",
                        "type" : "create"
                     },
                     {
                        "field" : "data",
                        "type" : "set-empty"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "possible_token_types" : {
                           "comment token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C/([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C>])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)[\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ][\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C ]*" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "before attribute name state",
                        "type" : "switch"
                     }
                  ]
               },
               "\u005C/([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C>])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)\u005C/\u005C>" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "self-closing start tag state",
                        "type" : "switch"
                     },
                     {
                        "field" : "self-closing flag",
                        "type" : "set-flag"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               },
               "\u005C/([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C>])([^\u005C\u0000\u005C\u0009\u005C\u000A\u005C\u000C\u005C\u000D\u005C \u005C/\u005C>A-Z]*)([A-Z]*)\u005C>" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     },
                     {
                        "token" : "end tag token",
                        "type" : "create"
                     },
                     {
                        "capture_index" : 1,
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "capture_index" : 2,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "capture_index" : 3,
                        "field" : "tag name",
                        "type" : "append"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "check_end_tag_token" : 1,
                        "possible_token_types" : {
                           "end tag token" : 1,
                           "start tag token" : 1
                        },
                        "type" : "emit"
                     }
                  ]
               }
            },
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set",
                        "value" : "�"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "0009,000C,0020 000A" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "tag-open-ws",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "emit-char",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "data state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "type" : "set-empty-to-temp"
                     },
                     {
                        "state" : "markup declaration open state",
                        "type" : "switch"
                     }
                  ]
               },
               "0022 0023 0025 0026 0027 0028 0029 002A 002B 002C 002D 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "token" : "start tag token",
                        "type" : "create"
                     },
                     {
                        "field" : "tag name",
                        "type" : "set"
                     },
                     {
                        "state" : "tag name state",
                        "type" : "switch"
                     }
                  ]
               },
               "002F" : {
                  "actions" : [
                     {
                        "state" : "end tag open state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "error_type" : "bare stago",
                        "index_offset" : "1",
                        "name" : "tag-open-003e",
                        "type" : "parse error"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "type" : "emit-char"
                     }
                  ]
               },
               "003F" : {
                  "actions" : [
                     {
                        "state" : "PI state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "error_type" : "parser:EOF",
                        "index_offset" : "1",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "index_offset" : 1,
                        "type" : "emit-char",
                        "value" : "\u003C"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            },
            "initial_token_types" : {
               "ATTLIST token" : -1,
               "ELEMENT token" : -1,
               "ENTITY token" : -1,
               "NOTATION token" : -1,
               "end tag token" : -1,
               "processing instruction token" : -1,
               "start tag token" : -1
            }
         },
         "text declaration in ENTITY value in entity state" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 000A 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     }
                  ],
                  "repeat" : 1
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "text declaration in ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         },
         "text declaration in ENTITY value in entity state after 000D" : {
            "conds" : {
               "0000" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "NULL",
                        "name" : "NULL",
                        "type" : "parse error"
                     },
                     {
                        "field" : "value",
                        "index_offset" : 0,
                        "type" : "append",
                        "value" : "�"
                     }
                  ]
               },
               "0009,000C,0020 0022 0023 0027 0028 0029 002A 002B 002C 002D 002F 0030,0031,0032,0033,0034,0035,0036,0037,0038,0039 003B 003C 003D 003F 0041 0042 0043 0044 0045 0046 0047 0048,004A,004B,0051,0056,0057,005A 0049 004C 004D 004E 004F 0050 0052 0053 0054 0055 0058 0059 005B 005D 0060 0061 0062 0063 0064 0065 0066 0067 0068,006A,006B,0071,0076,0077,007A 0069 006C 006D 006E 006F 0070 0072 0073 0074 0075 0078 0079 007C ELSE" : {
                  "actions" : [
                     {
                        "state" : "text declaration in ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "type" : "append-to-temp"
                     }
                  ]
               },
               "000A" : {
                  "actions" : [
                     {
                        "state" : "text declaration in ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "000D" : {
                  "actions" : [
                     {
                        "index_offset" : 0,
                        "type" : "append-to-temp",
                        "value" : "\u000A"
                     },
                     {
                        "state" : "text declaration in ENTITY value in entity state after 000D",
                        "type" : "switch"
                     }
                  ]
               },
               "0021" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "field" : "value",
                        "type" : "append"
                     }
                  ]
               },
               "0025" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "%"
                     },
                     {
                        "state" : "parameter entity name in entity value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "0026" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "index_offset" : 0,
                        "type" : "set-to-temp",
                        "value" : "&"
                     },
                     {
                        "state" : "ENTITY value in entity state - character reference state",
                        "type" : "switch"
                     }
                  ]
               },
               "003E" : {
                  "actions" : [
                     {
                        "type" : "append-to-temp"
                     },
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     }
                  ]
               },
               "EOF" : {
                  "actions" : [
                     {
                        "type" : "process-xml-declaration-in-temp"
                     },
                     {
                        "field" : "value",
                        "type" : "append-temp"
                     },
                     {
                        "state" : "ENTITY value in entity state",
                        "type" : "switch"
                     },
                     {
                        "if" : "md-fragment",
                        "type" : "break"
                     },
                     {
                        "state" : "DTD state",
                        "type" : "switch"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "if" : "sections is not empty",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "break" : 1,
                        "if" : "fragment",
                        "type" : "emit-eof"
                     },
                     {
                        "error_type" : "parser:EOF",
                        "name" : "EOF",
                        "type" : "parse error"
                     },
                     {
                        "type" : "set-DTD-mode",
                        "value" : "N/A"
                     },
                     {
                        "state" : "data state",
                        "type" : "switch"
                     },
                     {
                        "type" : "emit-end-of-DOCTYPE"
                     },
                     {
                        "type" : "emit-eof"
                     }
                  ]
               }
            }
         }
      },
      "tokens" : {
         "ATTLIST token" : {
            "fields" : {
               "name" : 1
            },
            "short_name" : "ATTLIST"
         },
         "DOCTYPE token" : {
            "fields" : {
               "force-quirks flag" : 1,
               "has internal subset flag" : 1,
               "name" : 1,
               "public identifier" : 1,
               "system identifier" : 1
            },
            "short_name" : "DOCTYPE"
         },
         "ELEMENT token" : {
            "fields" : {
               "content keyword" : 1,
               "content model group" : 1,
               "name" : 1
            },
            "short_name" : "ELEMENT"
         },
         "ENTITY token" : {
            "fields" : {
               "is parameter entity flag" : 1,
               "name" : 1,
               "notation name" : 1,
               "public identifier" : 1,
               "system identifier" : 1,
               "value" : 1
            },
            "short_name" : "ENTITY"
         },
         "NOTATION token" : {
            "fields" : {
               "name" : 1,
               "public identifier" : 1,
               "system identifier" : 1
            },
            "short_name" : "NOTATION"
         },
         "comment token" : {
            "fields" : {
               "data" : 1
            },
            "short_name" : "COMMENT"
         },
         "end tag token" : {
            "fields" : {
               "attributes" : 1,
               "self-closing flag" : 1,
               "tag name" : 1
            },
            "short_name" : "END"
         },
         "end-of-DOCTYPE token" : {
            "short_name" : "EOD"
         },
         "end-of-file token" : {
            "fields" : {
            },
            "short_name" : "EOF"
         },
         "processing instruction token" : {
            "fields" : {
               "data" : 1,
               "target" : 1
            },
            "short_name" : "PI"
         },
         "start tag token" : {
            "fields" : {
               "attributes" : 1,
               "self-closing flag" : 1,
               "tag name" : 1
            },
            "short_name" : "START"
         },
         "text token" : {
            "fields" : {
               "value" : 1
            },
            "short_name" : "TEXT"
         }
      }
   }
}
