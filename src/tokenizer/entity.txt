* ENTITY state
## <!ENTITY

WS   -> create(ENTITY); before ENTITY type state
%    -> create(ENTITY); parameter entity declaration or reference state
>    -> error in pe; error; DTD state
ELSE -> error; create(ENTITY); before ENTITY name state; reconsume
EOF  -> error; DTD state or stop; reconsume

* before ENTITY type state
## <!ENTITY(WS)

WS   -> 
%    -> parameter entity declaration or reference after space state
ELSE -> before ENTITY name state; reconsume
EOF  -> error; DTD state or stop; reconsume

* parameter entity declaration or reference state
## <!ENTITY%

WS   -> error; is parameter entity; before ENTITY name state; reconsume
<>"'`%&= -> error; is parameter entity; before ENTITY name state; reconsume
EOF  -> error; is parameter entity; before ENTITY name state; reconsume

ELSE -> parameter entity name in markup declaration state (before ENTITY type state); reconsume

* parameter entity declaration or reference after space state
## <!ENTITY %

WS   -> is parameter entity; before ENTITY name state; reconsume
<>"'`%&= -> is parameter entity; before ENTITY name state; reconsume
EOF  -> is parameter entity; before ENTITY name state; reconsume

ELSE -> parameter entity name in markup declaration state (before ENTITY type state); reconsume

* before ENTITY name state
## <!ENTITY(WS)
## <!ENTITY %(WS)

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state
NULL -> set U+FFFD to name; ENTITY name state
ELSE -> set to name; ENTITY name state

* ENTITY name state
## <!ENTITY n

WS   -> after ENTITY name state
%    -> parameter entity name in markup declaration state (after ENTITY name state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> error; after ENTITY name state; reconsume
'    -> error; after ENTITY name state; reconsume
NULL -> append U+FFFD to name
ELSE -> append to name

* after ENTITY name state
## <!ENTITY n(WS)

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> start literal; ENTITY value (double-quoted) state; set empty to value
'    -> start literal; ENTITY value (single-quoted) state; set empty to value
"PUBLIC" -> after ENTITY public keyword state
"SYSTEM" -> after ENTITY system keyword state
ELSE -> error; bogus markup declaration state

* after ENTITY public keyword state
## <!ENTITY n PUBLIC

WS   -> before ENTITY public identifier state
%    -> parameter entity name in markup declaration state (before ENTITY public identifier state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> error; before ENTITY public identifier state
'    -> error; before ENTITY public identifier state
ELSE -> error; bogus markup declaration state

* before ENTITY public identifier state
## <!ENTITY n PUBLIC(WS)

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> start literal; ENTITY public identifier (double-quoted) state
'    -> start literal; ENTITY public identifier (single-quoted) state
ELSE -> error; bogus markup declaration state

* ENTITY public identifier (double-quoted) state

"    -> end literal; after ENTITY public identifier state
>    -> end literal; error in pe; error; DTD state; emit
EOF  -> error; DTD state or stop; reconsume
NULL -> append U+FFFD to public identifier
ELSE -> append to public identifier

* ENTITY public identifier (single-quoted) state

'    -> end literal; after ENTITY public identifier state
>    -> end literal; error in pe; error; DTD state; emit
EOF  -> error; DTD state or stop; reconsume
NULL -> append U+FFFD to public identifier
ELSE -> append to public identifier

* after ENTITY public identifier state

WS   -> between ENTITY public and system identifiers state
%    -> parameter entity name in markup declaration state (between ENTITY public and system identifiers state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> error; start literal; ENTITY system identifier (double-quoted) state
'    -> error; start literal; ENTITY system identifier (single-quoted) state
ELSE -> error; bogus markup declaration state

* between ENTITY public and system identifiers state

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> start literal; ENTITY system identifier (double-quoted) state
'    -> start literal; ENTITY system identifier (single-quoted) state
ELSE -> error; bogus markup declaration state

* after ENTITY system keyword state
## <!ENTITY n SYSTEM

WS   -> before ENTITY system identifier state
%    -> parameter entity name in markup declaration state (before ENTITY system identifier state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> error; before ENTITY system identifier state; reconsume
'    -> error; before ENTITY system identifier state; reconsume
ELSE -> error; bogus markup declaration state

* before ENTITY system identifier state
## <!ENTITY n SYSTEM(WS)

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
"    -> start literal; ENTITY system identifier (double-quoted) state
'    -> start literal; ENTITY system identifier (single-quoted) state
ELSE -> error; bogus markup declaration state

* ENTITY system identifier (double-quoted) state

"    -> end literal; after ENTITY system identifier state
EOF  -> error; DTD state or stop; reconsume
NULL -> append U+FFFD to system identifier
ELSE -> append to system identifier

* ENTITY system identifier (single-quoted) state

'    -> end literal; after ENTITY system identifier state
EOF  -> error; DTD state or stop; reconsume
NULL -> append U+FFFD to system identifier
ELSE -> append to system identifier

* after ENTITY system identifier state

WS   -> before NDATA keyword state
%    -> parameter entity name in markup declaration state (before NDATA keyword state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; DTD state; emit
ELSE -> error; before NDATA keyword state; reconsume

* before NDATA keyword state

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; DTD state; emit
"NDATA" -> after NDATA keyword state
ELSE -> error; bogus markup declaration state

* after NDATA keyword state

WS   -> before NDATA identifier state
%    -> parameter entity name in markup declaration state (before NDATA identifier state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
ELSE -> error; before NDATA identifier state; reconsume

* before NDATA identifier state

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; error; DTD state; emit
NULL -> error; set U+FFFD to notation name; NDATA identifier state
ELSE -> set to notation name; NDATA identifier state

* NDATA identifier state

WS   -> after ENTITY parameter state
%    -> parameter entity name in markup declaration state (after ENTITY parameter state)
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; DTD state; emit
NULL -> error; append U+FFFD to notation name
ELSE -> append to notation name

* ENTITY value (double-quoted) state

"    -> end literal; after ENTITY parameter state
%    -> set U+0025 to temp; parameter entity name in entity value (double-quoted) state
&    -> set U+0026 to temp; ENTITY value (double-quoted) state - character reference state
EOF  -> error; DTD state or stop; reconsume
NULL -> error; append U+FFFD to value
ELSE -> append to value

* ENTITY value (single-quoted) state

'    -> end literal; after ENTITY parameter state
%    -> set U+0025 to temp; parameter entity name in entity value (single-quoted) state
&    -> set U+0026 to temp; ENTITY value (single-quoted) state - character reference state
EOF  -> error; DTD state or stop; reconsume
NULL -> error; append U+FFFD to value
ELSE -> append to value

* before ENTITY value in entity state

<    -> set to temp; text declaration in ENTITY value in entity state
ELSE -> set empty to temp; temp as text declaration; ENTITY value in entity state; reconsume

* text declaration in ENTITY value in entity state

%&!  -> temp as text declaration; append temp to value; ENTITY value in entity state; reconsume
>    -> append to temp; temp as text declaration; append temp to value; ENTITY value in entity state
EOF  -> temp as text declaration; append temp to value; ENTITY value in entity state; reconsume
NULL -> temp as text declaration; append temp to value; ENTITY value in entity state; reconsume
ELSE -> append to temp

* ENTITY value in entity state

%    -> set U+0025 to temp; parameter entity name in entity value in entity state
&    -> set U+0026 to temp; ENTITY value in entity state - character reference state
EOF  -> DTD state or stop; reconsume
NULL -> error; append U+FFFD to value
ELSE -> append to value

* after ENTITY parameter state

WS   -> 
%    -> parameter entity name in markup declaration state
EOF  -> error; DTD state or stop; reconsume
>    -> error in pe; DTD state; emit
ELSE -> error; bogus markup declaration state
