Data types used in data files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

/T/? where /T/ is a type

  A value of type /T/ or null.

  The "null" value is represented by the JSON null value or missing of
  the value.

boolean

  The "false" value is represented by either JSON false value, JSON
  number value zero, JSON string value "0", or missing of the value.

  The "true" value is represented by a value that is not false.

id-in-spec

  A |string| which represents the ID in a specification.

    If the specification is generated by Anolis, the value can be
    converted to the fragment identifier for the HTML version of the
    specification by replacing any U+0020 character by a |-| character
    and converting to ASCII lowercase.

    Otherwise, if the specification is "DATAVOCAB", the value is the
    global identifier used in the microdata definition.

    Otherwise, the value is the fragment identifier in the HTML
    version of the specification.

  See the |specs.json| data file for the list of specifications and
  their generators.

number

  A number value is represented by a JSON number value, a JSON string
  value which contains a JSON number value, or a JSON string value
  "Infinity", "-Infinity", or "NaN".

object

  A JSON object.

spec

  A |string| which is one of specification keys (names in the |specs|
  object) contained in the specs.json data file.

status

  A |string| which is one of specification status keys (names in the
  |statuses| object) contained in the specs.json data file.

string

  A JSON string value, which is interpreted as is, or a JSON number
  value, which is represented as a string that is equal to the
  canonical representation of the number value.

value-type

  A JSON string value, representing the type of a string.  One of
  following values:

    any                       (Any value)
    boolean                   [HTML]
    browsing context name     [HTML]
    browsing context name or keyword [HTML]
    char                      (A Unicode code point)
    character encoding label  (Encoding label)
    CSS styling               [HTML]
    currency                  (ISO currency code)
    date string               [HTML]
    date string or global date and time string [HTML]
    date string with optional time [HTML]
    dimension value           [OBSVOCAB]
    e-mail address            [HTML]
    e-mail address list       [HTML]
    enumerated                [HTML]
    event handler             [HTML]
    floating-point number     [HTML]
    one or two floating-point numbers
        A "floating-point number" or two "floating-point number"s
        separated by a COMMA.
    global date and time string [HTML]
    global or local date and time string [HTML]
    hash-ID reference         [OBSVOCAB]
    hash-name reference       [HTML]
    icalendar recur           RECUR value type [iCalendar]
    id                        (ID definition)
    idref                     (ID reference)
    idref or hash-ID reference [OBSVOCAB]
    integer                   [HTML]
    JavaScript Pattern        (JavaScript regular expression)
    language tag              (BCP 47 language tag)
    language tag or empty     (BCP 47 language tag or empty string)
    legacy color value        [OBSVOCAB]
    link type                 [HTML]
    list of dimensions        [OBSVOCAB]
    list of integers          [HTML]
    local date and time string [HTML]
    media query list
    MIME type                 [HTML]
    month string              [HTML]
    name                      (Same as <a name="">)
    non-empty                 (Any non-empty value)
    non-empty text            (Text, not empty)
    non-empty URL potentially surrounded by spaces
    non-negative integer      [HTML]
    non-negative integer greater than zero [HTML]
    one-line text             (Text without newlines)
    ordered set of unique space-separated tokens [HTML]
    set of comma-separated tokens [HTML]
    set of space-separated tokens [HTML]
    simple color              [HTML]
    text                      (Human-readable text)
    time string               [HTML]
    unordered set of unique space-separated tokens [HTML]
    URL potentially surrounded by spaces [HTML]
    vcard sex                 [HTML] #md-vcard-sex
    vcard telephone number    CCITT E.163 & X.121 telephone number
    vcard tz                  [HTML] #md-vcard-tz
    vcard geo                 [HTML] #md-vcard-geo
    vevent duration           [HTML]
    vevent rdate              [HTML] #md-vevent-rdate
    week string               [HTML]

* The "preferred" object

The "preferred" object is used to represent the alternative form in
|data/elements.json| and |data/aria.json|.

Usually, the target of the "preferred" object is obsolete, deprecated,
or otherwise discouraged such that should not be used and the
"preferred" form should be used instead.  How it is discouraged might
be described by other properties for the target.  The existence of the
"preferred" object does not itself imply any status of the target.

The "preferred" object is a JSON object with one or more name/value
pairs.  It always contains |type| name/value pair.  Depending on the
|type| value, there might be additional name/value pairs, as described
below.

If |type|'s value is |html-element|, an HTML element whose local name
is |name|'s value should be used instead.

If |type|'s value is |html-attr| and if the element is an HTML
element, the attribute whose name is |name|'s value should be used
instead.  If |element| is also specified, then an HTML element whose
local name is equal to |element| should be used for the attribute.
The |name| value can be |data-*|, which indicates that a custom data
attribute should be used.

If |type|'s value is |input|, an HTML |input| element whose |type|
attribute value is |name|'s value should be used instead.

If |type|'s value is |textbox|, an HTML |<input type=text>| or
|textarea| element should be used instead.

If |type|'s value is |th|, an HTML |td| element whose |scope|
attribute value is |scope|'s value should be used instead.

If |type|'s value is |title|, an HTML |title| attribute or an SVG
|title| element should be used instead if applicable.

If |type|'s value is |math|, a MathML |math| element should be used
instead.

If |type|'s value is |css|, CSS should be used instead.

If |type|'s value is |css_prop|, CSS property whose name is equal to
|name|'s value should be used instead.  If |value| is also specified,
its value should be used as the property value.

If |type|'s value is |counter|, CSS counter feature should be used
instead.

If |type|'s value is |script|, a script should be used instead.

If |type|'s value is |comment|, an HTML or XML comment should be used
instead.

If |type|'s value is |vevent| or |vcard|, vEvent or vCard external
data or embedded microdata should be used instead, respectively.

If |type|'s value is |progressive|, a progressive image format should
be used instead.

If |type|'s value is |omit|, the target should be omitted and no
alternative is necessary (i.e. the target is redundant).

If |type|'s value is |none|, there is no alternative.
