elements.json
~~~~~~~~~~~~~

This file contains data on HTML/XML elements.

* Structure

The file contains a JSON object, which contains following name/value
pairs:

  categories [object]

    Element categories.  Unless otherwise specified, categories are
    defined in the HTML Standard.  The names contained by the object
    are identifiers of categories.  By replacing any U+0020 SPACE
    character in the identifier with a U+002D HYPHEN-MINUS character,
    it becomes an element ID in the HTML Standard for the category.
    Values are properties of the category, including:

      elements [object?]

        Elements belonging to the category.  Names in the object are
        namespace URLs.  Their corresponding values are JSON objects
        containing local names of elements in the namespace as names
        and boolean true values as values.  The list only contains
        elements unconditionally classified to the category.

      elements_with_exceptions [object?]

        Same as |elements|, but elements in this object might not
        belong to the category depending on the context.

      label [string]

        The human-readable name of the category.

      text [boolean]

        If true, text is also in the category.

      text_no_space [boolean]

        If true, text other than inter-element whitespace is also in
        the category.

    The category "document element" contains elements that can be used
    as the document element according to relevant specifications.

  elements [object]

    Names in the object are namespace URLs (the null namespace is
    represented by the empty string).  Their correspondng values are
    JSON objects containing local names of elements in the namespaces.
    The local name "*" has special semantics, as described later.
    Objects corresponding to local names contain properties of the
    element, including:

      attrs [object?]

        Names in the object are namespace URLs (the null namespace is
        represented by the empty string).  Their corresponding values
        are JSON objects containing local names of attributes in the
        namespaces.  Objects corresponding to local names contain
        properties of the attribute, including:

          conforming [boolean]

            Whether using the attribute is conforming or not.  If this
            flag is not set, the attribute is non-standard or
            obsolete.

          desc [string?]

            A short description of semantics of the element in
            English, if known.

          enumerated [object?]

            If the |value_type| is |enumerated|, this object contains
            the list of known enumerated keywords for the attribute.
            The names in the object are keywords, with two exceptions:
            "#missing" represents the missing value default and
            "#invalid" represents the invalid value default.  Note
            that the empty string can be a keyword.  If the invalid
            value default is same as the missing value default, the
            invalid value default might not be explicitly shown.  The
            value corresponding to the keyword contains properties of
            the keyword, as following name/value pairs:

              canonical [boolean]

                If true, it is the canonical keyword for the state.
                This flag is only set when the canonical one is
                explicitly defined.

              conforming [boolean]

                Whether the keyword is conforming or not.  Note that
                even if the value is true, the entire attribute (or in
                fact the element of the attribute) might be
                non-conforming.

              id [string?]

                The identifier of the state corresponding to the
                keyword, if any, or the identifier of the keyword, if
                any.  Both of them can be missing.

              label [string]

                The name of the state corresponding to the keyword,
                without preceding "the" and following "state" words.

            Note that the missing value default of the |preload|
            attribute of media element is user-agent defined, but the
            suggested default is listed.  The missing value default of
            the |keytype| attribute of the |keygen| element depends on
            whether the RSA state is supported or not, the list
            assumes that the state is supported.  The missing value
            default of the |type| attribute of the |menu| element
            depends on the parent such that it is not listed.

          id [string?]

            If the attribute is specified in the HTML Standard, the ID
            in the specification for the attribute.

          obsolete_but_conforming [boolean]

            Whether the attribute is obsolete but conforming according
            to the HTML Standard or not.  Note that this flag is not
            set for the |maxlength| and |size| attributes of the
            |input| elemenet as they are conforming for some input
            types.

          status [status?]

            The status of the attribute.

          value_type [string?]

            The type of the attribute value, if it is known and
            representable as one of followings:

              any                       (Any value)
              boolean
              browsing context name
              browsing context name or keyword
              character encoding label  (Encoding label)
              CSS styling
              date string with optional time
              enumerated
              event handler
              floating-point number
              floating-point number equal to or greater than zero
              floating-point number greater than zero
              hash-name reference
              id                        (ID definition)
              idref                     (ID reference)
              integer
              JavaScript Pattern        (JavaScript regular expression)
              language tag              (BCP 47 language tag)
              language tag or empty     (BCP 47 language tag or empty string)
              list of integers
              media query list
              MIME type
              non-empty                 (Any non-empty value)
              non-empty text            (Text, not empty)
              non-empty URL potentially surrounded by spaces
              non-negative integer
              non-negative integer greater than zero
              one-line text             (Text without newlines)
              ordered set of unique space-separated tokens
              set of comma-separated tokens
              set of space-separated tokens
              text                      (Human-readable text)
              unordered set of unique space-separated tokens
              URL potentially surrounded by spaces

        Note that the object for elements with non-"*" local name does
        not contain global attributes.  If there is the objects for
        element with "*" local name in the same namespace, its
        attributes are also applicable to any other element in the
        same namespace.  Additionally, attributes for namespace "*"
        and local name "*" is also applicable to any element.  (If
        attributes with same namespace URL and local name are defined
        for "*" and non-"*" elements, the definition for non-"*"
        element takes precedence.)

        The |data-*| attributes, |aria-*| attributes, custom
        attributes for the HTML |embed| element, and XML namespace
        declaration attributes are not listed.  XXX aria-* will be
        added in due course.

      conforming [boolean]

        Whether using the element is conforming or not.  If this flag
        is not set, the element is non-standard or obsolete.

      content_model [string?]

        The content model of the element.  Possible values include:

          empty                 Empty.
          text                  Text.
          atomDateConstruct     Atom Date Construct [RFC 4287].
          atomPersonConstruct   Atom Person Construct [RFC 4287].
          atomTextConstruct     Atom Text Construct [RFC 4287].
          (otherwise)           One of element categories.

        If no value is provided, either the element's content model
        can't be represented as a category, the element itself is
        non-conforming or non-standard, or the content model is
        unknown.

      desc [string?]

        A short description of semantics of the element in English, if
        known.

      end_tag [string?]

        If the value is "never", the element is void element.
        Otherwise, if the value is "optional", the end tag can be
        omitted in certain context.  Otherwise, the end tag is
        required.

      id [string?]

        If the element is specified in the HTML Standard, the ID in
        the specification for the element.

      interface [string?]

        The element interface (see DOM Standard) for the element.  If
        this property has a value, it is the interface used for the
        element.  Otherwise, if the "interface" property of the "*"
        local name in the same namespace has a value, it is the
        interface used for the element.  Otherwise, the |Element|
        interface is the used interface.

      start_tag [string?]

        If the value is "optional", the start tag can be omitted in
        certain context.  Otherwise, the start tag is required.

      status [status?]

        Status of the element.

* Status

Status is a short string representing the maturity, as described in
<http://www.whatwg.org/specs/web-apps/current-work/status-documentation.html>.
Typical status values include:

  REC    Implemented and widely deployed
  CR     Awaiting implementation feedback
  LC     Ready for first implementations
  CWD    Controversial Working draft
  WD     Working draft
  FD     First draft

* Sources

HTML Standard <http://www.whatwg.org/specs/web-apps/current-work/>.

Scalable Vector Graphics (SVG) 2 <https://svgwg.org/svg2-draft/>.

Atom DOM <http://suika.suikawiki.org/www/markup/xml/atomdom>.
