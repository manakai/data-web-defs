elements.json
~~~~~~~~~~~~~

This file contains data on HTML/XML elements.

* Structure

The file contains a JSON object, which contains following name/value
pairs:

  categories [object]

    Element categories.  The names contained by the object are
    identifiers (id-in-category) of categories in the specification
    identified by the |spec| property.  Values are properties of the
    category, including:

      elements [object?]

        Elements belonging to the category.  Names in the object are
        namespace URLs.  Their corresponding values are JSON objects
        containing local names of elements in the namespace as names
        and boolean true values as values.  The list only contains
        elements unconditionally classified to the category.

      elements_with_exceptions [object?]

        Same as |elements|, but elements in this object might not
        belong to the category depending on the context.

      label [string]

        The human-readable name of the category.

      spec [spec]

        The specification in which the category is defined.

      text [boolean]

        If true, text is also in the category.

      text_no_space [boolean]

        If true, text other than inter-element whitespace is also in
        the category.

  elements [object]

    Names in the object are namespace URLs (the null namespace is
    represented by the empty string).  Their correspondng values are
    JSON objects containing local names of elements in the namespaces.
    The local name "*" has special semantics, as described later.
    Objects corresponding to local names contain properties of the
    element, including:

      attrs [object?]

        Names in the object are namespace URLs (the null namespace is
        represented by the empty string).  Their corresponding values
        are JSON objects containing local names of attributes in the
        namespaces.  Objects corresponding to local names contain
        properties of the attribute, including:

          conforming [boolean]

            Whether using the attribute is conforming or not.  If this
            flag is not set, the attribute is non-standard or
            obsolete.

          desc [string?]

            A short description of semantics of the element in
            English, if known.

          directionality_capable [string?]

            If the value is not set, the attribute is not
            directionality-capable
            <http://www.whatwg.org/specs/web-apps/current-work/#directionality-capable-attribute>.
            Otherwise, one of following values is set:

              1          It is a directionality-capable attribute.
              contextual It might be a directionality-capable depending on
                         the context.

          enumerated [object?]

            If the |value_type| is |enumerated|, this object contains
            the list of known enumerated keywords for the attribute.
            The names in the object are keywords, with two exceptions:
            "#missing" represents the missing value default and
            "#invalid" represents the invalid value default.  Note
            that the empty string can be a keyword.  If the invalid
            value default is same as the missing value default, the
            invalid value default might not be explicitly shown.  The
            value corresponding to the keyword contains properties of
            the keyword, as following name/value pairs:

              canonical [boolean]

                If true, it is the canonical keyword for the state.
                This flag is only set when the canonical one is
                explicitly defined.

              conforming [boolean]

                Whether the keyword is conforming or not.  Note that
                even if the value is true, the entire attribute (or in
                fact the element of the attribute) might be
                non-conforming.

              id [string?]

                The identifier of the state corresponding to the
                keyword, if any, or the identifier of the keyword, if
                any.  Both of them can be missing.

              label [string]

                The name of the state corresponding to the keyword,
                without preceding "the" and following "state" words.

              non_conforming [boolean]

                Whether the keyword is specified in some relevant
                specification but non-conforming.  Note that some
                keywords might have none of |conforming| and
                |non_conforming| flags set.

            Note that the missing value default of the |preload|
            attribute of media element is user-agent defined, but the
            suggested default is listed.  The missing value default of
            the |keytype| attribute of the |keygen| element depends on
            whether the RSA state is supported or not, the list
            assumes that the state is supported.  The missing value
            default of the |type| attribute of the |menu| element
            depends on the parent such that it is not listed.

          id [id-in-spec?]

            The ID in the specification, identified by |spec|, for the
            attribute.

          obsolete_but_conforming [boolean]

            Whether the attribute is obsolete but conforming according
            to the HTML Standard or not.  Note that this flag is not
            set for the |maxlength| and |size| attributes of the
            |input| elemenet as they are conforming for some input
            types.

          spec [spec?]

            The specification in which the attribute is defined, if
            any.

          status [status?]

            The status of the attribute.  Note that obsolete or
            non-conforming attribute might also have status value.

          translatable [string?]

            If the value is not set, the attribute is not translatable
            <http://www.whatwg.org/specs/web-apps/current-work/#translatable-attributes>.
            Otherwise, one of following values is set:

              1          It is a translatable attribute and the value is text.
              contextual It might be a translatable depending on the context.
              partial    The value has to be parsed to translate.

          url_role [string?]

            Characteristics of URL(s) contained by the element, if
            any.  If specified, the value is one of followings:

              base                  The base URL.
              contextual            The semantics changes depending on context.
              embedded              The URL is used to retrieve an embedded
                                    object in the document.
              hyperlink             The URL is the destination of a hyperlink
                                    link.
              hyperlink-secondary   Same as |hyperlink| but the link is not
                                    shown in typical primary rendering.
              id                    The URL is used to identify or to reference
                                    some type or concept without dereferenced.
              resource              The URL is the destination of an external
                                    resource link, used to process the
                                    document, or used by elements or scripts
                                    in the document as input data.
              submission            The URL to which form or other data
                                    is to be submitted.

            Note that the attribute might contain any number of URLs,
            depending on the definition of the attribute.  In fact the
            attribute might not contain any URL but contain some other
            construct.  In any case, this property apply only to URLs
            contained by the attribute.

          value_type [string?]

            The type of the attribute value, if it is known and
            representable as one of followings:

              any                       (Any value)
              boolean                   [HTML]
              browsing context name     [HTML]
              browsing context name or keyword [HTML]
              character encoding label  (Encoding label)
              CSS styling               [HTML]
              date string               [HTML]
              date string with optional time [HTML]
              dimension value           [OBSVOCAB]
              e-mail address            [HTML]
              e-mail address list       [HTML]
              enumerated                [HTML]
              event handler             [HTML]
              floating-point number     [HTML]
              global date and time string [HTML]
              hash-ID reference         [OBSVOCAB]
              hash-name reference       [HTML]
              id                        (ID definition)
              idref                     (ID reference)
              integer                   [HTML]
              JavaScript Pattern        (JavaScript regular expression)
              language tag              (BCP 47 language tag)
              language tag or empty     (BCP 47 language tag or empty string)
              legacy color value        [OBSVOCAB]
              list of dimensions        [OBSVOCAB]
              list of integers          [HTML]
              local date and time string [HTML]
              media query list
              MIME type                 [HTML]
              month string              [HTML]
              name                      (Same as <a name="">)
              non-empty                 (Any non-empty value)
              non-empty text            (Text, not empty)
              non-empty URL potentially surrounded by spaces
              non-negative integer      [HTML]
              non-negative integer greater than zero [HTML]
              one-line text             (Text without newlines)
              ordered set of unique space-separated tokens [HTML]
              set of comma-separated tokens [HTML]
              set of space-separated tokens [HTML]
              simple color              [HTML]
              text                      (Human-readable text)
              time string               [HTML]
              unordered set of unique space-separated tokens [HTML]
              URL potentially surrounded by spaces [HTML]
              week string               [HTML]

        Note that the object for elements with non-"*" local name does
        not contain global attributes.  If there is the objects for
        element with "*" local name in the same namespace, their
        attributes are also applicable to any other element in the
        same namespace.  Additionally, attributes for namespace "*"
        and local name "*" is also applicable to any element.  (If
        attributes with same namespace URL and local name are defined
        for "*" and non-"*" elements, the definition for non-"*"
        element takes precedence.)

        The |data-*| attributes, |x-*| and |_*| attributes, |aria-*|
        attributes, custom attributes for the HTML |embed| element,
        and XML namespace declaration attributes other than the
        |xmlns| attribute are not listed.  XXX aria-* will be added in
        due course.

      auto_br [string?]

        Whether the automatic <br> insertion in some kind of HTML
        authoring support tools
        (e.g. <http://staff.hatenablog.com/entry/2013/09/25/124816>)
        should be enabled or not.  Whether HTML |br| elements should
        be inserted at appropriate places as child of an element /E/
        can be determined by following steps:

          1. Set /value/ to the |auto_br| property value for namespace
             "*" and local name "*".

          2. Set /value/ to the |auto_br| property value for /E/'s
             namespace and local name "*", if it is set to a non-null
             value.

          3. Set /value/ to the |auto_br| property value for /E/'s
             namespace and local name, if it is set to a non-null
             value.

          4. If /E/ is an HTML |noscript| element and it has a parent
             element, set /value/ to the result of applying these
             steps to the parent element.

          4. If /value/ is "allow", enable automatic <br> insertion.
             Otherwise, if /value/ is "disallow", disable automatic
             <br> insertion.

        Note that a descendant element of "disallow"ed elements might
        allow automatic <br> insertion.

      conforming [boolean]

        Whether using the element is conforming or not.  If this flag
        is not set, the element is non-standard or obsolete.

      complex_content_model

        More detailed description of the content model of the element,
        if it is not representable in |content_model|'s values.  (This
        description also has limitations, however.)

        If the value is a JSON array, elements represented by its
        items must be included as content, in order.  Items are JSON
        objects describing kinds of elements, using following
        properties as name/value pairs:

          categories [object?]

            JSON object containing category names as names and
            |boolean| true values are values.

          elements [object?]

            JSON object containing namespace URLs as names and
            corresponding objects as values, which are objects
            containing local names as names and |boolean| true values
            are values.

          max [number?]

            The maximum allowed number of elements.  Infinity if not
            specified.

          min [number?]

            The minimum required number of elements.  Zero if not
            specified.

          transparent [boolean]

            If this property has true value, it represents the
            "transparent" content model.

        If |elements| and/or |categories| are specified, it represents
        that there must be a sequence of elements that are in these
        lists.

      content_model [string?]

        The content model of the element.  Possible values include:

          empty                 Empty.
          text                  Text.
          transparent           Transparent.
          atomDateConstruct     Atom Date Construct [RFC 4287].
          atomPersonConstruct   Atom Person Construct [RFC 4287].
          atomTextConstruct     Atom Text Construct [RFC 4287].
          (otherwise)           One of element categories.

        If no value is provided, either the element's content model
        can't be represented as a category, the element itself is
        non-conforming or non-standard, or the content model is
        unknown.

      desc [string?]

        A short description of semantics of the element in English, if
        known.

      disallowed_descendants [object?]

        List of elements that cannot be used as descendants of the
        element, described using following properties as name/value
        pairs:

          categories [object?]

            JSON object containing category names as names and
            |boolean| true values are values.

          elements [object?]

            JSON object containing namespace URLs as names and
            corresponding objects as values, which are objects
            containing local names as names and |boolean| true values
            are values.

      end_tag [string?]

        If the value is "never", the element is void element.
        Otherwise, if the value is "optional", the end tag can be
        omitted in certain context.  Otherwise, the end tag is
        required.  Note that this property is not specified for
        non-conforming elements.

      has_additional_content_constraints [boolean]

        If true, there are additional constraints that can't be
        represented by |content_model|, |complex_content_model|, and
        |disallowed_descendants|, e.g. requirements depending on the
        value of attributes.  Please note that even when this value is
        false, there might be additional requirements on the content
        of the element; read the spec carefully!

      id [id-in-spec?]

        The ID in the specification, identified by |spec|, for the
        element.

      interface [string?]

        The element interface (see DOM Standard) for the element.  If
        this property has a value, it is the interface used for the
        element.  Otherwise, if the "interface" property of the "*"
        local name in the same namespace has a value, it is the
        interface used for the element.  Otherwise, the |Element|
        interface is the used interface.

      root [boolean]

        Whether the element can be used as the document element
        according to relevant specifications.

      spec [spec?]

        The specification in which the element is defined, if any.

      start_tag [string?]

        If the value is "optional", the start tag can be omitted in
        certain context.  Otherwise, the start tag is required.

      status [status?]

        Status of the element.  Note that obsolete or non-conforming
        element might also have status value.

      transparent [string?]

        Whether the content model of the element is transparent
        <http://www.whatwg.org/specs/web-apps/current-work/#transparent>
        or not, represented by one of followings:

          If not set, the element is not transparent.
          1           The entire content model is transparent.
          semi        The content model has transparent part.
          partial     The content model is contextually transparent.

      url_role [string?]

        Characteristics of URL(s) contained by the element, if any.
        See attributes' |url_role| property for the description for
        values.

  input [object]

    Applicability
    <http://www.whatwg.org/specs/web-apps/current-work/#concept-input-apply>
    of attributes, methods, and events for the HTML |input| element.
    The object contains four names: |attrs|, |idl_attrs|, |methods|,
    and |events|.  Their corresponding values are objects, containing
    name/value pairs whose names are names of content attributes, IDL
    attributes, methods, and events, respectively.  (All content
    attributes are in no namespace.  Note that some of them are
    non-conforming.)  These names also have corresponding objects as
    values, whose names are |input| |type| keywords (in lowercase).
    The values represent whether the attributes, methods, and events
    apply in the state of the |type| attribute or not, using one of
    following |string?| values:

      If the value is not set, it does not apply.
      If the value is |1|, it does apply.
      If the value is |obsolete but conforming|, it does not apply, it
      should not be used, but use of it is "obsolete but conforming".
      Otherwise, the value represents the mode of the |value| IDL attribute.

    For the |value| content attribute, instead of applicability,
    following applies: If the value is not set, the attribute must not
    be specified.  Otherwise, if the |value| content attribute has
    non-empty value, it must be valid in the format described by the
    value.  See the description for the |value_type| property for the
    list of possible values.  Additionally, if the value is set and
    the |min| and |max| attributes are applicable, the value also
    describes the format that these attribute values must conform to.

* Sources

[HTML] HTML Standard
<http://www.whatwg.org/specs/web-apps/current-work/>.

Scalable Vector Graphics (SVG) 2 <https://svgwg.org/svg2-draft/>.

Atom DOM <http://suika.suikawiki.org/www/markup/xml/atomdom>.

[OBSVOCAB] manakai's Conformance Checking Guideline for Obsolete HTML
Elements and Attributes
<http://suika.suikawiki.org/www/markup/html/exts/manakai-obsvocab>.
