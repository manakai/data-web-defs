html-syntax.txt
~~~~~~~~~~~~~~~

This JSON file contains data on the HTML syntax (|text/html|
documents).

* Data structure

The file contains a JSON object, which contains following name/value
pairs:

  adjusted_mathml_attr_names [object]

    The attribute name fixup table, used in the steps to adjust MathML
    attributes
    <http://www.whatwg.org/specs/web-apps/current-work/#adjust-mathml-attributes>.
    Names are original attribute names in HTML source, normalized to
    ASCII lowercase.  Values are corresponding attribute local names.

  adjusted_ns_attr_names [object]

    The attribute name fixup table, used in the steps to adjust
    foreign attributes
    <http://www.whatwg.org/specs/web-apps/current-work/#adjust-foreign-attributes>.
    Names are original attribute names in HTML source, normalized to
    ASCII lowercase.  Values are arrays, where first items are
    namespace URLs of attributes and second items are arrays of
    namespace prefixes and local names of attributes.

  adjusted_svg_attr_names [object]

    The attribute name fixup table, used in the steps to adjust SVG
    attributes
    <http://www.whatwg.org/specs/web-apps/current-work/#adjust-svg-attributes>.
    Names are original attribute names in HTML source, normalized to
    ASCII lowercase.  Values are corresponding attribute local names.

  adjusted_svg_element_names [object]

    The element name fixup table, used in the rules for parsing tokens
    in foreign content, any other start tag, an element in the SVG
    namespace
    <http://www.whatwg.org/specs/web-apps/current-work/#parsing-main-inforeign>.
    Names are original tag names in HTML source, normalized to ASCII
    lowercase.  Values are element local names.

  dispatcher_html [object]

    XXX

  doctype_switch [object]

    Definitions related to DOCTYPE switching and conformance.  There
    are following name/value pairs:

      limited_quirks [object]
      quirks [object]

        Public and system identifiers invoking the quirks mode or the
        limited quirks mode.  Note that these are not the complete
        conditions for these modes; see HTML Standard for details.
        There are following name/value pairs:

          regexp [object]

            Names are keys and values are Perl regular expressions
            matching to possible values (only).

          values [object]

            Names are keys and values are JSON objects whose names are
            possible values and values are boolean true values.

        ... where keys and corresponding possible values are one of
        following pairs:

          public_id [object?]

            ASCII uppercased public identifiers for the mode.

          public_id_prefix [object?]

            ASCII uppercased public identifier prefixes for the mode.

          public_id_prefix_if_no_system_id [object?]

            ASCII uppercased public identifier prefixes for the mode,
            applied only when there is no system identifier.

          public_id_prefix_if_system_id [object?]

            ASCII uppercased public identifier prefixes for the mode,
            applied only when there is a system identifier.

          system_id [object?]

            ASCII uppercased system identifiers for the mode.

      legacy
      obsolete_permitted

        JSON arrays of JSON arrays of public and system identifiers
        that can be used in a DOCTYPE legacy string or an obsolete
        permitted DOCTYPE string.  Missing of a public or system
        identifier is represented by a null value.

  ims [object]

    XXX

  reset_im_by_html_element [object]

    Mapping from HTML elements to insertion modes, used in the steps
    to reset the insertion mode appropriately
    <http://www.whatwg.org/specs/web-apps/current-work/#reset-the-insertion-mode-appropriately>.
    Names of the JSON object are |always| and |last_is_false|, whose
    values are applied always or only when /last/ is false,
    respectively.  Values of the JSON object are JSON objects whose
    names are HTML element names and values are insertion modes
    (within quotation marks, such as |in body| for the "in body"
    insertion mode).  Please note that these values do not cover all
    possible cases mentioned in the steps; see HTML Standard for
    details.

  tokenizer [object]

    A machine-readable description of the HTML tokenizer, extracted
    from the HTML Standard.  The object has following name/value
    pairs:

      char_sets [object]

        Character sets referenced in |states|.  Names of the object
        are set names used in |states| and values are JSON objects,
        whose names are the shortest decimal representations of the
        code points in the set and values are boolean true values.

      initial_state_by_html_element [object]

        Initial tokenizer state set by the HTML fragment parsing
        algorithm
        <http://www.whatwg.org/specs/web-apps/current-work/#html-fragment-parsing-algorithm>
        based on the context element, represented as a JSON object.
        Names of the JSON object are |always| or
        |scripting_flag_is_disabled|, whose values are applied always
        or only when the scripting flag of the parser is disabled,
        respectively.  Values of the JSON object are JSON objects
        whose names are HTML element names and values are
        corresponding tokenizer state names.

      states [object]

        Tokenizer states.  See |bin/extract-html-tokenizer.pl| for
        details.

        State actions can have following names:

          |break|, |field|, |if|, |keyword|, |offset|, |script_state|,
          |state|, |token|, |type|, |value|, |replace_null|, |in_attr|,
          |before_equals|, |possible_token_types|, |check_end_tag_token|

        State action's |type| can have following values:

          |append|, |append-to-attr|, |append-to-temp|, |append-temp|,
          |consume-and-switch-if-keyword|, |create|, |create-attr|,
          |emit|, |emit-char|, |emit-eof|, |emit-temp|, |parse error|,
          |reconsume|, |set|, |set-empty|, |set-empty-to-attr|,
          |set-empty-to-temp|, |set-flag|, |set-to-attr|, |switch|,
          |switch-and-emit|, |switch-by-temp|,
          |process-temp-as-decimal|, |process-temp-as-hexadecimal|,
          |process-temp-as-named|, |emit-or-append-temp-to-attr|,
          |misc|

        States contains following name/value pair:

          initial_token_types [object?]

            Names are token types that can be the type of the current
            token when the tokenizer starts processing of the input in
            this state.  Values are either 1, which means the token is
            relevant or -1, which means the token is in fact
            irrelevant (i.e. the token was set by some previous state
            but was implicitly discarded such that it will never be
            accessed by the tokenizer).

      tokens [object]

        Token types used by the tokenizer.  Names are English name of
        token types and values are their descriptions, represented as
        JSON objects with following name/value pairs:

          fields [object]

            Fields of tokens.  Names are English names of fields and
            values are boolean true values.

          short_name [string]

            A short uppercase identifier of the token type, used in
            condition expressions in tree constructor definitions in
            |html-syntax.json|.

  tree_patterns [object]

    XXX

  tree_patterns_not [object]

    XXX

  tree_steps [object]

    XXX

* Related data files

The file |data/elements.json| contains some HTML syntax related data
associated with elements (e.g. tag omissionability of HTML elements).

The files |data/sets.json| and |data/maps.json| in the data-chars
repository <https://github.com/manakai/data-chars> contain character
classes and mapping tables related to HTML parsing.

* Source

HTML Standard <http://www.whatwg.org/specs/web-apps/current-work/>.

* License

You are granted a license to use, reproduce, and create derivative
works of the JSON file.

The JSON file contains data extracted from HTML Standard.  "Written by
Ian Hickson (Google, ian@hixie.ch) - Parts Â© Copyright 2004-2014 Apple
Inc., Mozilla Foundation, and Opera Software ASA; You are granted a
license to use, reproduce and create derivative works of this
document."
