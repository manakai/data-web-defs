mime-types.json
~~~~~~~~~~~~~~~

This file contains list of known MIME types.

* Structure

The file contains a JSON object, whose members are MIME types and
their properties, represented as nested JSON objects.

* Properties

application [string?]

  The alternative MIME type in the |application/*| type, if any.

any_xml [boolean]

  Whether the MIME type is for an XML document or not.  This is a
  superset of |xml| but also contains historical XML types.

archive [boolean]

  Whether it is an archive type or not
  <http://mimesniff.spec.whatwg.org/#archive-type>.

audiovideo [boolean]

  Whether it is an audio or video type or not
  <http://mimesniff.spec.whatwg.org/#audio-or-video-type>.  This flag
  is not set for subtypes in the |audio| or |video| type.

ber [boolean]

  Whether it is a BER (Basic Encoding Rules) type or not.  This flag
  is not set for MIME types with the |+ber| structured syntax suffix.

blacklisted [boolean]

  Whether it is in the implementation-neutral part of the type
  blacklist or not
  <http://www.whatwg.org/specs/web-apps/current-work/#type-blacklist>.

browser [boolean]

  If true, the type is often implemented by Web browsers.

clipboard [boolean]

  If true, the MIME type is sometimes used in Web clipboard
  processing.

composite [boolean]

  Whether it is a composite type or not.

default_disposition [string?]

  Default disposition-type (c.f. |Content-Disposition:| header) for
  the MIME type, if defined.

deprecated [string?]

  If the MIME type SHOULD NOT be used, the value |SHOULD| is set.
  Otherwise, if the MIME type is marked as obsolete, the value
  |obsolete| is set.  Otherwise, if the MIME type is marked as
  deprecated, the value |deprecated| is set.

der [boolean]

  Whether it is a DER (Distinguished Encoding Rules) type or not.
  This flag is not set for MIME types with the |+der| structured
  syntax suffix.

dnd [boolean]

  If true, the MIME type is sometimes used in Web drag and drop
  processing.

extensions [object?]

  List of commonly-used file name extensions (without preceding |.|
  character), given as extension/boolean-true pairs.

font [boolean]

  Whether it is a font type or not
  <http://mimesniff.spec.whatwg.org/#font-type>.

form_data [boolean]

  Whether it is used to represent a form data set or not.

fragment [string?]

  Semantics and syntax of fragment identifiers for this MIME type, if
  known, using one of following value:

    |xpointer:rfc7303|   XPointer, as specified in RFC 7303.

http [boolean]

  Whether the MIME type is used as part of HTTP protocol or not.

httpd_handler [boolean]

  Whether it is used to enable some server-side processor module by
  HTTP servers (somewhat equivalent to specifying Apache |AddHandler|
  directive).

iana [string?]

  If a value is specified, the MIME type is registered with the IANA
  registry.

    |permanent|     Registered in the main registry.
    |provisional|   Registered in the provisional registry.

image [boolean]

  Whether it is an image type or not
  <http://mimesniff.spec.whatwg.org/#image-type>.  This flag is not
  set for subtypes in the |image| type.

mac_creators [object?]

  Containing pairs of typical Macintosh creator identifiers for the
  MIME type and boolean true values.

mac_types [object?]

  Containing pairs of typical Macintosh file types for the MIME type
  and boolean true values.

no_plugin [boolean]

  Whether the MIME type is disallowed to register a plugin or not
  <https://html.spec.whatwg.org/#plugin>.

params [object?]

  Known parameters.  Names are parameter names (attributes) in
  lowercase and values are JSON objects describing them, using
  following name/value pair:

    charset_rfc7303 [boolean]

      Whether the parameter is a |charset| parameter as specified in
      RFC 7303 (i.e. the |charset| parameter for XML media types).

plugin [boolean]

  If true, the type is used by some Web plugin.

preferred_cte [string?]

  Preferred content transfer encoding for 7-bit transport.  Either
  |quoted-printable| or |base64|, if specified.

preferred_type [string?]

  Preferred MIME type (type/subtype pair, in lowercase).  See also
  |deprecated| for the level of "prefer".

scriptable [boolean]

  Whether it is a scriptable MIME type or not
  <http://mimesniff.spec.whatwg.org/#scriptable-mime-type>.  This flag
  is not set for MIME types with the |+xml| structured syntax suffix.

script_data_block [boolean]

  If the flag is set, the MIME type is intended for or sometimes used
  in the |type| attribute of the |script| element that is a data
  block.

scripting_language [string?]

  How the MIME type is interpreted in the context of the script
  language determination
  <http://www.whatwg.org/specs/web-apps/current-work/#scriptingLanguages>.

  If the value is "javascript", the MIME type must be recognized as
  JavaScript.

  If the value is "no", the MIME type must not be interpreted as a
  script language (but interpreted as a format for data block).

  If the value is "yes", the MIME type is used for some script
  language.

sip [boolean]

  Whether the MIME type is used in SIP or not.

structured_syntax_type [string?]

  If it is a structured syntax suffix, a standalone MIME type for the
  structured syntax (with no specific application format semantics),
  in lowercase canonical form.

styling [boolean]

  Whether it is a styling language or not.

text [boolean]

  Whether it is a text-based MIME type or not.  This flag is not set
  for MIME types in |text/*|, |message/*|, or |multipart/*| type, or
  with the |+xml|, |+csv|, or |+json| structured syntax suffix.

type [string]

  The type of the value, one of:

    |type|              A type used in type/subtype pair, followed by |/*|.
    |subtype|           A type/subtype pair.
    |type_only|         The (non-conforming) type value, used alone with
                        no following subtype.  Some of values of this type
                        come from RFC 1049.
    |type_only_pattern| Same as |type_only| but represents a set of types
                        rather than a single type, using |*| as wildcard.
    |suffix|            |*/*+| followed by a structured syntax suffix.

xml [boolean]

  Whether it is an XML type or not
  <http://mimesniff.spec.whatwg.org/#xml-type>.  This flag is not set
  for MIME types with the |+xml| structured syntax suffix.

xpointer_schemes [object?]

  If fragment identifiers are interpreted as XPointer for this MIME
  type, requirements for XPointer schemes.  It is represented as a
  JSON object whose names are namespace URLs of XPointer schemes and
  values are JSON objects for the namespaces, whose names are local
  names of XPointer schemes and values are strings representing
  requirements for the XPointer schemes, which are one of following
  values:

    |MUST|   The XPointer scheme must be supported.
    |MAY|    The XPointer scheme may be supported.

  There are two special namespace values.  The empty string represents
  the null namespace.  If the namespace is |#| and the local name is
  |other|, the value is applied to any XPointer scheme not explicitly
  mentioned by other values.  If the namespace is |#| and the local
  name is |shorthand|, the value is applied to shorthand pointers
  rather than XPointer scheme.

zip [boolean]

  Whether it is a ZIP-based type or not
  <http://mimesniff.spec.whatwg.org/#zip-based-type>.  This flag is
  not set for MIME types with the |+zip| structured syntax suffix.

* Sources

MIME Sniffing Standard <http://mimesniff.spec.whatwg.org/>.

Media Types
<http://www.iana.org/assignments/media-types/media-types.xml>.

Provisional Standard Media Type Registry
<http://www.iana.org/assignments/provisional-standard-media-types/provisional-standard-media-types.xhtml>.

Structured Syntax Suffix Registry
<http://www.iana.org/assignments/media-type-structured-suffix/media-type-structured-suffix.xhtml>.

HTML Standard <http://www.whatwg.org/specs/web-apps/current-work/>.

List of MIME types
<http://suika.suikawiki.org/~wakaba/wiki/sw/n/List%20of%20MIME%20types>.

mime.types
<http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types>.

* License

You are granted a license to use, reproduce, and create derivative
works of the JSON file.
