data/mime-types.json
~~~~~~~~~~~~~~~~~~~~

This file contains list of known MIME types.

* Structure

The file contains a JSON object, whose members are MIME types and
their properties, represented as nested JSON objects.

* Properties

application [string?]

  The alternative MIME type in the |application/*| type, if any.

any_xml [boolean]

  Whether the MIME type is for an XML document or not.  This is a
  superset of |xml| but also contains historical XML types.

archive [boolean]

  Whether it is an archive type or not
  <http://mimesniff.spec.whatwg.org/#archive-type>.

audiovideo [boolean]

  Whether it is an audio or video type or not
  <http://mimesniff.spec.whatwg.org/#audio-or-video-type>.  This flag
  is not set for subtypes in the |audio| or |video| type.

ber [boolean]

  Whether it is a BER (Basic Encoding Rules) type or not.  This flag
  is not set for MIME types with the |+ber| structured syntax suffix.

blacklisted [boolean]

  Whether it is in the implementation-neutral part of the type
  blacklist or not
  <http://www.whatwg.org/specs/web-apps/current-work/#type-blacklist>.

browser [boolean]

  If true, the type is often implemented by Web browsers.

clipboard [boolean]

  If true, the MIME type is sometimes used in Web clipboard
  processing.

composite [boolean]

  Whether it is a composite type or not.

compressible

  Whether compression is appropriate for the type or not.  If |1|, it
  seems appropriate.  If |0|, in appropriate.  Otherwise, unknown.

corb_protected [string?]

  Whether the MIME type is a CORS-protected MIME type
  <https://fetch.spec.whatwg.org/#corb-protected-mime-type> or not.
  If |1|, it is a CORB-protected MIME type unless otherwise specified.
  If |false|, it is NOT a CORB-protected MIME type.  If |depends|, it
  is NOT a CORB-protected MIME type but the CORB check steps can
  sometimes return *blocked*.

cors_exception [boolean]

  Whether the MIME type is one of CORS protocol exceptions
  <https://fetch.spec.whatwg.org/#cors-protocol-exceptions> or not.

default_disposition [string?]

  Default disposition-type (c.f. |Content-Disposition:| header) for
  the MIME type, if defined.

deprecated [string?]

  If the MIME type SHOULD NOT be used, the value |SHOULD| is set.
  Otherwise, if the MIME type is marked as obsolete, the value
  |obsolete| is set.  Otherwise, if the MIME type is marked as
  deprecated, the value |deprecated| is set.

  See also |obsolete| field, which should be used to determine whether
  the MIME type is obsolete or not.  That field reflects more sources
  than this field on obsoleteness.

der [boolean]

  Whether it is a DER (Distinguished Encoding Rules) type or not.
  This flag is not set for MIME types with the |+der| structured
  syntax suffix.

dnd [boolean]

  If true, the MIME type is sometimes used in Web drag and drop
  processing.

extensions [object?]

  List of commonly-used file name extensions (without preceding |.|
  character), given as extension/boolean-true pairs.

font [boolean]

  Whether it is a font MIME type
  <https://mimesniff.spec.whatwg.org/#font-mime-type> or not.

form_data [boolean]

  Whether it is used to represent a form data set or not.

fragment [string?]

  Semantics and syntax of fragment identifiers for this MIME type, if
  known, using one of following value:

    |xpointer:rfc7303|   XPointer, as specified in RFC 7303.

gpx [boolean]

  Whether it is a GPX MIME type
  <https://wiki.suikawiki.org/n/GPX%20Parsing#dfn-GPX%20MIME%20types>
  or not.

html [boolean]

  Whether it is an HTML MIME type
  <https://html.spec.whatwg.org/#html-mime-type> or not.

http [boolean]

  Whether it is used as part of HTTP protocol or not.

httpd_handler [boolean]

  Whether it is used to enable some server-side processor module by
  HTTP servers (somewhat equivalent to specifying Apache |AddHandler|
  directive).

iana [string?]

  If a value is specified, the MIME type is registered with the IANA
  registry.

    |permanent|     Registered in the main registry.
    |provisional|   Registered in the provisional registry.

iana_intended_usage [string?]

  The "intended usage" as described in the IANA Media Type
  registration template.  The value, if specified, is one of the
  following values:

    |common|        Common.
    |limited use|   Limited use.
    |obsolete|      Obsolete.

iana_template_url [string?]

  The URL of the IANA Media Type registration template document, if
  exists.

image [boolean]

  Whether it is an image type
  <https://mimesniff.spec.whatwg.org/#image-type> or not.  Note that
  this flag is not set for indivisual subtypes in the |image| type.

json [boolean]

  Whether it is a JSON MIME type
  <https://html.spec.whatwg.org/#json-mime-type> or not.  Note that
  this flag is not set for indivisual MIME types with the |+json|
  structured syntax suffix.

label [string?]

  A short human-readable description for the MIME type, in English, if
  available.

mac_creators [object?]

  Containing pairs of typical Macintosh creator identifiers for the
  MIME type and boolean true values.

mac_types [object?]

  Containing pairs of typical Macintosh file types for the MIME type
  and boolean true values.

navigate_text [boolean]

  Whether the "navigate" algorithm handles the MIME type as a plain
  text type or not.  This flag is not set for MIME types with the
  |+json| structured syntax suffix.  Note that this flag does not take
  explicitly supported JSON types into account.

no_plugin [boolean]

  Whether the MIME type is disallowed to register a plugin or not
  <https://html.spec.whatwg.org/#plugin>.

not_script [boolean]

  Whether the MIME type should not be treated as a script
  <https://fetch.spec.whatwg.org/#should-response-to-request-be-blocked-due-to-mime-type?>
  or not.

obsolete [boolean]

  Whether the MIME type is obsolete or not.

params [object?]

  Known parameters.  Names are parameter names (attributes) in
  lowercase and values are JSON objects describing them, using
  following name/value pair:

    charset_rfc7303 [boolean]

      Whether the parameter is a |charset| parameter as specified in
      RFC 7303 (i.e. the |charset| parameter for XML MIME types) or
      not.

    charset_xml [boolean]

      Whether the parameter is a |charset| parameter for XML MIME
      types or not.

    values

      Known values for the parameter.  Names are values and values are
      their descriptions, as [protocol-object] values.

plugin [boolean]

  If true, the type is used by some Web plugin.

preferred_cte [string?]

  Preferred content transfer encoding for 7-bit transport.  Either
  |quoted-printable| or |base64|, if specified.

preferred_type [string?]

  Preferred MIME type (type/subtype pair, in lowercase).  See also
  |deprecated| for the level of "prefer".

related [object?]

  Related MIME types.  Names are MIME types in lowercase and values
  are descriptions of their relationships, as JSON objects.

scriptable [boolean]

  Whether it is a scriptable MIME type or not
  <https://mimesniff.spec.whatwg.org/#scriptable-mime-type>.  This
  flag is not set for MIME types with the |+xml| structured syntax
  suffix.

script_data_block [boolean]

  If the flag is set, the MIME type is intended for or sometimes used
  in the |type| attribute of the |script| element that is a data
  block.

scripting_language [string?]

  How the MIME type is interpreted in the context of the script
  language determination
  <https://html.spec.whatwg.org/#scriptingLanguages>.

  If the value is "javascript", the MIME type must be recognized as
  JavaScript (i.e. it is a JavaScript MIME type).

  If the value is "no", the MIME type must not be interpreted as a
  script language (but interpreted as a format for data block).

  If the value is "yes", the MIME type is used for some script
  language.

serviceworker [boolean]

  Whether the MIME type is allowed as a service worker script's MIME
  type or not.

sip [boolean]

  Whether the MIME type is used in SIP or not.

structured_syntax_type [string?]

  If it is a structured syntax suffix, a standalone MIME type for the
  structured syntax (with no specific application format semantics),
  in lowercase canonical form.

styling [boolean]

  Whether it is a styling language or not.

text [boolean]

  Whether it is a text-based MIME type or not.  This flag is not set
  for MIME types in |text/*|, |message/*|, or |multipart/*| type, or
  with the |+xml|, |+csv|, or |+json| structured syntax suffix.

type [string]

  The type of the value, one of:

    |type|              A type used in type/subtype pair, followed by |/*|.
    |subtype|           A type/subtype pair.
    |type_only|         The (non-conforming) type value, used alone with
                        no following subtype.  Some of values of this type
                        come from RFC 1049.
    |type_only_pattern| Same as |type_only| but represents a set of types
                        rather than a single type, using |*| as wildcard.
    |suffix|            |*/*+| followed by a structured syntax suffix.

xml [boolean]

  Whether it is an XML type or not
  <https://mimesniff.spec.whatwg.org/#xml-type>.  This flag is not set
  for MIME types with the |+xml| structured syntax suffix.

xpointer_schemes [object?]

  If fragment identifiers are interpreted as XPointer for this MIME
  type, requirements for XPointer schemes.  It is represented as a
  JSON object whose names are namespace URLs of XPointer schemes and
  values are JSON objects for the namespaces, whose names are local
  names of XPointer schemes and values are strings representing
  requirements for the XPointer schemes, which are one of following
  values:

    |MUST|   The XPointer scheme must be supported.
    |MAY|    The XPointer scheme may be supported.

  There are two special namespace values.  The empty string represents
  the null namespace.  If the namespace is |#| and the local name is
  |other|, the value is applied to any XPointer scheme not explicitly
  mentioned by other values.  If the namespace is |#| and the local
  name is |shorthand|, the value is applied to shorthand pointers
  rather than XPointer scheme.

zip [boolean]

  Whether it is a ZIP-based type or not
  <https://mimesniff.spec.whatwg.org/#zip-based-type>.  This flag is
  not set for MIME types with the |+zip| structured syntax suffix.

* Sources

MIME Sniffing Standard <https://mimesniff.spec.whatwg.org/>.

Media Types
<https://www.iana.org/assignments/media-types/media-types.xml>.

Provisional Standard Media Type Registry
<https://www.iana.org/assignments/provisional-standard-media-types/provisional-standard-media-types.xhtml>.

Structured Syntax Suffix Registry
<https://www.iana.org/assignments/media-type-structured-suffix/media-type-structured-suffix.xhtml>.

HTML Standard <https://html.spec.whatwg.org/>.

Service Workers <https://w3c.github.io/ServiceWorker/>.

List of MIME types
<https://wiki.suikawiki.org/n/List%20of%20MIME%20types>.

mime.types
<http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types>.

mime-db <https://github.com/jshttp/mime-db>.

mime-types-data <https://github.com/mime-types/mime-types-data>.

Fetch Standard <https://fetch.spec.whatwg.org/>.

* License

You are granted a license to use, reproduce, and create derivative
works of the JSON file and this document.

Per CC0 <https://creativecommons.org/publicdomain/zero/1.0/>, to the
extent possible under law, the author of the JSON file and this
document has waived all copyright and related or neighboring rights to
the JSON file and this document.

The JSON file contains data extracted from mime-db
<https://github.com/jshttp/mime-db/>.

<https://github.com/jshttp/mime-db/blob/master/LICENSE>
----------
The MIT License (MIT)

Copyright (c) 2014 Jonathan Ong me@jongleberry.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
----------

The JSON file contains data extracted from mime-types-data
<https://github.com/mime-types/mime-types-data>.

<https://github.com/mime-types/mime-types-data/blob/master/Licence.md>
----------
Copyright 2003–2015 Austin Ziegler.

The software in this repository is made available under the MIT license.

MIT License

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
----------
